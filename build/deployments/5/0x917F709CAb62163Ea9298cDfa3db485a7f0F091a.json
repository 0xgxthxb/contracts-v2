{"allSourcePaths": {"34": "contracts/external/actions/TradingAction.sol", "89": "contracts/math/ABDKMath64x64.sol", "68": "contracts/internal/balances/protocols/AaveHandler.sol", "63": "contracts/global/Types.sol", "64": "contracts/internal/AccountContextHandler.sol", "86": "contracts/internal/valuation/AssetHandler.sol", "74": "contracts/internal/markets/AssetRate.sol", "152": "interfaces/notional/AssetRateAdapter.sol", "65": "contracts/internal/balances/BalanceHandler.sol", "90": "contracts/math/Bitmap.sol", "81": "contracts/internal/portfolio/BitmapAssetsHandler.sol", "148": "interfaces/compound/CErc20Interface.sol", "149": "interfaces/compound/CEtherInterface.sol", "150": "interfaces/compound/CTokenInterface.sol", "75": "contracts/internal/markets/CashGroup.sol", "69": "contracts/internal/balances/protocols/CompoundHandler.sol", "58": "contracts/global/Constants.sol", "76": "contracts/internal/markets/DateTime.sol", "59": "contracts/global/Deployments.sol", "91": "contracts/math/FloatingPoint56.sol", "70": "contracts/internal/balances/protocols/GenericToken.sol", "138": "interfaces/IEIP20NonStandard.sol", "144": "interfaces/aave/ILendingPool.sol", "154": "interfaces/notional/IRewarder.sol", "66": "contracts/internal/balances/Incentives.sol", "60": "contracts/global/LibStorage.sol", "77": "contracts/internal/markets/Market.sol", "21": "contracts/external/MigrateIncentives.sol", "82": "contracts/internal/portfolio/PortfolioHandler.sol", "92": "contracts/math/SafeInt256.sol", "6": "C:/Users/weiti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/math/SafeMath.sol", "24": "contracts/external/SettleAssetsExternal.sol", "84": "contracts/internal/settlement/SettleBitmapAssets.sol", "85": "contracts/internal/settlement/SettlePortfolioAssets.sol", "67": "contracts/internal/balances/TokenHandler.sol", "83": "contracts/internal/portfolio/TransferAssets.sol", "79": "contracts/internal/nToken/nTokenHandler.sol", "80": "contracts/internal/nToken/nTokenSupply.sol"}, "bytecode": "615326610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80633643f39b14610045578063b58f83ed1461007c575b600080fd5b81801561005157600080fd5b50610065610060366004614c84565b6100aa565b604051610073929190614e87565b60405180910390f35b81801561008857600080fd5b5061009c610097366004614b88565b610181565b60405161007392919061520e565b60008060006100b8876102a7565b90506100c26148a0565b60006100cc6148e8565b4260a082015260005b8781101561016b5760006101028d87878d8d878181106100f157fe5b905060200201358760a001516102d3565b856000018660200182815250828152508293505050506101348d8d61ffff16838e64ffffffffff1687602001516103f3565b60208401528380610149575060008360200151125b8351606085015191955061015d9190610560565b6060840152506001016100d5565b50606001519450925050505b9550959350505050565b61018961491e565b600080610195876102a7565b905061019f6148a0565b6101a76148e8565b4260a082015260005b868110156102925760008888838181106101c657fe5b9050602002013560f81c60ff1660058111156101de57fe5b905060028160058111156101ee57fe5b14806102055750600381600581111561020357fe5b145b1561022b5760405162461bcd60e51b81526004016102229061515c565b60405180910390fd5b60006102508d87878d8d8881811061023f57fe5b905060200201358860a001516102d3565b60208701819052908652909150610273908c9061ffff8f1690849060019061057c565b508251606084015161028491610560565b6060840152506001016101b0565b50606001519699969850959650505050505050565b6102af614946565b60006102be8361ffff16610681565b90506102ca83826106cd565b9150505b919050565b600080808060f886901c60058111156102e857fe5b905060048160058111156102f857fe5b14156103165761030a89898789610710565b919550935091506103e7565b600581600581111561032457fe5b14156103365761030a898987896108fa565b600081600581111561034457fe5b148061035b5750600181600581111561035957fe5b145b156103cf5761036d888883888a610b73565b809350819450505086602001519350876000015161ffff16896001600160a01b03167fc53d733b6fdfac3f892b49bf468cd1cae7773ab553e440dc689ed6b09bb646b18686866040516103c293929190615266565b60405180910390a36103e7565b60405162461bcd60e51b815260040161022290615099565b50955095509592505050565b6000806104008787610c7e565b9050600061040c610cb3565b6001600160a01b0389166000908152602082815260408083208b845282528083208a8452909152812091925080610443888a610cc0565b915091508061045157600080fd5b61045b8583610dcb565b156104ea578254600090610477908990600f90810b900b610560565b905060016001607f1b03198112801590610498575060016001607f1b038113155b6104a157600080fd5b83546001600160801b0319166001600160801b03600f83900b16178455806104d2576104cf86846000610dfb565b95505b6104dd8c8c88610e49565b9550610557945050505050565b861561054e5760016001607f1b0319871280159061050f575060016001607f1b038713155b61051857600080fd5b82546001600160801b0319166001600160801b03600f89900b1617835561054185836001610dfb565b945061054e8b8b87610e49565b86955050505050505b95945050505050565b8181018281121560008312151461057657600080fd5b92915050565b845161058b9085858585610ea3565b156105955761067a565b6040850151156105c25760006105b2866020015186868686610ea3565b905080156105c0575061067a565b505b6105cb82610fb4565b156105de5760008112156105de57600080fd5b6001600160571b031981128015906105fd57506001600160571b038113155b61060657600080fd5b8460200151518560400151141561062a576106248560200151610fca565b60208601525b6000856020015186604001518151811061064057fe5b602090810291909101810151868152908101859052604080820185905260608201849052600060a090920191909152860180516001019052505b5050505050565b610689614972565b600080600061069785611083565b604080516060810182526001600160a01b039093168352602083019390935260ff16600a0a918101919091529350505050919050565b6106d5614946565b60006106e48461ffff16611146565b6040805160808101825261ffff96909616865260ff821660208701528501939093525050606082015290565b6000808063ffffffff60d885901c16608085901c600a0b8682116107465760405162461bcd60e51b815260040161022290615017565b61075588602001518389611163565b156107725760405162461bcd60e51b815260040161022290614ed5565b6000610785896000015161ffff16611208565b90506000806107938361122e565b945050935050506107ba81600260ff16600581106107ad57fe5b8491610e10911a02611297565b8a116107d85760405162461bcd60e51b8152600401610222906150c5565b60006107ed848d6000015161ffff16886112f1565b90506000811280156107ff5750600085125b156108155780851215610810578094505b610852565b6000811380156108255750600085135b1561083a578085131561081057809450610852565b60405162461bcd60e51b815260040161022290614f0c565b600061086b8d888e896001600160d81b03198816611336565b9050610883858e6000015161ffff1689878a866113bd565b8d6001600160a01b03168764ffffffffff168e6000015161ffff167fe85dd6c9c85c29a2f4d4cb74e31514bfc478c8c5a50da255ea565123d879335289856040516108cf929190614e97565b60405180910390a4866108e182611442565b87995099509950505050505050505b9450945094915050565b60008080605884901c6001600160a01b03888116908216141561092f5760405162461bcd60e51b8152600401610222906151b5565b6001600160581b038516600061094483611450565b905061094f816114f1565b156109e0576040516337b5fc2160e11b815273__SettleAssetsExternal__________________90636f6bf8429061098d9086908590600401614e12565b60a06040518083038186803b1580156109a557600080fd5b505af41580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190614d03565b90505b6109ec838a8484611545565b915060006276a7006109fd8a611678565b0190506000610a0e8b838c87611699565b90506000811215610a1e57600080fd5b604080516001808252818301909252600091816020015b610a3d61499c565b815260200190600190039081610a355790505090508b6000015161ffff1681600081518110610a6857fe5b602002602001015160000181815250508281600081518110610a8657fe5b60200260200101516020018181525050610a9f82611442565b81600081518110610aac57fe5b60200260200101516060018181525050600160ff1681600081518110610ace57fe5b60200260200101516040018181525050610ae98685836116f9565b9350610af79050838661177a565b8b6001600160a01b03168b6000015161ffff16866001600160a01b03167fc76e4e38ccd25a7b0a39cdaa81a20efa0c2127e74c448b7b05aef1c427d5732b87610b3f86611442565b604051610b4d929190614e97565b60405180910390a481610b5f85611442565b909d909c50909a5098505050505050505050565b60008060ff60f084901c16610b8b888883858961187e565b6001600160581b03609885901c1691506001866005811115610ba957fe5b1415610bbb57610bb882611442565b91505b610be18883610bd7888b602001516118f990919063ffffffff16565b8a92919085611956565b925082610c005760405162461bcd60e51b815260040161022290614fb7565b63ffffffff607885901c168015610c72576001876005811115610c1f57fe5b1415610c4e57808860a001511115610c495760405162461bcd60e51b81526004016102229061512c565b610c72565b808860a001511015610c725760405162461bcd60e51b81526004016102229061512c565b50509550959350505050565b600080610c896119b5565b6001600160a01b038516600090815260209182526040808220868352909252205491505092915050565b600080610576600c6119be565b6000806000610cce856119d7565b905062015180840615610ce8576000809250925050610dc4565b838110610cfc576000809250925050610dc4565b6201518081850304605a8111610d1957925060019150610dc49050565b6101688111610d58576000620151806207e900840604820160591901905060068104605a0160068281610d4857fe5b0660001494509450505050610dc4565b6108708111610d885760006201518062278d00840604820161016719019050601e8104608701601e8281610d4857fe5b611de28111610db8576000620151806276a700840604820161086f19019050605a810460c301605a8281610d4857fe5b61010060009350935050505b9250929050565b600060018210158015610de057506101008211155b610de957600080fd5b50600019011b600160ff1b9081161490565b600060018310158015610e1057506101008311155b610e1957600080fd5b8115610e325750600160ff1b60001983011c8317610e42565b50600160ff1b60001983011c1983165b9392505050565b6014610e54826119f3565b1115610e725760405162461bcd60e51b815260040161022290614fee565b6000610e7c6119b5565b6001600160a01b039094166000908152602094855260408082209482529390945250912055565b6000805b8651811015610fa7576000878281518110610ebe57fe5b60200260200101519050848160400151141580610edc575080518714155b80610eeb575085816020015114155b15610ef65750610f9f565b60028160a001516003811115610f0857fe5b14158015610f26575060038160a001516003811115610f2357fe5b14155b610f2f57600080fd5b6060810151600090610f419086610560565b9050610f4c86610fb4565b15610f5f576000811215610f5f57600080fd5b6001600160571b03198112801590610f7e57506001600160571b038113155b610f8757600080fd5b6060820152600160a090910181905291506105579050565b600101610ea7565b5060009695505050505050565b6000600282108015906105765750506008101590565b606060008251600014610fe1578251600202610fe4565b60015b905060008167ffffffffffffffff81118015610fff57600080fd5b5060405190808252806020026020018201604052801561103957816020015b61102661499c565b81526020019060019003908161101e5790505b50905060005b845181101561107b5784818151811061105457fe5b602002602001015182828151811061106857fe5b602090810291909101015260010161103f565b509392505050565b600080600080600061109486611ac3565b909250905060006001600160a01b0383166110b95750600090506402540be40061113b565b826001600160a01b0316631ee108336040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110f457600080fd5b505af1158015611108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112c9190614ceb565b90506000811361113b57600080fd5b969195509350915050565b600080611151611afa565b60009384526020525050604090205490565b60008084116111845760405162461bcd60e51b815260040161022290614f34565b60078411156111a55760405162461bcd60e51b815260040161022290615041565b6276a7008306156111b857506000610e42565b60006111c383611678565b905060015b8581116111fc576111e26111db82611b07565b8390611297565b8514156111f457600192505050610e42565b6001016111c8565b50600095945050505050565b600080611213611bab565b6000938452602052505060409020546001600160a01b031690565b60008060008060008061123f611bb8565b6001600160a01b039097166000908152602097909752505060409094205461ffff81169563ffffffff62010000830481169650600160301b830416945060ff600160501b8304169350600160581b90910460d81b9150565b600082820183811015610e42576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000806112fc610cb3565b6001600160a01b03861660009081526020918252604080822087835283528082208683529092522054600f90810b900b9150509392505050565b600080611344878787611bc5565b9050600483901a620f424002600085131561136a576113638282611297565b9150611381565b8082111561137c5761136382826118f9565b600091505b6000611396836113918a8a6118f9565b611cae565b90506113b06113a58783611d1f565b60408b015190611d38565b9998505050505050505050565b60006113d4878787876113cf88611442565b6103f3565b90506000831380156113e7575060008112155b806113fe57506000831280156113fe575060008113155b61140757600080fd5b60006114138888611d77565b505050905061142b838261056090919063ffffffff16565b9050611438888883611e20565b5050505050505050565b600061057660001983611e43565b6114586149dc565b6000611462611e91565b6001600160a01b039390931660009081526020938452604090819020815160a081018352905464ffffffffff8116825265010000000000810460f81b6001600160f81b03191695820195909552600160301b850460ff1691810191909152600160381b840461ffff166060820152600160481b90930460701b6001600160701b03191660808401525090919050565b6000426114fd83611e9e565b1561151e5761150b816119d7565b835164ffffffffff161091506102ce9050565b825164ffffffffff161580159061153d5750825164ffffffffff168110155b9150506102ce565b60008083121561155457600080fd5b60008060008061156c89896000015161ffff16611d77565b9350935093509350600084126115945760405162461bcd60e51b8152600401610222906150fc565b866115ad576115a284611442565b9650600093506115e2565b6115b684611442565b8713156115d55760405162461bcd60e51b81526004016102229061517e565b6115df8488610560565b93505b831580156115ee575082155b1561160b57875161160b90879061ffff166000600160fe1b611eab565b61162189896000015161ffff16868686866120ab565b876000015161ffff16896001600160a01b03167f5441e4a5fac93a951d782e6f1cdb82e95c8fc58561a013953d17e395c5e69b4b896040516116639190614e7e565b60405180910390a35094979650505050505050565b60006276a70082101561168a57600080fd5b6276a700825b06909103919050565b6000806116a7868686611bc5565b905060006116cb6116c16116ba896121d2565b8490611297565b61139188886118f9565b90506116ee816116e8868a604001516121e790919063ffffffff16565b90612212565b979650505050505050565b6117016149dc565b61170a836114f1565b156117275760405162461bcd60e51b815260040161022290614f8a565b61173083611e9e565b156117455761174084848461222b565b611772565b600061175785856040015185516122ec565b9050611763818461237f565b61177084868360006123dd565b505b509092915050565b6000611784611e91565b6001600160a01b03831660008181526020838152604080832088518154938a0151838b015160608c015160808d015160701c600160481b027affffffffffffffffffffffffffffffffffff0000000000000000001961ffff909216600160381b0268ffff000000000000001960ff94909416600160301b0266ff0000000000001960f89690961c650100000000000265ff00000000001964ffffffffff90981664ffffffffff19909b169a909a1796909616989098179390931693909317169490941716929092179091555192935090917f6bd4b121bca854a191536a2ca891155c42ee2fb23f307fb34e8bc65cfcb5412e9190a2505050565b82600111158015611893575084602001518311155b6118af5760405162461bcd60e51b815260040161022290615071565b60006118cc6118bd85611b07565b6118c684611678565b90611297565b90506118f1866000015161ffff168284866118e68b6124bf565b8a94939291906124d3565b505050505050565b600082821115611950576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008061196687878787876124fd565b9092509050600061197688612600565b905061199a8189604001518a606001518b60a001518c60c001518d60e00151612604565b86516119aa9061ffff1683612718565b505095945050505050565b600080610576600b5b6000620f42408260128111156119d057fe5b0192915050565b6000620151808210156119e957600080fd5b6201518082611690565b600181901c7f5555555555555555555555555555555555555555555555555555555555555555908116911601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f07070707070707070707070707070707070707070707070707070707070707079190911601600881901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f908116911601601081901c01602081901c01604081901c01608081901c60ff90811691160190565b6000806000611ad061279f565b600094855260205250506040909120546001600160a01b03811692600160a01b90910460ff169150565b60008061057660096119be565b60008160011415611b1c57506276a7006102ce565b8160021415611b2f575062ed4e006102ce565b8160031415611b4357506301da9c006102ce565b8160041415611b5757506303b538006102ce565b8160051415611b6b57506309450c006102ce565b8160061415611b7f575063128a18006102ce565b8160071415611b93575063251430006102ce565b60405162461bcd60e51b815260040161022290614f63565b60008061057660036119be565b60008061057660026119be565b6000806000611bd9866020015186866127ac565b915091506000611be8876124bf565b905081611c0b578651611c019061ffff1687838861286d565b9350505050610e42565b6000611c1686611678565b90506000611c266111db86611b07565b90506000611c3e8a6000015161ffff1683868b61286d565b90506000808760011415611c6357899150611c5c8c6040015161290c565b9050611c92565b611c79611c7260018a03611b07565b8690611297565b9150611c8f8c6000015161ffff1683888d61286d565b90505b611c9f828583868f61299d565b98505050505050505050610e42565b600080611cd1611ccc6301da9c00611cc687876129fb565b90612a54565b612abb565b90506000611ce582621dcd6560491b612ad9565b90506000611cf282612b2c565b90506000611d0682621dcd6560491b612b81565b9050611d1181612bb7565b60070b979650505050505050565b6000610e42611d3284633b9aca00611e43565b83612bc0565b600080611d6f8460200151611d698660400151611d636402540be40088611e4390919063ffffffff16565b90611e43565b90612bc0565b949350505050565b6000806000806000611d87612bf1565b6001600160a01b0388166000908152602082815260408083208a8452909152902080546001600160501b0381169650600160501b900463ffffffff1694509091508315611df0578054611de990600160701b900466ffffffffffffff16612bfe565b9250611e05565b8054600160701b900466ffffffffffffff1692505b54600160a81b9004600a90810b900b97939650919450925050565b6000811215611e2e57600080fd5b611e3e83838360008060006120ab565b505050565b818102600019831415611e7357811580611e65575082828281611e6257fe5b05145b611e6e57600080fd5b610576565b821580611e88575081838281611e8557fe5b05145b61057657600080fd5b60008061057660016119be565b6060015161ffff16151590565b826000108015611ebd5750613fff8311155b611ec657600080fd5b818015611eda575082846060015161ffff16145b15611ee4576120a5565b6080840151600090815b6001600160701b031982161561205f5760f082901c613fff168681148015611f135750855b15611f4b57506080870180516001600160f01b0319861660109093029290921c919091176001600160701b0319169052506120a59050565b8681148015611f58575085155b15611fad576001600160f01b03198516199290921691600360fe1b8316611f8b576010836001600160701b031916901b92505b506001600160701b031991821660109091021c919091171660808501526120a5565b8681118015611fb95750855b15612013576080888101516001600160f01b031960f08a901b88178116601086021c9690961795911b1615611fed57600080fd5b506001600160701b03199182166001919091016010021c919091171660808501526120a5565b8681118015612020575085155b1561202e57505050506120a5565b506001600160f01b0319821660108281029190911c93909317929190911b6001600160801b03191690600101611eee565b8461206c575050506120a5565b6009811061207957600080fd5b6001600160f01b031960f087901b85171660109091021c919091176001600160701b0319166080860152505b50505050565b60006120b5612bf1565b6001600160a01b0388166000908152602082815260408083208a845290915290209091506001600160571b031986128015906120f857506001600160571b038613155b61210157600080fd5b6000851215801561211957506001600160501b038513155b61212257600080fd5b831561212d57600080fd5b66ffffffffffffff83111561214157600080fd5b805466ffffffffffffff909316600160701b0266ffffffffffffff60701b19600a9790970b6001600160581b0316600160a81b026001600160a81b0363ffffffff909616600160501b0263ffffffff60501b196001600160501b0390981669ffffffffffffffffffff1990961695909517969096169390931793909316939093179390931692909217909155505050565b606001516207a12060309190911c60ff160290565b600080611d6f8460400151611d696402540be400611d69878960200151611e4390919063ffffffff16565b6000610e426122218484611e43565b633b9aca00612bc0565b61223482611e9e565b61223d57600080fd5b606082015161ffff1660005b825181101561067a57600083828151811061226057fe5b6020026020010151905080606001516000141561227d57506122e4565b8051831461228a57600080fd5b604081015160011461229b57600080fd5b60006122bd87858460200151896000015164ffffffffff1686606001516103f3565b905060008112156122e157602086018051600160f81b176001600160f81b03191690525b50505b600101612249565b6122f461491e565b6122fc61491e565b60ff841661230b579050610e42565b6123158585612c0c565b815260ff841660608201528267ffffffffffffffff8111801561233757600080fd5b5060405190808252806020026020018201604052801561237157816020015b61235e61499c565b8152602001906001900390816123565790505b506020820152949350505050565b60005b8151811015611e3e57600082828151811061239957fe5b602002602001015190508060600151600014156123b657506123d5565b6123d384826000015183602001518460400151856060015161057c565b505b600101612382565b60008080806123ec8688612c35565b64ffffffffff81168c5292965090945092509050612409886114f1565b1561241357600080fd5b60ff821660408901528461243257600760ff8316111561243257600080fd5b831561245557602088018051600160f81b176001600160f81b0319169052612464565b602088018051607f60f91b1690525b6124718860800151612e74565b6001600160701b031916608089015260005b83156124b45760f084901c8181146124a6576124a68a826001600160ff1b611eab565b60109490941b939050612483565b505050505050505050565b6060015161012c60089190911c60ff160290565b60006276a7006124e285611678565b0190506124f487878787878787612eef565b50505050505050565b6000808487604001511361251657506000905080610177565b60008060006125278a8a8989612f26565b9250925092506000806125418c604001518587868e612fc6565b90925090508061255c57600080965096505050505050610177565b50600080600061256e8d858e8e613072565b9250925092508260001415612590576000809850985050505050505050610177565b60408e015161259f908d613162565b60408f018190526125bc906125b48885610560565b89888f61317e565b60a08f018190526125da576000809850985050505050505050610177565b6125eb8e8e6040015185858561323b565b98509850505050505050509550959350505050565b5190565b6000851215801561261c57506001600160501b038513155b61262557600080fd5b6000841215801561263d57506001600160501b038413155b61264657600080fd5b82600010801561265a575063ffffffff8311155b61266357600080fd5b816000108015612677575063ffffffff8211155b61268057600080fd5b63ffffffff81111561269157600080fd5b855469ffffffffffffffffffff19166001600160501b039586161769ffffffffffffffffffff60501b1916600160501b94909516939093029390931763ffffffff60a01b1916600160a01b63ffffffff928316021763ffffffff60c01b1916600160c01b93821693909302929092176001600160e01b0316600160e01b9190921602179055565b600081121561272657600080fd5b6000612733600084611d77565b505050905061274b828261056090919063ffffffff16565b905061275e6000848360008060006120ab565b8261ffff167f85170c297762884f47ec6098b74925c795e6d33686b11019b400e33a9b23b5e9836040516127929190614e7e565b60405180910390a2505050565b600080610576600f6119be565b600080600085116127cf5760405162461bcd60e51b815260040161022290614f34565b60078511156127f05760405162461bcd60e51b815260040161022290615041565b60006127fb84611678565b905060015b86811161284c5760006128156116ba83611b07565b90508681141561282d57509250600091506128659050565b8681111561284357509250600191506128659050565b50600101612800565b5060405162461bcd60e51b8152600401610222906151e1565b935093915050565b600080612878613290565b905060006276a70061288985611678565b6000898152602085815260408083208b84528252808320949093018083529390522080549192509063ffffffff600160a01b8204811691600160c01b8104821691600160e01b90910416816128f05760405162461bcd60e51b815260040161022290614ea5565b6128fd8184848c8c61329d565b9b9a5050505050505050505050565b80516000906001600160a01b0316612926575060006102ce565b600082600001516001600160a01b031663dd30a6666040518163ffffffff1660e01b815260040160206040518083038186803b15801561296557600080fd5b505afa158015612979573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e429190614ceb565b60008186106129ab57600080fd5b8482106129b757600080fd5b8383106129dd576129d6846118c6888803611cc68388038b88036129fb565b9050610557565b6129d66129f4878703611cc68688038a87036129fb565b85906118f9565b600082612a0a57506000610576565b82820282848281612a1757fe5b0414610e425760405162461bcd60e51b81526004018080602001828103825260218152602001806152d06021913960400191505060405180910390fd5b6000808211612aaa576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381612ab357fe5b049392505050565b6000677fffffffffffffff821115612ad257600080fd5b5060401b90565b600081600f0b60001415612aec57600080fd5b600082600f0b604085600f0b901b81612b0157fe5b05905060016001607f1b03198112801590612b23575060016001607f1b038113155b610e4257600080fd5b6000600160461b82600f0b12612b4157600080fd5b683fffffffffffffffff1982600f0b1215612b5e575060006102ce565b610576608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d613330565b6000600f83810b9083900b0260401d60016001607f1b03198112801590612b23575060016001607f1b03811315610e4257600080fd5b600f0b60401d90565b600081600019148015612bd65750600160ff1b83145b15612be057600080fd5b818381612be957fe5b059392505050565b60008061057660066119be565b600881901c60ff9091161b90565b60606000612c1a8484613dde565b90506001815111612c2c579050610576565b610e4281613f00565b6000808080808080805b895151811015612cc65760008a600001518281518110612c5b57fe5b60200260200101519050600380811115612c7157fe5b8160a001516003811115612c8157fe5b1415612c8c57600080fd5b60028160a001516003811115612c9e57fe5b14158015612cae57506060810151155b15612cbd57612cbd8b836140b9565b50600101612c3f565b5060005b895151811015612d695760008a600001518281518110612ce657fe5b6020026020010151905060026003811115612cfd57fe5b8160a001516003811115612d0d57fe5b1415612d2157608081015160009055612d60565b60018160a001516003811115612d3357fe5b1415612d4c57608081015180612d498382614209565b50505b612d588186868661432e565b919650945092505b50600101612cca565b5060608901516000612d79614391565b6001600160a01b038b1660009081526020829052604081209192505b8c6020015151811015612e435760008d602001518281518110612db457fe5b60200260200101519050806060015160001415612dd15750612e3b565b60028160a001516003811115612de357fe5b14158015612e01575060038160a001516003811115612dfe57fe5b14155b612e0a57600080fd5b612e168189898961432e565b91995097509550612e3381848760108110612e2d57fe5b01614209565b600185019450505b600101612d95565b5060108311158015612e5a575064ffffffffff8411155b612e6357600080fd5b50939a929950975095509350505050565b6000807f7fff7fff7fff7fff7fff7fff7fff7fff7fff00000000000000000000000000008316815b6001600160701b0319821615612ee657600160fe1b8281161415612ed0576001600160f01b03198216811c92909217916010015b6010826001600160701b031916901b9150612e9c565b50909392505050565b612efc878787868561439e565b612f158760e001518860a001518960c00151858861329d565b60c090970196909652505050505050565b6000808080612f36878688614458565b90506000612f55896060015189604001516121e790919063ffffffff16565b9050886040015160001480612f68575080155b15612f7f57600080600094509450945050506108f0565b600080612f978b604001518c60a0015185878d6144ca565b909250905080612fb5576000806000965096509650505050506108f0565b509199909850909650945050505050565b60008080612fd48885613162565b90506000612fec612fe58a8a610560565b8390611d1f565b9050633938700081131561300857600080935093505050610177565b6000806130148361455a565b915091508061302d576000809550955050505050610177565b60006130438961303d858d611d1f565b90610560565b9050633b9aca0081121561306257600080965096505050505050610177565b9550600194506101779350505050565b60008080806130896130848789611d1f565b611442565b9050600061309f6130998a6145fc565b87611cae565b905060008713156130f75760006130b68983611d1f565b9050633b9aca008112156130d75760008060009550955095505050506108f0565b6130ef6130e8633b9aca0084614611565b8490612212565b915050613119565b61311661308482611d6961310f633b9aca0083614611565b8690611e43565b90505b60006131336064611d6961312c8d614627565b8590611e43565b905061313f8383614611565b6131506130848361303d8787614611565b909b909a509098509650505050505050565b600061316e8383614611565b9050600081121561057657600080fd5b6000806000613191888888886000612fc6565b91509150806131a557600092505050610557565b60006131b083614634565b905060006131c482621dcd6560491b612ad9565b905060006131d182614660565b905060006131ed6131e883621dcd6560491b612b81565b61469a565b67ffffffffffffffff169050600061320d89611cc6846301da9c006129fb565b905063ffffffff81111561322b576000975050505050505050610557565b9c9b505050505050505050505050565b600080806132498786611d38565b606089015190915061325b9082610560565b60608901524260e089015260006132728886611d38565b905060006132808989611d38565b9a91995090975050505050505050565b600080610576600a6119be565b60008083116132ab57600080fd5b818611156132ba575083610557565b60006132c683886118f9565b9050838111156132d95785915050610557565b60006132ed85611cc684633b9aca006129fb565b905060006132ff633b9aca00836118f9565b90506000613322633b9aca00611cc66133188b866129fb565b6118c68d886129fb565b9a9950505050505050505050565b6000600160461b82600f0b1261334557600080fd5b683fffffffffffffffff1982600f0b1215613362575060006102ce565b6001607f1b60006001603f1b8416600f0b13156133905770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b13156133bd577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b13156133ea577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b13156134175770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315613444577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b131561347157700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b131561349e5770010163da9fb33356d84a66ae336dcdfa3f0260801c5b600083600160381b16600f0b13156134c757700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156134f35770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b131561351f577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b131561354b57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b1315613577577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b13156135a357700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b13156135cf5770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b13156135fb577001000162e525ee054754457d59952920260260801c5b600083600160301b16600f0b13156136245770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b131561364f577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b131561367a57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b13156136a55770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b13156136d057700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b13156136fb5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315613726577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b131561375157700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b131561377c577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b13156137a657700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156137d05770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b13156137fa577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156138245770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b131561384e577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b131561387857700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156138a25770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b13156138cc57700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156138f55770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b131561391e577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b131561394757700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b1315613970577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561399957700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156139c25770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b13156139eb577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b1315613a145770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b1315613a3c577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b1315613a6457700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b1315613a8c5770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b1315613ab457700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b1315613adc5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315613b04577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b1315613b2c57700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b1315613b54577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b1315613b7b57700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b1315613ba25770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315613bc9577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b1315613bf05770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315613c17577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b1315613c3e57700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b1315613c655770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b1315613c8c57700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b1315613cb25770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315613cd8577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b1315613cfe57700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315613d24577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b1315613d4a57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b1315613d705770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315613d96577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b1315613dbc5770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b0381111561057657600080fd5b606060108260ff161115613df157600080fd5b6000613dfb614391565b6001600160a01b038516600090815260208290526040812091925060ff851667ffffffffffffffff81118015613e3057600080fd5b50604051908082528060200260200182016040528015613e6a57816020015b613e5761499c565b815260200190600190039081613e4f5790505b50905060005b8560ff16811015613ef6576000838260108110613e8957fe5b0190506000838381518110613e9a57fe5b602090810291909101810151835461ffff8116825264ffffffffff620100008204169282019290925260ff600160381b8304166040820152600160401b909104600a90810b900b60608201526080019190915250600101613e70565b5095945050505050565b805160008167ffffffffffffffff81118015613f1b57600080fd5b50604051908082528060200260200182016040528015613f45578160200160208202803683370190505b50905060005b82811015613fa2576000848281518110613f6157fe5b60200260200101519050613f828160000151826020015183604001516146b6565b838381518110613f8e57fe5b602090810291909101015250600101613f4b565b5060015b828110156120a557805b600081118015613fe85750828181518110613fc757fe5b6020026020010151836001830381518110613fde57fe5b6020026020010151115b156140b057828181518110613ff957fe5b602002602001015183600183038151811061401057fe5b602002602001015184600184038151811061402757fe5b6020026020010185848151811061403a57fe5b602002602001018281525082815250505084818151811061405757fe5b602002602001015185600183038151811061406e57fe5b602002602001015186600184038151811061408557fe5b6020026020010187848151811061409857fe5b60209081029190910101919091525260001901613fb0565b50600101613fa6565b81515181106140c757600080fd5b60008260600151116140d857600080fd5b6000826000015182815181106140ea57fe5b602002602001015190506002600381111561410157fe5b8160a00151600381111561411157fe5b1415801561412f575060038160a00151600381111561412c57fe5b14155b61413857600080fd5b606083018051600019019052600080805b8551518110156141ab5760008660000151828151811061416557fe5b60200260200101519050828160800151118015614192575060028160a00151600381111561418f57fe5b14155b156141a257806080015192508193505b50600101614149565b50818414156141c4575050600260a09190910152614205565b6000856000015183815181106141d657fe5b602090810291909101015160808581018051918301805190915252600160a09182015260029401939093525050505b5050565b81511580159061421c57508151613fff10155b61422557600080fd5b816020015160001080156142425750602082015164ffffffffff10155b61424b57600080fd5b8160400151600010801561426457506040820151600810155b61426d57600080fd5b60608201516001600160571b031913801590614294575060608201516001600160571b0312155b61429d57600080fd5b8151815460208401516040850151606090950151600a0b6001600160581b0316600160401b0272ffffffffffffffffffffff00000000000000001960ff909616600160381b0267ff000000000000001964ffffffffff909316620100000266ffffffffff00001961ffff90961661ffff19909516949094179490941692909217169190911792909216919091179055565b60008060008061433d88614711565b905084158061434b57508085115b15614354578094505b8680614364575060008860600151125b965061ffff86161561437557600080fd5b50509451939560109390931c60f09490941b9390931793509150565b600080610576600d6119be565b60006143a8613290565b6000868152602082815260408083208884528252808320868452825291829020808a5290890187905280546001600160501b03808216938b0193909352600160501b810490921660608a015263ffffffff600160a01b8304811660a08b0152600160c01b8304811660c08b0152600160e01b90920490911660e08901529091508084156144475760018201546001600160501b03166080890152611438565b600060808901525050505050505050565b60008260011115801561446f575083602001518311155b61447857600080fd5b606084015160806008600019860102019060ff90821c16633b9aca000260006144b16144a386614778565b611d69846301da9c00611e43565b9050600081136144c057600080fd5b9695505050505050565b60008060006144d98785611cae565b9050633b9aca008112156144f4576000809250925050610177565b60008061450b6145048b8a610560565b8b90611d1f565b90506000806145198361455a565b915091508061453357600080965096505050505050610177565b614547614540838b611d1f565b8690614611565b9c60019c509a5050505050505050505050565b600080633b9aca00831415614574575060009050806145f7565b600061458e614587633b9aca0086614611565b8590611d1f565b9050600061459b82614634565b9050600081600f0b136145b6576000809350935050506145f7565b60006145ea6145e56145d96145ca85614660565b6814b927f32bffb83338614792565b621dcd6560491b612b81565b612bb7565b60070b9450600193505050505b915091565b60600151620186a060109190911c60ff160290565b8082038281131560008312151461057657600080fd5b6060015160181c60ff1690565b6000677fffffffffffffff1982121580156146575750677fffffffffffffff8213155b612ad257600080fd5b60008082600f0b1361467157600080fd5b608061467c836147c5565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b60008082600f0b12156146ac57600080fd5b50600f0b60401d90565b6000613fff8411156146c757600080fd5b64ffffffffff8311156146d957600080fd5b60088211156146e757600080fd5b5067ffff000000000000603084901b1665ffffffffff00600884901b161760ff8216179392505050565b600080826040015111801561472b57506040820151600810155b61473457600080fd5b604082015160021061474b575060208101516102ce565b600061475d6001846040015103611b07565b60208401519091506102ca906276a700906118c690846118f9565b60006001600160ff1b0382111561478e57600080fd5b5090565b6000600f82810b9084900b0360016001607f1b03198112801590612b23575060016001607f1b03811315610e4257600080fd5b60008082600f0b136147d657600080fd5b6000600f83900b600160401b81126147f0576040918201911d5b6401000000008112614804576020918201911d5b620100008112614816576010918201911d5b6101008112614827576008918201911d5b60108112614837576004918201911d5b60048112614847576002918201911d5b60028112614856576001820191505b603f19820160401b600f85900b607f8490031b6001603f1b5b60008113156148955790800260ff81901c8281029390930192607f011c9060011d61486f565b509095945050505050565b60405180610100016040528060008019168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b6040805160808101825260008082526020820152908101614965614972565b8152600060209091015290565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600060038111156149d757fe5b905290565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b80356001600160a01b03811681146102ce57600080fd5b60008083601f840112614a32578081fd5b50813567ffffffffffffffff811115614a49578182fd5b6020830191508360208083028501011115610dc457600080fd5b600082601f830112614a73578081fd5b8135602067ffffffffffffffff80831115614a8a57fe5b614a978283850201615285565b8381528281019086840160c0808702890186018a1015614ab5578788fd5b875b87811015614b365781838c031215614acd578889fd5b604080518381018181108982111715614ae257fe5b82528435815288850135898201528482013591810191909152606080850135908201526080808501359082015260a090614b1d828601614b5d565b9181019190915285529386019391810191600101614ab7565b50919998505050505050505050565b80516001600160701b0319811681146102ce57600080fd5b8035600481106102ce57600080fd5b80516102ce816152a9565b805160ff811681146102ce57600080fd5b600080600080600060808688031215614b9f578081fd5b614ba886614a0a565b94506020860135614bb8816152a9565b9350604086013567ffffffffffffffff80821115614bd4578283fd5b908701906080828a031215614be7578283fd5b604051608081018181108382111715614bfc57fe5b604052823582811115614c0d578485fd5b614c198b828601614a63565b825250602083013582811115614c2d578485fd5b614c398b828601614a63565b60208301525060408381013590820152606092830135838201529450908701359080821115614c66578283fd5b50614c7388828901614a21565b969995985093965092949392505050565b600080600080600060808688031215614c9b578081fd5b614ca486614a0a565b94506020860135614cb4816152a9565b93506040860135614cc4816152bc565b9250606086013567ffffffffffffffff811115614cdf578182fd5b614c7388828901614a21565b600060208284031215614cfc578081fd5b5051919050565b600060a08284031215614d14578081fd5b60405160a0810181811067ffffffffffffffff82111715614d3157fe5b6040528251614d3f816152bc565b815260208301516001600160f81b031981168114614d5b578283fd5b6020820152614d6c60408401614b77565b6040820152614d7d60608401614b6c565b6060820152614d8e60808401614b45565b60808201529392505050565b6000815180845260208085019450808401835b83811015614e0757815180518852838101518489015260408082015190890152606080820151908901526080808201519089015260a0908101519060048210614df257fe5b88015260c09096019590820190600101614dad565b509495945050505050565b6001600160a01b03929092168252805164ffffffffff166020808401919091528101516001600160f81b03191660408084019190915281015160ff1660608084019190915281015161ffff1660808084019190915201516001600160701b03191660a082015260c00190565b90815260200190565b9182521515602082015260400190565b918252602082015260400190565b60208082526016908201527513585c9ad95d081b9bdd081a5b9a5d1a585b1a5e995960521b604082015260600190565b6020808252601a908201527f4e6f6e206964696f73796e637261746963206d61747572697479000000000000604082015260600190565b6020808252600e908201526d125b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b60208082526015908201527410d1ce881b9bc81b585c9ad95d1cc81b1a5cdd1959605a1b604082015260600190565b6020808252600d908201526c092dcecc2d8d2c840d2dcc8caf609b1b604082015260600190565b6020808252601390820152724163636f756e74206d75737420736574746c6560681b604082015260600190565b60208082526017908201527f5472616465206661696c65642c206c6971756964697479000000000000000000604082015260600190565b6020808252600f908201526e4f766572206d61782061737365747360881b604082015260600190565b60208082526010908201526f496e76616c6964206d6174757269747960801b604082015260600190565b60208082526016908201527510d1ce881b585c9ad95d081a5b99195e08189bdd5b9960521b604082015260600190565b6020808252600e908201526d125b9d985b1a59081b585c9ad95d60921b604082015260600190565b602080825260129082015271496e76616c6964207472616465207479706560701b604082015260600190565b60208082526017908201527f496e73756666696369656e7420626c6f636b2074696d65000000000000000000604082015260600190565b602080825260169082015275496e76616c696420736574746c652062616c616e636560501b604082015260600190565b6020808252601690820152755472616465206661696c65642c20736c69707061676560501b604082015260600190565b602080825260089082015267111a5cd8589b195960c21b604082015260600190565b60208082526018908201527f496e76616c696420616d6f756e7420746f20736574746c650000000000000000604082015260600190565b60208082526012908201527121b0b73737ba1039b2ba3a36329039b2b63360711b604082015260600190565b60208082526013908201527210d1ce881b9bc81b585c9ad95d08199bdd5b99606a1b604082015260600190565b60006040825283516080604084015261522a60c0840182614d9a565b90506020850151603f198483030160608501526152478282614d9a565b6040870151608086015260609096015160a08501525050506020015290565b64ffffffffff9390931683526020830191909152604082015260600190565b60405181810167ffffffffffffffff811182821017156152a157fe5b604052919050565b61ffff811681146152b957600080fd5b50565b64ffffffffff811681146152b957600080fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220e9eacbcc1e20bbce01ea69fe1bd556ee0d3e3b3f252d866982dacc698caf756d64736f6c63430007060033", "bytecodeSha1": "7e080a584969d62eb46f652e127f3df935a55fc5", "coverageMap": {"statements": {"34": {"TradingAction.executeTradesBitmapBatch": {"0": [2828, 2857], "1": [2956, 3151], "2": [3166, 3378], "3": [3393, 3443], "4": [3457, 3490], "5": [2907, 2910], "6": [3511, 3543]}, "TradingAction.executeTradesArrayBatch": {"7": [4392, 4421], "8": [4742, 4760], "9": [5371, 5590], "10": [5609, 5795], "11": [5824, 5857], "12": [4471, 4474], "13": [5878, 5912]}, "TradingAction._executeTrade": {"15": [6965, 7142], "16": [7222, 7313], "17": [7422, 7615], "18": [7807, 7833], "19": [7847, 8043], "20": [8074, 8102]}, "TradingAction._purchaseNTokenResidual": {"46": [19365, 19414], "47": [19561, 19712], "48": [20711, 20949], "49": [21347, 21379], "50": [21574, 21606], "51": [21709, 21733], "52": [22204, 22419], "53": [22430, 22629], "54": [22640, 22706]}, "TradingAction._settleCashDebt": {"55": [14652, 14706], "56": [14964, 15055], "57": [15406, 15602], "58": [16075, 16100], "59": [16525, 16568], "60": [16582, 16621], "61": [16635, 16673], "62": [16738, 16786], "63": [16858, 17020], "64": [17040, 17091], "65": [17102, 17285], "66": [17296, 17363]}, "TradingAction._executeLendBorrowTrade": {"67": [12555, 12614], "68": [12625, 12675], "69": [12776, 12807], "70": [12818, 12977], "71": [12987, 13038], "72": [13269, 13339], "73": [13437, 13507]}, "TradingAction._getResidualPriceAssetCash": {"121": [23568, 23614], "122": [23864, 23910], "123": [24043, 24057], "124": [24307, 24413]}, "TradingAction._updateNTokenPortfolio": {"125": [25021, 25166], "126": [25439, 25500], "127": [25577, 25664]}, "TradingAction._getfCashSettleAmount": {"144": [18124, 18348]}}, "89": {"ABDKMath64x64.fromUInt": {"293": [1997, 2030], "294": [2036, 2059]}, "ABDKMath64x64.div": {"295": [6744, 6760], "296": [6810, 6862]}, "ABDKMath64x64.exp": {"297": [21402, 21436], "298": [21486, 21494], "299": [21514, 21602]}, "ABDKMath64x64.mul": {"300": [4300, 4352]}, "ABDKMath64x64.toInt": {"301": [1674, 1696]}, "ABDKMath64x64.exp_2": {"350": [14701, 14735], "351": [14785, 14793], "352": [14909, 14969], "353": [15013, 15073], "354": [15117, 15177], "355": [15221, 15281], "356": [15324, 15384], "357": [15427, 15487], "358": [15530, 15590], "359": [15633, 15693], "360": [15735, 15795], "361": [15837, 15897], "362": [15939, 15999], "363": [16041, 16101], "364": [16142, 16202], "365": [16243, 16303], "366": [16344, 16404], "367": [16445, 16505], "368": [16545, 16605], "369": [16645, 16705], "370": [16745, 16805], "371": [16845, 16905], "372": [16944, 17004], "373": [17043, 17103], "374": [17142, 17202], "375": [17241, 17301], "376": [17339, 17399], "377": [17437, 17497], "378": [17535, 17595], "379": [17633, 17693], "380": [17730, 17790], "381": [17827, 17887], "382": [17924, 17984], "383": [18021, 18081], "384": [18117, 18177], "385": [18213, 18273], "386": [18309, 18369], "387": [18405, 18465], "388": [18500, 18560], "389": [18595, 18655], "390": [18690, 18750], "391": [18785, 18845], "392": [18879, 18939], "393": [18973, 19033], "394": [19067, 19127], "395": [19161, 19221], "396": [19254, 19314], "397": [19347, 19407], "398": [19440, 19500], "399": [19533, 19593], "400": [19625, 19685], "401": [19717, 19777], "402": [19809, 19869], "403": [19901, 19961], "404": [19992, 20052], "405": [20083, 20143], "406": [20174, 20234], "407": [20265, 20325], "408": [20355, 20415], "409": [20445, 20505], "410": [20535, 20595], "411": [20625, 20685], "412": [20714, 20774], "413": [20803, 20863], "414": [20892, 20952], "415": [20981, 21041], "416": [21048, 21083], "417": [21089, 21128]}, "ABDKMath64x64.fromInt": {"479": [1305, 1366]}, "ABDKMath64x64.ln": {"480": [14345, 14360], "481": [14367, 14455]}, "ABDKMath64x64.toUInt": {"482": [2366, 2382], "483": [2388, 2411]}, "ABDKMath64x64.sub": {"493": [3876, 3928]}, "ABDKMath64x64.log_2": {"494": [13401, 13416], "495": [13495, 13504], "496": [13506, 13515], "497": [13548, 13557], "498": [13559, 13568], "499": [13597, 13606], "500": [13608, 13617], "501": [13644, 13652], "502": [13654, 13662], "503": [13688, 13696], "504": [13698, 13706], "505": [13731, 13739], "506": [13741, 13749], "507": [13772, 13780], "508": [13974, 13982], "509": [14041, 14067], "510": [14019, 14033], "511": [13955, 13964], "512": [14080, 14102]}}, "68": {}, "63": {}, "64": {"AccountContextHandler.getAccountContext": {"129": [743, 764]}, "AccountContextHandler.mustSettleAssets": {"130": [3350, 3420], "131": [3649, 3735]}, "AccountContextHandler.setAccountContext": {"150": [1029, 1060], "151": [1070, 1104]}, "AccountContextHandler.isBitmapEnabled": {"198": [1219, 1262]}, "AccountContextHandler.setActiveCurrency": {"199": [5423, 5488], "200": [5766, 5773], "201": [6965, 7106], "202": [7124, 7131], "203": [7350, 7383], "204": [7457, 7478], "205": [7496, 7564], "206": [7582, 7589], "207": [8002, 8059], "208": [7737, 7817], "209": [8147, 8221], "210": [8239, 8246], "211": [8389, 8396], "212": [8410, 8470], "213": [8484, 8505], "214": [8519, 8530], "215": [8626, 8633], "216": [8716, 8735], "217": [8777, 8906]}, "AccountContextHandler.storeAssetsAndUpdateContext": {"242": [10389, 10435], "243": [10445, 10495], "244": [10541, 10591], "245": [10801, 10870], "246": [11082, 11156], "247": [11232, 11307], "248": [11426, 11519], "249": [12001, 12083], "250": [12151, 12198], "251": [12111, 12136]}, "AccountContextHandler._clearPortfolioActiveFlags": {"321": [9497, 9550], "322": [9568, 9580], "323": [9608, 9629], "324": [9650, 9663]}}, "86": {"AssetHandler.isLiquidityToken": {"98": [665, 796]}, "AssetHandler.getSettlementDate": {"488": [1070, 1156], "489": [1331, 1352], "490": [1655, 1717]}}, "74": {"AssetRate.buildAssetRateStateful": {"44": [6164, 6413]}, "AssetRate._getAssetRateStateful": {"102": [4993, 5020], "103": [5051, 5094], "104": [5108, 5125], "105": [5176, 5226]}, "AssetRate._getAssetRateStorage": {"170": [3154, 3198], "171": [3208, 3260]}, "AssetRate.getSupplyRate": {"284": [2515, 2523]}}, "152": {}, "65": {"BalanceHandler.setBalanceStorageForSettleCashDebt": {"132": [13208, 13241], "133": [13509, 13559], "134": [13678, 13717], "135": [13731, 13746], "136": [13825, 13902], "137": [13916, 13966], "138": [14177, 14330], "139": [14351, 14550], "140": [14617, 14691], "141": [14702, 14728]}, "BalanceHandler.getBalanceStorage": {"188": [21209, 21253], "189": [21263, 21307], "190": [21447, 21551], "191": [21582, 21652], "192": [21672, 21712]}, "BalanceHandler.setBalanceStorageForNToken": {"193": [17704, 17729], "194": [17775, 17842]}, "BalanceHandler._setBalanceStorage": {"218": [19640, 19713], "219": [19844, 19908], "220": [20037, 20064], "221": [20271, 20323], "222": [20378, 20430], "223": [20559, 20637], "224": [20440, 20492], "225": [20502, 20549]}, "BalanceHandler.incrementFeeToReserve": {"272": [17984, 18001], "273": [18161, 18197], "274": [18207, 18279], "275": [18289, 18336]}}, "90": {"Bitmap.isBitSet": {"82": [820, 855], "83": [894, 959]}, "Bitmap.setBit": {"84": [447, 482], "85": [547, 593], "86": [624, 671]}, "Bitmap.totalBitsSet": {"162": [1130, 1286], "163": [1296, 1452], "164": [1462, 1549], "165": [1559, 1715], "166": [1725, 1742], "167": [1752, 1769], "168": [1779, 1797], "169": [1807, 1844]}}, "81": {"BitmapAssetsHandler.addifCashAsset": {"21": [3613, 3629], "22": [3871, 3950], "23": [3997, 4039], "24": [4161, 4210], "25": [4239, 4289], "26": [4303, 4323], "27": [4475, 4544], "28": [4591, 4628], "29": [4643, 4691], "30": [4705, 4755], "31": [4776, 4791]}, "BitmapAssetsHandler.getAssetsBitmap": {"74": [882, 915]}, "BitmapAssetsHandler.setAssetsBitmap": {"87": [1061, 1147], "88": [1266, 1307]}, "BitmapAssetsHandler.getifCashNotional": {"120": [1629, 1681]}, "BitmapAssetsHandler.addMultipleifCashAssets": {"228": [1922, 1963], "229": [2200, 2208], "230": [2223, 2262], "231": [2319, 2373], "232": [2465, 2673], "233": [2727, 2801], "234": [2103, 2106]}}, "148": {}, "149": {}, "150": {}, "75": {"CashGroup.buildCashGroupStateful": {"14": [17869, 17914]}, "CashGroup._buildCashGroup": {"45": [16991, 17199]}, "CashGroup._getCashGroupStorageBytes": {"106": [11458, 11482]}, "CashGroup.loadMarket": {"152": [7191, 7277], "153": [7408, 7590]}, "CashGroup.calculateOracleRate": {"180": [9957, 10039], "181": [10658, 10683], "182": [10701, 10748], "183": [10846, 10922], "184": [10941, 11131], "185": [11160, 11248]}, "CashGroup.getSettlementPenalty": {"226": [6043, 6153]}, "CashGroup.getRateOracleTimeWindow": {"252": [5713, 5811]}, "CashGroup.interpolateOracleRate": {"285": [8128, 8166], "286": [8231, 8268], "287": [8540, 8784], "288": [9127, 9463]}, "CashGroup.getRateScalar": {"466": [2832, 2900], "467": [3350, 3373], "468": [3413, 3430]}, "CashGroup.getTotalFee": {"476": [4373, 4456]}, "CashGroup.getReserveFeeShare": {"478": [4681, 4739]}}, "69": {}, "58": {}, "76": {"DateTime.getBitNumFromMaturity": {"75": [4314, 4331], "76": [4414, 4431], "77": [4734, 4759], "78": [5306, 5641], "79": [5922, 6091], "80": [6377, 6552], "81": [6698, 6717]}, "DateTime.isValidMarketMaturity": {"107": [1657, 1709], "108": [1719, 1805], "109": [1855, 1867], "110": [2054, 2065], "111": [1980, 1983], "112": [2086, 2098]}, "DateTime.getReferenceTime": {"142": [417, 456], "143": [466, 516]}, "DateTime.getTimeUTC0": {"160": [660, 690], "161": [700, 736]}, "DateTime.getTradedMarket": {"172": [1026, 1050], "173": [1076, 1104], "174": [1130, 1151], "175": [1177, 1202], "176": [1228, 1253], "177": [1279, 1305], "178": [1331, 1357], "179": [1368, 1391]}, "DateTime.getMarketIndex": {"276": [3147, 3199], "277": [3209, 3295], "278": [3594, 3611], "279": [3736, 3752], "280": [3408, 3411], "281": [3773, 3802]}}, "59": {}, "91": {"FloatingPoint56.unpackFrom56Bits": {"304": [1385, 1418]}}, "70": {}, "138": {}, "144": {}, "154": {}, "66": {}, "60": {"LibStorage._getStorageSlot": {"159": [8405, 8450]}}, "77": {"Market.executeTrade": {"156": [3052, 3240], "157": [3331, 3556], "158": [3566, 3647]}, "Market.getExchangeRateFromImpliedRate": {"186": [18502, 18545]}, "Market.loadMarket": {"253": [30612, 30829]}, "Market.calculateTrade": {"254": [4825, 4838], "255": [5251, 5473], "256": [5501, 5514], "257": [6013, 6026], "258": [6213, 6275], "259": [6289, 6523], "260": [6851, 6864], "261": [6885, 7098]}, "Market._setMarketStorage": {"262": [29237, 29295], "263": [29341, 29407], "264": [29457, 29524], "265": [29575, 29632], "266": [29678, 29750], "267": [29806, 29851], "268": [29861, 29914], "269": [29924, 29979], "270": [29989, 30034], "271": [30044, 30103]}, "Market.getOracleRate": {"282": [25391, 25440], "283": [25451, 25662]}, "Market.loadMarketWithSettlementDate": {"325": [31309, 31389], "326": [31400, 31609]}, "Market.getExchangeRateFactors": {"327": [8118, 8134], "328": [8347, 8571], "329": [8599, 8615], "330": [8636, 8688]}, "Market._getExchangeRate": {"331": [20127, 20144], "332": [20243, 20260], "333": [20512, 20529], "334": [20560, 20579]}, "Market._getNetCashAmountsUnderlying": {"335": [10591, 10607], "336": [11523, 11602], "337": [12533, 12612], "338": [12753, 13050]}, "Market.getImpliedRate": {"341": [16789, 16797], "342": [17770, 17778], "343": [17789, 17807]}, "Market._setNewMarketState": {"344": [13725, 13796], "345": [13865, 13907], "346": [14094, 14144]}, "Market._updateRateOracle": {"347": [23292, 23325], "348": [23503, 23525], "349": [23719, 23741]}, "Market._loadMarketStorage": {"457": [26478, 26503], "458": [26513, 26539], "459": [26549, 26593], "460": [26603, 26655], "461": [26665, 26719], "462": [26729, 26773], "463": [26783, 26841], "464": [26886, 26938], "465": [26969, 26994]}, "Market._getRateAnchor": {"469": [15628, 15645], "470": [15969, 15986], "471": [16081, 16158], "472": [16179, 16204]}, "Market._logProportion": {"473": [21047, 21064], "474": [21681, 21698], "475": [22064, 22085]}}, "21": {}, "82": {"PortfolioHandler.addAsset": {"33": [3389, 3396], "34": [3685, 3692], "35": [3922, 3944], "36": [4023, 4090], "37": [4287, 4360], "38": [4742, 4774], "39": [4784, 4812], "40": [4822, 4852], "41": [4862, 4890], "42": [4900, 4950], "43": [4960, 4997]}, "PortfolioHandler._mergeAssetIntoArray": {"89": [1631, 1639], "90": [1790, 1949], "91": [2195, 2220], "92": [2308, 2381], "93": [2440, 2468], "94": [2482, 2527], "95": [2542, 2553], "96": [1395, 1398], "97": [2574, 2586]}, "PortfolioHandler._extendNewAssetArray": {"99": [5714, 5745], "100": [5695, 5698], "101": [5766, 5786]}, "PortfolioHandler.buildPortfolioState": {"235": [15643, 15655], "236": [15666, 15732], "237": [15742, 15784], "238": [15794, 15847]}, "PortfolioHandler.addMultipleAssets": {"239": [897, 905], "240": [920, 1105], "241": [800, 803]}, "PortfolioHandler.getSortedPortfolio": {"305": [15064, 15077], "306": [15088, 15108]}, "PortfolioHandler.storeAssets": {"307": [7449, 7512], "308": [7676, 7706], "309": [7217, 7220], "310": [8573, 8605], "311": [8782, 9017], "312": [7885, 7888], "313": [9552, 9560], "314": [9574, 9733], "315": [9785, 10000], "316": [10015, 10067], "317": [10081, 10104], "318": [9437, 9440], "319": [10265, 10336], "320": [10386, 10538]}, "PortfolioHandler._loadAssetArray": {"418": [16909, 16948], "419": [17546, 17588], "420": [17602, 17640], "421": [17654, 17694], "422": [17708, 17746], "423": [17760, 17784], "424": [17294, 17297], "425": [17805, 17818]}, "PortfolioHandler._sortInPlace": {"426": [16212, 16300], "427": [16082, 16085], "428": [16527, 16570], "429": [16588, 16643], "430": [16661, 16664], "431": [16692, 16695]}, "PortfolioHandler.deleteAsset": {"432": [12749, 12800], "433": [12839, 12884], "434": [13013, 13176], "435": [13215, 13252], "436": [13737, 13766], "437": [13784, 13806], "438": [13549, 13552], "439": [13993, 14046], "440": [14060, 14067], "441": [14383, 14558], "442": [14568, 14619], "443": [14629, 14682]}, "PortfolioHandler._storeAsset": {"444": [11689, 11766], "445": [11818, 11883], "446": [11932, 12018], "447": [12062, 12141], "448": [12191, 12241], "449": [12251, 12297], "450": [12307, 12354], "451": [12364, 12409]}, "PortfolioHandler._updatePortfolioContext": {"452": [11121, 11152], "453": [11172, 11211], "454": [11222, 11278], "455": [11333, 11431], "456": [11442, 11501]}}, "92": {"SafeInt256.add": {"32": [1503, 1540]}, "SafeInt256.neg": {"128": [1619, 1636]}, "SafeInt256.divInRatePrecision": {"187": [2116, 2163]}, "SafeInt256.mul": {"195": [474, 483], "196": [506, 536], "197": [551, 581]}, "SafeInt256.mulInRatePrecision": {"227": [2337, 2384]}, "SafeInt256.div": {"302": [1098, 1137], "303": [1245, 1254]}, "SafeInt256.subNoNeg": {"339": [1854, 1867], "340": [1877, 1892]}, "SafeInt256.sub": {"477": [1377, 1414]}, "SafeInt256.toInt": {"491": [2587, 2627], "492": [2660, 2676]}}, "6": {"SafeMath.add": {"119": [2786, 2832]}, "SafeMath.sub": {"154": [3205, 3254], "155": [3264, 3276]}, "SafeMath.mul": {"289": [3619, 3627], "290": [3664, 3720]}, "SafeMath.div": {"291": [4286, 4330], "292": [4340, 4352]}}, "24": {}, "84": {}, "85": {}, "67": {}, "83": {"TransferAssets.placeAssetsInAccount": {"145": [2245, 2311], "146": [2446, 2522], "147": [2807, 2847], "148": [2940, 3014], "149": [3035, 3056]}, "TransferAssets.encodeAssetId": {"484": [966, 1013], "485": [1023, 1060], "486": [1070, 1127], "487": [1138, 1361]}}, "79": {"nTokenHandler.nTokenAddress": {"113": [1729, 1753]}, "nTokenHandler.getNTokenContext": {"114": [1193, 1224], "115": [1234, 1299], "116": [1309, 1358], "117": [1368, 1411], "118": [1421, 1458]}}, "80": {}}, "branches": {"34": {"TradingAction.executeTradesArrayBatch": {"513": [4604, 4645, true], "514": [4665, 4709, false]}, "TradingAction._executeTrade": {"515": [6898, 6949, false], "516": [7163, 7206, false], "517": [7334, 7367, true], "518": [7371, 7406, false]}, "TradingAction._purchaseNTokenResidual": {"519": [19373, 19393, true], "520": [19582, 19660, true], "521": [20732, 20900, true], "522": [21173, 21185, false], "523": [21189, 21214, false], "524": [21313, 21345, false], "525": [21400, 21412, false], "526": [21416, 21441, false], "527": [21540, 21572, false]}, "TradingAction._settleCashDebt": {"528": [14660, 14683, true], "529": [14910, 14948, false], "530": [16083, 16099, true]}, "TradingAction._executeLendBorrowTrade": {"531": [12739, 12774, false], "532": [12995, 13010, true], "533": [13120, 13134, false], "534": [13154, 13189, false], "535": [13277, 13312, true], "536": [13445, 13480, true]}, "TradingAction._getResidualPriceAssetCash": {"537": [23374, 23389, false], "538": [23635, 23665, false]}, "TradingAction._updateNTokenPortfolio": {"539": [25043, 25068, false], "540": [25072, 25090, true], "541": [25108, 25133, false], "542": [25137, 25155, true]}}, "89": {"ABDKMath64x64.fromUInt": {"543": [2006, 2029, true]}, "ABDKMath64x64.div": {"544": [6753, 6759, true], "545": [6819, 6838, false], "546": [6842, 6861, true]}, "ABDKMath64x64.exp": {"547": [21411, 21435, true], "548": [21459, 21484, false]}, "ABDKMath64x64.mul": {"549": [4309, 4328, false], "550": [4332, 4351, true]}, "ABDKMath64x64.exp_2": {"551": [14710, 14734, true], "552": [14758, 14783, false], "553": [14875, 14901, false], "554": [14979, 15005, false], "555": [15083, 15109, false], "556": [15187, 15213, false], "557": [15291, 15316, false], "558": [15394, 15419, false], "559": [15497, 15522, false], "560": [15600, 15625, false], "561": [15703, 15727, false], "562": [15805, 15829, false], "563": [15907, 15931, false], "564": [16009, 16033, false], "565": [16111, 16134, false], "566": [16212, 16235, false], "567": [16313, 16336, false], "568": [16414, 16437, false], "569": [16515, 16537, false], "570": [16615, 16637, false], "571": [16715, 16737, false], "572": [16815, 16837, false], "573": [16915, 16936, false], "574": [17014, 17035, false], "575": [17113, 17134, false], "576": [17212, 17233, false], "577": [17311, 17331, false], "578": [17409, 17429, false], "579": [17507, 17527, false], "580": [17605, 17625, false], "581": [17703, 17722, false], "582": [17800, 17819, false], "583": [17897, 17916, false], "584": [17994, 18013, false], "585": [18091, 18109, false], "586": [18187, 18205, false], "587": [18283, 18301, false], "588": [18379, 18397, false], "589": [18475, 18492, false], "590": [18570, 18587, false], "591": [18665, 18682, false], "592": [18760, 18777, false], "593": [18855, 18871, false], "594": [18949, 18965, false], "595": [19043, 19059, false], "596": [19137, 19153, false], "597": [19231, 19246, false], "598": [19324, 19339, false], "599": [19417, 19432, false], "600": [19510, 19525, false], "601": [19603, 19617, false], "602": [19695, 19709, false], "603": [19787, 19801, false], "604": [19879, 19893, false], "605": [19971, 19984, false], "606": [20062, 20075, false], "607": [20153, 20166, false], "608": [20244, 20257, false], "609": [20335, 20347, false], "610": [20425, 20437, false], "611": [20515, 20527, false], "612": [20605, 20617, false], "613": [20695, 20706, false], "614": [20784, 20795, false], "615": [20873, 20884, false], "616": [20962, 20973, false], "617": [21098, 21127, true]}, "ABDKMath64x64.fromInt": {"618": [1314, 1338, false], "619": [1342, 1365, true]}, "ABDKMath64x64.ln": {"620": [14354, 14359, true]}, "ABDKMath64x64.toUInt": {"621": [2375, 2381, true]}, "ABDKMath64x64.sub": {"622": [3885, 3904, false], "623": [3908, 3927, true]}, "ABDKMath64x64.log_2": {"624": [13410, 13415, true], "625": [13466, 13491, false], "626": [13527, 13544, false], "627": [13580, 13593, false], "628": [13629, 13640, false], "629": [13674, 13684, false], "630": [13718, 13727, false], "631": [13761, 13770, false]}}, "68": {}, "63": {}, "64": {"AccountContextHandler.mustSettleAssets": {"632": [3173, 3204, false]}, "AccountContextHandler.setActiveCurrency": {"633": [5431, 5445, false], "634": [5449, 5487, true], "635": [5707, 5715, false], "636": [5719, 5764, false], "637": [6877, 6894, false], "638": [6898, 6906, false], "639": [7232, 7249, false], "640": [7254, 7262, false], "641": [7405, 7455, false], "642": [7689, 7705, false], "643": [7709, 7717, false], "644": [8010, 8058, true], "645": [8358, 8374, false], "646": [8379, 8387, false], "647": [8616, 8624, false], "648": [8724, 8734, true]}, "AccountContextHandler.storeAssetsAndUpdateContext": {"649": [10453, 10494, true], "650": [10772, 10785, false], "651": [10809, 10869, true], "652": [11059, 11066, false], "653": [11955, 11981, false]}, "AccountContextHandler._clearPortfolioActiveFlags": {"654": [9343, 9420, false]}}, "86": {"AssetHandler.getSettlementDate": {"655": [1078, 1097, false], "656": [1101, 1155, true]}}, "74": {"AssetRate._getAssetRateStateful": {"657": [4732, 4765, false], "658": [5116, 5124, true]}, "AssetRate.getSupplyRate": {"659": [2477, 2513, false]}}, "152": {}, "65": {"BalanceHandler.setBalanceStorageForSettleCashDebt": {"660": [13216, 13240, true], "661": [13517, 13532, true], "662": [13573, 13597, false], "663": [13833, 13873, true], "664": [14123, 14139, false], "665": [14143, 14161, false]}, "BalanceHandler.getBalanceStorage": {"666": [21321, 21338, false]}, "BalanceHandler.setBalanceStorageForNToken": {"667": [17712, 17728, true]}, "BalanceHandler._setBalanceStorage": {"668": [19648, 19678, false], "669": [19682, 19712, true], "670": [19852, 19870, false], "671": [19874, 19907, true], "672": [20045, 20063, true], "673": [20279, 20322, true]}, "BalanceHandler.incrementFeeToReserve": {"674": [17992, 18000, true]}}, "90": {"Bitmap.isBitSet": {"675": [828, 838, false], "676": [842, 854, true]}, "Bitmap.setBit": {"677": [455, 465, false], "678": [469, 481, true], "679": [526, 531, false]}}, "81": {"BitmapAssetsHandler.addifCashAsset": {"680": [3621, 3628, true], "681": [3689, 3718, false], "682": [3879, 3912, false], "683": [3916, 3949, true], "684": [4348, 4361, false], "685": [4483, 4511, false], "686": [4515, 4543, true]}, "BitmapAssetsHandler.setAssetsBitmap": {"687": [1069, 1127, true]}, "BitmapAssetsHandler.addMultipleifCashAssets": {"688": [1930, 1962, true], "689": [2179, 2198, false], "690": [2231, 2261, true], "691": [2327, 2372, true], "692": [2692, 2709, false]}}, "148": {}, "149": {}, "150": {}, "75": {"CashGroup.loadMarket": {"693": [7199, 7215, false], "694": [7219, 7258, true]}, "CashGroup.calculateOracleRate": {"695": [9928, 9941, false], "696": [10537, 10553, false]}, "CashGroup.interpolateOracleRate": {"697": [8136, 8165, true], "698": [8239, 8267, true], "699": [8503, 8524, false]}, "CashGroup.getRateScalar": {"700": [2840, 2856, false], "701": [2860, 2899, true], "702": [3358, 3372, true]}}, "69": {}, "58": {}, "76": {"DateTime.getBitNumFromMaturity": {"703": [4283, 4312, false], "704": [4387, 4412, false], "705": [4680, 4718, false], "706": [4780, 4819, false], "707": [5662, 5702, false], "708": [6112, 6154, false]}, "DateTime.isValidMarketMaturity": {"709": [1665, 1683, true], "710": [1727, 1778, true], "711": [1820, 1853, false], "712": [2003, 2052, false]}, "DateTime.getReferenceTime": {"713": [425, 455, true]}, "DateTime.getTimeUTC0": {"714": [668, 689, true]}, "DateTime.getTradedMarket": {"715": [1014, 1024, false], "716": [1064, 1074, false], "717": [1118, 1128, false], "718": [1165, 1175, false], "719": [1216, 1226, false], "720": [1267, 1277, false], "721": [1319, 1329, false]}, "DateTime.getMarketIndex": {"722": [3155, 3173, true], "723": [3217, 3268, true], "724": [3566, 3592, false], "725": [3709, 3734, false]}}, "59": {}, "91": {}, "70": {}, "138": {}, "144": {}, "154": {}, "66": {}, "60": {}, "77": {"Market.calculateTrade": {"726": [4788, 4823, false], "727": [5990, 6011, false]}, "Market._setMarketStorage": {"728": [29245, 29260, false], "729": [29264, 29294, true], "730": [29349, 29368, false], "731": [29372, 29406, true], "732": [29465, 29484, false], "733": [29488, 29523, true], "734": [29583, 29597, false], "735": [29601, 29631, true], "736": [29712, 29749, true]}, "Market.getOracleRate": {"737": [25399, 25413, true]}, "Market.getExchangeRateFactors": {"738": [8066, 8088, true], "739": [8092, 8116, false]}, "Market._getExchangeRate": {"740": [20081, 20125, false], "741": [20234, 20241, false], "742": [20465, 20496, false]}, "Market._getNetCashAmountsUnderlying": {"743": [10123, 10141, false], "744": [10543, 10589, false]}, "Market.getImpliedRate": {"745": [16780, 16787, false], "746": [17738, 17768, false]}, "Market._updateRateOracle": {"747": [23300, 23324, true], "748": [23472, 23501, false], "749": [23601, 23632, false]}, "Market._getRateAnchor": {"750": [15584, 15626, false], "751": [15960, 15967, false]}, "Market._logProportion": {"752": [21007, 21045, false], "753": [21660, 21679, false]}}, "21": {}, "82": {"PortfolioHandler.addAsset": {"754": [3192, 3378, false], "755": [3410, 3446, false], "756": [3677, 3683, false], "757": [3866, 3906, false], "758": [3930, 3943, true], "759": [4031, 4058, false], "760": [4062, 4089, true], "761": [4204, 4271, false]}, "PortfolioHandler._mergeAssetIntoArray": {"762": [1492, 1520, true], "763": [1540, 1570, true], "764": [1590, 1616, false], "765": [1815, 1861, false], "766": [1881, 1935, true], "767": [2135, 2175, false], "768": [2203, 2219, true], "769": [2316, 2346, false], "770": [2350, 2380, true]}, "PortfolioHandler._extendNewAssetArray": {"771": [5514, 5535, true]}, "PortfolioHandler.buildPortfolioState": {"772": [15620, 15641, false]}, "PortfolioHandler.addMultipleAssets": {"773": [876, 895, false]}, "PortfolioHandler.getSortedPortfolio": {"774": [15044, 15062, false]}, "PortfolioHandler.storeAssets": {"775": [7457, 7511, true], "776": [7587, 7633, false], "777": [7637, 7656, false], "778": [7983, 8029, false], "779": [8267, 8313, false], "780": [9531, 9550, false], "781": [9599, 9645, false], "782": [9665, 9719, true], "783": [10273, 10297, false], "784": [10301, 10335, true]}, "PortfolioHandler._loadAssetArray": {"785": [16917, 16947, true]}, "PortfolioHandler.deleteAsset": {"786": [12757, 12799, true], "787": [12847, 12883, true], "788": [13034, 13088, false], "789": [13104, 13166, true], "790": [13642, 13671, false], "791": [13675, 13717, false], "792": [13845, 13872, false]}, "PortfolioHandler._storeAsset": {"793": [11697, 11717, false], "794": [11721, 11765, true], "795": [11826, 11844, false], "796": [11848, 11882, true], "797": [11940, 11959, false], "798": [11963, 12017, true], "799": [12070, 12103, false], "800": [12107, 12140, true]}, "PortfolioHandler._updatePortfolioContext": {"801": [11051, 11070, true], "802": [11074, 11105, false], "803": [11230, 11277, true]}}, "92": {"SafeInt256.add": {"804": [1511, 1539, true]}, "SafeInt256.mul": {"805": [497, 504, false], "806": [515, 521, true], "807": [525, 535, true], "808": [560, 566, true], "809": [570, 580, true]}, "SafeInt256.div": {"810": [1108, 1115, false], "811": [1119, 1135, true]}, "SafeInt256.subNoNeg": {"812": [1885, 1891, true]}, "SafeInt256.sub": {"813": [1385, 1413, true]}, "SafeInt256.toInt": {"814": [2596, 2626, true]}}, "6": {"SafeMath.add": {"815": [2794, 2800, true]}, "SafeMath.sub": {"816": [3213, 3219, true]}, "SafeMath.mul": {"817": [3611, 3617, false], "818": [3672, 3682, true]}, "SafeMath.div": {"819": [4294, 4299, true]}}, "24": {}, "84": {}, "85": {}, "67": {}, "83": {"TransferAssets.placeAssetsInAccount": {"820": [2253, 2287, true], "821": [2326, 2358, false]}, "TransferAssets.encodeAssetId": {"822": [974, 1012, true], "823": [1031, 1059, true], "824": [1078, 1126, true]}}, "79": {}, "80": {}}}, "dependencies": ["ABDKMath64x64", "AaveHandler", "AccountContextHandler", "AssetHandler", "AssetRate", "AssetRateAdapter", "BalanceHandler", "Bitmap", "BitmapAssetsHandler", "CErc20Interface", "CEtherInterface", "CTokenInterface", "CashGroup", "CompoundHandler", "Constants", "DateTime", "Deployments", "FloatingPoint56", "GenericToken", "IEIP20NonStandard", "ILendingPool", "IRewarder", "Incentives", "LibStorage", "Market", "MigrateIncentives", "PortfolioHandler", "SafeInt256", "OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/SafeMath", "SettleAssetsExternal", "SettleBitmapAssets", "SettlePortfolioAssets", "TokenHandler", "TransferAssets", "nTokenHandler", "nTokenSupply"], "offset": [554, 25673], "type": "library", "abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": true, "internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"indexed": false, "internalType": "uint40", "name": "maturity", "type": "uint40"}, {"indexed": false, "internalType": "int256", "name": "netAssetCash", "type": "int256"}, {"indexed": false, "internalType": "int256", "name": "netfCash", "type": "int256"}, {"indexed": false, "internalType": "int256", "name": "netLiquidityTokens", "type": "int256"}], "name": "AddRemoveLiquidity", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": true, "internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"indexed": false, "internalType": "uint40", "name": "maturity", "type": "uint40"}, {"indexed": false, "internalType": "int256", "name": "netAssetCash", "type": "int256"}, {"indexed": false, "internalType": "int256", "name": "netfCash", "type": "int256"}], "name": "LendBorrowTrade", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "settledAccount", "type": "address"}, {"indexed": true, "internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"indexed": true, "internalType": "address", "name": "settler", "type": "address"}, {"indexed": false, "internalType": "int256", "name": "amountToSettleAsset", "type": "int256"}, {"indexed": false, "internalType": "int256", "name": "fCashAmount", "type": "int256"}], "name": "SettledCashDebt", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"indexed": true, "internalType": "uint40", "name": "maturity", "type": "uint40"}, {"indexed": true, "internalType": "address", "name": "purchaser", "type": "address"}, {"indexed": false, "internalType": "int256", "name": "fCashAmountToPurchase", "type": "int256"}, {"indexed": false, "internalType": "int256", "name": "netAssetCashNToken", "type": "int256"}], "name": "nTokenResidualPurchase", "type": "event"}], "ast": {"absolutePath": "contracts/external/actions/TradingAction.sol", "exportedSymbols": {"ABDKMath64x64": [43822], "AaveHandler": [26065], "AccountBalance": [56783], "AccountContext": [56702], "AccountContextHandler": [23459], "AggregatorInterface": [61634], "AggregatorV2V3Interface": [58280], "AggregatorV3Interface": [61680], "AssetHandler": [39459], "AssetRate": [30073], "AssetRateAdapter": [58324], "AssetRateParameters": [56598], "AssetRateStorage": [56666], "AssetStorageState": [56467], "BalanceAction": [56480], "BalanceActionWithTrades": [56496], "BalanceHandler": [24802], "BalanceState": [56591], "BalanceStorage": [56726], "Bitmap": [44163], "BitmapAssetsHandler": [36492], "CErc20Interface": [58737], "CEtherInterface": [59010], "CTokenInterface": [59004], "CashGroup": [31352], "CashGroupParameters": [56607], "CashGroupSettings": [56691], "CompoundHandler": [26257], "Constants": [22246], "Context": [61703], "DateTime": [31991], "Deployments": [22260], "DepositActionType": [56462], "ERC20": [60002], "ETHRate": [56572], "ETHRateStorage": [56661], "ExchangeRate": [39655], "FloatingPoint56": [44239], "FreeCollateral": [41068], "FreeCollateralExternal": [159], "GenericToken": [26389], "IAToken": [60024], "IATokenFull": [60059], "IEIP20NonStandard": [61125], "IERC20": [58871], "ILendingPool": [60138], "IRewarder": [58338], "IScaledBalanceToken": [60049], "Incentives": [24987], "LibStorage": [22642], "LiquidationFactors": [56550], "Market": [33905], "MarketParameters": [56637], "MarketStorage": [56746], "MigrateIncentives": [316], "PortfolioAsset": [56620], "PortfolioAssetStorage": [56758], "PortfolioHandler": [37782], "PortfolioState": [56561], "SafeInt256": [44554], "SafeMath": [55990], "SettleAmount": [56501], "SettleAssetsExternal": [1335], "SettleBitmapAssets": [38260], "SettlePortfolioAssets": [38685], "SettlementRateStorage": [56733], "Token": [56512], "TokenHandler": [25826], "TokenStorage": [56648], "TokenType": [56447], "TradeActionType": [56454], "TradingAction": [10485], "TransferAssets": [38011], "ifCashStorage": [56749], "nTokenCalculations": [34475], "nTokenContext": [56717], "nTokenHandler": [35501], "nTokenPortfolio": [56527], "nTokenSupply": [35803], "nTokenTotalSupplyStorage": [56772], "nTokenTotalSupplyStorage_deprecated": [56765]}, "id": 10486, "license": "GPL-3.0-only", "nodeType": "SourceUnit", "nodes": [{"id": 9076, "literals": ["solidity", "^", "0.7", ".0"], "nodeType": "PragmaDirective", "src": "41:23:34"}, {"id": 9077, "literals": ["abicoder", "v2"], "nodeType": "PragmaDirective", "src": "65:19:34"}, {"absolutePath": "contracts/external/FreeCollateralExternal.sol", "file": "../FreeCollateralExternal.sol", "id": 9078, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 160, "src": "86:39:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/external/SettleAssetsExternal.sol", "file": "../SettleAssetsExternal.sol", "id": 9079, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 1336, "src": "126:37:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/Market.sol", "file": "../../internal/markets/Market.sol", "id": 9080, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 33906, "src": "164:43:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/CashGroup.sol", "file": "../../internal/markets/CashGroup.sol", "id": 9081, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 31353, "src": "208:46:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/AssetRate.sol", "file": "../../internal/markets/AssetRate.sol", "id": 9082, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 30074, "src": "255:46:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/internal/balances/BalanceHandler.sol", "file": "../../internal/balances/BalanceHandler.sol", "id": 9083, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 24803, "src": "302:52:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/internal/portfolio/PortfolioHandler.sol", "file": "../../internal/portfolio/PortfolioHandler.sol", "id": 9084, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 37783, "src": "355:55:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/internal/portfolio/TransferAssets.sol", "file": "../../internal/portfolio/TransferAssets.sol", "id": 9085, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 38012, "src": "411:53:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeInt256.sol", "file": "../../math/SafeInt256.sol", "id": 9086, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 44555, "src": "465:35:34", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/weiti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/math/SafeMath.sol", "file": "@openzeppelin/contracts/math/SafeMath.sol", "id": 9087, "nodeType": "ImportDirective", "scope": 10486, "sourceUnit": 55991, "src": "501:51:34", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "fullyImplemented": true, "id": 10485, "linearizedBaseContracts": [10485], "name": "TradingAction", "nodeType": "ContractDefinition", "nodes": [{"id": 9090, "libraryName": {"id": 9088, "name": "PortfolioHandler", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 37782, "src": "588:16:34", "typeDescriptions": {"typeIdentifier": "t_contract$_PortfolioHandler_$37782", "typeString": "library PortfolioHandler"}}, "nodeType": "UsingForDirective", "src": "582:42:34", "typeName": {"id": 9089, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56561, "src": "609:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_storage_ptr", "typeString": "struct PortfolioState"}}}, {"id": 9093, "libraryName": {"id": 9091, "name": "AccountContextHandler", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 23459, "src": "635:21:34", "typeDescriptions": {"typeIdentifier": "t_contract$_AccountContextHandler_$23459", "typeString": "library AccountContextHandler"}}, "nodeType": "UsingForDirective", "src": "629:47:34", "typeName": {"id": 9092, "name": "AccountContext", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56702, "src": "661:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_storage_ptr", "typeString": "struct AccountContext"}}}, {"id": 9096, "libraryName": {"id": 9094, "name": "Market", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 33905, "src": "687:6:34", "typeDescriptions": {"typeIdentifier": "t_contract$_Market_$33905", "typeString": "library Market"}}, "nodeType": "UsingForDirective", "src": "681:34:34", "typeName": {"id": 9095, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56637, "src": "698:16:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_storage_ptr", "typeString": "struct MarketParameters"}}}, {"id": 9099, "libraryName": {"id": 9097, "name": "CashGroup", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 31352, "src": "726:9:34", "typeDescriptions": {"typeIdentifier": "t_contract$_CashGroup_$31352", "typeString": "library CashGroup"}}, "nodeType": "UsingForDirective", "src": "720:40:34", "typeName": {"id": 9098, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "740:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}}, {"id": 9102, "libraryName": {"id": 9100, "name": "AssetRate", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 30073, "src": "771:9:34", "typeDescriptions": {"typeIdentifier": "t_contract$_AssetRate_$30073", "typeString": "library AssetRate"}}, "nodeType": "UsingForDirective", "src": "765:40:34", "typeName": {"id": 9101, "name": "AssetRateParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56598, "src": "785:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateParameters_$56598_storage_ptr", "typeString": "struct AssetRateParameters"}}}, {"id": 9105, "libraryName": {"id": 9103, "name": "SafeInt256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 44554, "src": "816:10:34", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeInt256_$44554", "typeString": "library SafeInt256"}}, "nodeType": "UsingForDirective", "src": "810:28:34", "typeName": {"id": 9104, "name": "int256", "nodeType": "ElementaryTypeName", "src": "831:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"id": 9108, "libraryName": {"id": 9106, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 55990, "src": "849:8:34", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$55990", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "843:27:34", "typeName": {"id": 9107, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "862:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"anonymous": false, "id": 9120, "name": "LendBorrowTrade", "nodeType": "EventDefinition", "parameters": {"id": 9119, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9110, "indexed": true, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 9120, "src": "907:23:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9109, "name": "address", "nodeType": "ElementaryTypeName", "src": "907:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9112, "indexed": true, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 9120, "src": "940:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 9111, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "940:6:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 9114, "indexed": false, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 9120, "src": "975:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}, "typeName": {"id": 9113, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "975:6:34", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, "visibility": "internal"}, {"constant": false, "id": 9116, "indexed": false, "mutability": "mutable", "name": "netAssetCash", "nodeType": "VariableDeclaration", "scope": 9120, "src": "1000:19:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9115, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1000:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9118, "indexed": false, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 9120, "src": "1029:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9117, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1029:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "897:153:34"}, "src": "876:175:34"}, {"anonymous": false, "id": 9134, "name": "AddRemoveLiquidity", "nodeType": "EventDefinition", "parameters": {"id": 9133, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9122, "indexed": true, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 9134, "src": "1091:23:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9121, "name": "address", "nodeType": "ElementaryTypeName", "src": "1091:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9124, "indexed": true, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 9134, "src": "1124:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 9123, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "1124:6:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 9126, "indexed": false, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 9134, "src": "1159:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}, "typeName": {"id": 9125, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "1159:6:34", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, "visibility": "internal"}, {"constant": false, "id": 9128, "indexed": false, "mutability": "mutable", "name": "netAssetCash", "nodeType": "VariableDeclaration", "scope": 9134, "src": "1184:19:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9127, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1184:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9130, "indexed": false, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 9134, "src": "1213:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9129, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1213:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9132, "indexed": false, "mutability": "mutable", "name": "netLiquidityTokens", "nodeType": "VariableDeclaration", "scope": 9134, "src": "1238:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9131, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1238:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "1081:188:34"}, "src": "1057:213:34"}, {"anonymous": false, "id": 9146, "name": "SettledCashDebt", "nodeType": "EventDefinition", "parameters": {"id": 9145, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9136, "indexed": true, "mutability": "mutable", "name": "settledAccount", "nodeType": "VariableDeclaration", "scope": 9146, "src": "1307:30:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9135, "name": "address", "nodeType": "ElementaryTypeName", "src": "1307:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9138, "indexed": true, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 9146, "src": "1347:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 9137, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "1347:6:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 9140, "indexed": true, "mutability": "mutable", "name": "settler", "nodeType": "VariableDeclaration", "scope": 9146, "src": "1382:23:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9139, "name": "address", "nodeType": "ElementaryTypeName", "src": "1382:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9142, "indexed": false, "mutability": "mutable", "name": "amountToSettleAsset", "nodeType": "VariableDeclaration", "scope": 9146, "src": "1415:26:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9141, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1415:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9144, "indexed": false, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 9146, "src": "1451:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9143, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1451:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "1297:178:34"}, "src": "1276:200:34"}, {"anonymous": false, "id": 9158, "name": "nTokenResidualPurchase", "nodeType": "EventDefinition", "parameters": {"id": 9157, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9148, "indexed": true, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 9158, "src": "1520:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 9147, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "1520:6:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 9150, "indexed": true, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 9158, "src": "1555:23:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}, "typeName": {"id": 9149, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "1555:6:34", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, "visibility": "internal"}, {"constant": false, "id": 9152, "indexed": true, "mutability": "mutable", "name": "purchaser", "nodeType": "VariableDeclaration", "scope": 9158, "src": "1588:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9151, "name": "address", "nodeType": "ElementaryTypeName", "src": "1588:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9154, "indexed": false, "mutability": "mutable", "name": "fCashAmountToPurchase", "nodeType": "VariableDeclaration", "scope": 9158, "src": "1623:28:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9153, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1623:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9156, "indexed": false, "mutability": "mutable", "name": "netAssetCashNToken", "nodeType": "VariableDeclaration", "scope": 9158, "src": "1661:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9155, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1661:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "1510:182:34"}, "src": "1482:211:34"}, {"canonicalName": "TradingAction.TradeContext", "id": 9171, "members": [{"constant": false, "id": 9160, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 9171, "src": "1781:11:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9159, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1781:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9162, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 9171, "src": "1802:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9161, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1802:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9164, "mutability": "mutable", "name": "fee", "nodeType": "VariableDeclaration", "scope": 9171, "src": "1830:10:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9163, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1830:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9166, "mutability": "mutable", "name": "netCash", "nodeType": "VariableDeclaration", "scope": 9171, "src": "1850:14:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9165, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1850:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9168, "mutability": "mutable", "name": "totalFee", "nodeType": "VariableDeclaration", "scope": 9171, "src": "1874:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9167, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1874:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9170, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 9171, "src": "1899:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9169, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1899:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TradeContext", "nodeType": "StructDefinition", "scope": 10485, "src": "1751:172:34", "visibility": "public"}, {"body": {"id": 9285, "nodeType": "Block", "src": "2621:929:34", "statements": [{"assignments": [9189], "declarations": [{"constant": false, "id": 9189, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 9285, "src": "2631:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 9188, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "2631:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}], "id": 9194, "initialValue": {"arguments": [{"id": 9192, "name": "bitmapCurrencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9176, "src": "2703:16:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 9190, "name": "CashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31352, "src": "2670:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CashGroup_$31352_$", "typeString": "type(library CashGroup)"}}, "id": 9191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buildCashGroupStateful", "nodeType": "MemberAccess", "referencedDeclaration": 31351, "src": "2670:32:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$_t_struct$_CashGroupParameters_$56607_memory_ptr_$", "typeString": "function (uint16) returns (struct CashGroupParameters memory)"}}, "id": 9193, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2670:50:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "nodeType": "VariableDeclarationStatement", "src": "2631:89:34"}, {"assignments": [9196], "declarations": [{"constant": false, "id": 9196, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 9285, "src": "2730:30:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 9195, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56637, "src": "2730:16:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 9197, "nodeType": "VariableDeclarationStatement", "src": "2730:30:34"}, {"assignments": [9199], "declarations": [{"constant": false, "id": 9199, "mutability": "mutable", "name": "didIncurDebt", "nodeType": "VariableDeclaration", "scope": 9285, "src": "2770:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 9198, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2770:4:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 9200, "nodeType": "VariableDeclarationStatement", "src": "2770:17:34"}, {"assignments": [9202], "declarations": [{"constant": false, "id": 9202, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 9285, "src": "2797:21:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext"}, "typeName": {"id": 9201, "name": "TradeContext", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9171, "src": "2797:12:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_storage_ptr", "typeString": "struct TradingAction.TradeContext"}}, "visibility": "internal"}], "id": 9203, "nodeType": "VariableDeclarationStatement", "src": "2797:21:34"}, {"expression": {"id": 9209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 9204, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "2828:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9206, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 9170, "src": "2828:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 9207, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "2842:5:34", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 9208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "2842:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2828:29:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9210, "nodeType": "ExpressionStatement", "src": "2828:29:34"}, {"body": {"id": 9278, "nodeType": "Block", "src": "2912:589:34", "statements": [{"assignments": [9223], "declarations": [{"constant": false, "id": 9223, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 9278, "src": "2926:16:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2926:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9224, "nodeType": "VariableDeclarationStatement", "src": "2926:16:34"}, {"expression": {"id": 9241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 9225, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9223, "src": "2957:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 9226, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "2967:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9227, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 9160, "src": "2967:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 9228, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "2975:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9229, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 9162, "src": "2975:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9230, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "2956:33:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9232, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9174, "src": "3023:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9233, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9189, "src": "3048:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9234, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9196, "src": "3075:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"baseExpression": {"id": 9235, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9181, "src": "3099:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 9237, "indexExpression": {"id": 9236, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9212, "src": "3106:1:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3099:9:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 9238, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3126:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9239, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 9170, "src": "3126:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9231, "name": "_executeTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9538, "src": "2992:13:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,struct MarketParameters memory,bytes32,uint256) returns (uint256,int256,int256)"}}, "id": 9240, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2992:159:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "src": "2956:195:34", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9242, "nodeType": "ExpressionStatement", "src": "2956:195:34"}, {"expression": {"id": 9255, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 9243, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3166:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9245, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 9162, "src": "3166:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9248, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9174, "src": "3234:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9249, "name": "bitmapCurrencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9176, "src": "3259:16:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 9250, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9223, "src": "3293:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9251, "name": "nextSettleTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9178, "src": "3319:14:34", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, {"expression": {"id": 9252, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3351:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9253, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 9162, "src": "3351:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint40", "typeString": "uint40"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 9246, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36492, "src": "3182:19:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$36492_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 9247, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addifCashAsset", "nodeType": "MemberAccess", "referencedDeclaration": 36189, "src": "3182:34:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (address,uint256,uint256,uint256,int256) returns (int256)"}}, "id": 9254, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3182:196:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "3166:212:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9256, "nodeType": "ExpressionStatement", "src": "3166:212:34"}, {"expression": {"id": 9265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9257, "name": "didIncurDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9199, "src": "3393:12:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 9264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9258, "name": "didIncurDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9199, "src": "3408:12:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 9262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 9259, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3425:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9260, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 9162, "src": "3425:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 9261, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3441:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3425:17:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 9263, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3424:19:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3408:35:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3393:50:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9266, "nodeType": "ExpressionStatement", "src": "3393:50:34"}, {"expression": {"id": 9276, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 9267, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3457:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9269, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 9166, "src": "3457:9:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 9273, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3483:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9274, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 9160, "src": "3483:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 9270, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3469:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9271, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 9166, "src": "3469:9:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 44377, "src": "3469:13:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 9275, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3469:21:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "3457:33:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9277, "nodeType": "ExpressionStatement", "src": "3457:33:34"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9218, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9215, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9212, "src": "2888:1:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 9216, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9181, "src": "2892:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 9217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2892:13:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2888:17:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9279, "initializationExpression": {"assignments": [9212], "declarations": [{"constant": false, "id": 9212, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 9279, "src": "2873:9:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9211, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2873:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9214, "initialValue": {"hexValue": "30", "id": 9213, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2885:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2873:13:34"}, "loopExpression": {"expression": {"id": 9220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2907:3:34", "subExpression": {"id": 9219, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9212, "src": "2907:1:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9221, "nodeType": "ExpressionStatement", "src": "2907:3:34"}, "nodeType": "ForStatement", "src": "2868:633:34"}, {"expression": {"components": [{"expression": {"id": 9280, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9202, "src": "3519:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9281, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 9166, "src": "3519:9:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9282, "name": "didIncurDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9199, "src": "3530:12:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 9283, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3518:25:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_bool_$", "typeString": "tuple(int256,bool)"}}, "functionReturnParameters": 9187, "id": 9284, "nodeType": "Return", "src": "3511:32:34"}]}, "documentation": {"id": 9172, "nodeType": "StructuredDocumentation", "src": "1929:491:34", "text": "@notice Executes trades for a bitmapped portfolio, cannot be called directly\n @param account account to put fCash assets in\n @param bitmapCurrencyId currency id of the bitmap\n @param nextSettleTime used to calculate the relative positions in the bitmap\n @param trades tightly packed array of trades, schema is defined in global/Types.sol\n @return netCash generated by trading\n @return didIncurDebt if the bitmap had an fCash position go negative"}, "functionSelector": "3643f39b", "id": 9286, "implemented": true, "kind": "function", "modifiers": [], "name": "executeTradesBitmapBatch", "nodeType": "FunctionDefinition", "parameters": {"id": 9182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9174, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 9286, "src": "2468:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9173, "name": "address", "nodeType": "ElementaryTypeName", "src": "2468:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9176, "mutability": "mutable", "name": "bitmapCurrencyId", "nodeType": "VariableDeclaration", "scope": 9286, "src": "2493:23:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 9175, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "2493:6:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 9178, "mutability": "mutable", "name": "nextSettleTime", "nodeType": "VariableDeclaration", "scope": 9286, "src": "2526:21:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}, "typeName": {"id": 9177, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "2526:6:34", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, "visibility": "internal"}, {"constant": false, "id": 9181, "mutability": "mutable", "name": "trades", "nodeType": "VariableDeclaration", "scope": 9286, "src": "2557:25:34", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 9179, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2557:7:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 9180, "nodeType": "ArrayTypeName", "src": "2557:9:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "2458:130:34"}, "returnParameters": {"id": 9187, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9184, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 9286, "src": "2607:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9183, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2607:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9186, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 9286, "src": "2615:4:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 9185, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2615:4:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2606:14:34"}, "scope": 10485, "src": "2425:1125:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 9417, "nodeType": "Block", "src": "4218:1701:34", "statements": [{"assignments": [9304], "declarations": [{"constant": false, "id": 9304, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 9417, "src": "4228:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 9303, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "4228:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}], "id": 9309, "initialValue": {"arguments": [{"id": 9307, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9291, "src": "4300:10:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 9305, "name": "CashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31352, "src": "4267:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CashGroup_$31352_$", "typeString": "type(library CashGroup)"}}, "id": 9306, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buildCashGroupStateful", "nodeType": "MemberAccess", "referencedDeclaration": 31351, "src": "4267:32:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$_t_struct$_CashGroupParameters_$56607_memory_ptr_$", "typeString": "function (uint16) returns (struct CashGroupParameters memory)"}}, "id": 9308, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4267:44:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4228:83:34"}, {"assignments": [9311], "declarations": [{"constant": false, "id": 9311, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 9417, "src": "4321:30:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 9310, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56637, "src": "4321:16:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 9312, "nodeType": "VariableDeclarationStatement", "src": "4321:30:34"}, {"assignments": [9314], "declarations": [{"constant": false, "id": 9314, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 9417, "src": "4361:21:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext"}, "typeName": {"id": 9313, "name": "TradeContext", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 9171, "src": "4361:12:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_storage_ptr", "typeString": "struct TradingAction.TradeContext"}}, "visibility": "internal"}], "id": 9315, "nodeType": "VariableDeclarationStatement", "src": "4361:21:34"}, {"expression": {"id": 9321, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 9316, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "4392:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9318, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 9170, "src": "4392:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 9319, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4406:5:34", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 9320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4406:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4392:29:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9322, "nodeType": "ExpressionStatement", "src": "4392:29:34"}, {"body": {"id": 9410, "nodeType": "Block", "src": "4476:1392:34", "statements": [{"assignments": [9335], "declarations": [{"constant": false, "id": 9335, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 9410, "src": "4490:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "typeName": {"id": 9334, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56454, "src": "4490:15:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "visibility": "internal"}], "id": 9350, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"baseExpression": {"id": 9343, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9296, "src": "4555:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 9345, "indexExpression": {"id": 9344, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9324, "src": "4562:1:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4555:9:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9342, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4548:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 9341, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "4548:6:34", "typeDescriptions": {}}}, "id": 9346, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4548:17:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 9340, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4542:5:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 9339, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "4542:5:34", "typeDescriptions": {}}}, "id": 9347, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4542:24:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 9338, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4534:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9337, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4534:7:34", "typeDescriptions": {}}}, "id": 9348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4534:33:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9336, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "4518:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9349, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4518:50:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "VariableDeclarationStatement", "src": "4490:78:34"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 9359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9351, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9335, "src": "4604:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9352, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "4617:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9353, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "AddLiquidity", "nodeType": "MemberAccess", "src": "4617:28:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "4604:41:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9358, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9355, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9335, "src": "4665:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9356, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "4678:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9357, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "RemoveLiquidity", "nodeType": "MemberAccess", "src": "4678:31:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "4665:44:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4604:105:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9397, "nodeType": "Block", "src": "5319:491:34", "statements": [{"assignments": [9366], "declarations": [{"constant": false, "id": 9366, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 9397, "src": "5337:16:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9365, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5337:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9367, "nodeType": "VariableDeclarationStatement", "src": "5337:16:34"}, {"expression": {"id": 9384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 9368, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9366, "src": "5372:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 9369, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5382:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9370, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 9160, "src": "5382:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 9371, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5390:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9372, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 9162, "src": "5390:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9373, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "5371:33:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9375, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9289, "src": "5442:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9376, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9304, "src": "5471:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9377, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9311, "src": "5502:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"baseExpression": {"id": 9378, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9296, "src": "5530:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 9380, "indexExpression": {"id": 9379, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9324, "src": "5537:1:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5530:9:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 9381, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5561:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9382, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 9170, "src": "5561:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9374, "name": "_executeTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9538, "src": "5407:13:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,struct MarketParameters memory,bytes32,uint256) returns (uint256,int256,int256)"}}, "id": 9383, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5407:183:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "src": "5371:219:34", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9385, "nodeType": "ExpressionStatement", "src": "5371:219:34"}, {"expression": {"arguments": [{"id": 9389, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9291, "src": "5654:10:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 9390, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9366, "src": "5686:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 9391, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "5716:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$22246_$", "typeString": "type(library Constants)"}}, "id": 9392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "FCASH_ASSET_TYPE", "nodeType": "MemberAccess", "referencedDeclaration": 22176, "src": "5716:26:34", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"id": 9393, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5764:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9394, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 9162, "src": "5764:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 9386, "name": "portfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "5609:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 9388, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "addAsset", "nodeType": "MemberAccess", "referencedDeclaration": 36813, "src": "5609:23:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_PortfolioState_$56561_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$__$bound_to$_t_struct$_PortfolioState_$56561_memory_ptr_$", "typeString": "function (struct PortfolioState memory,uint256,uint256,uint256,int256) pure"}}, "id": 9395, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5609:186:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9396, "nodeType": "ExpressionStatement", "src": "5609:186:34"}]}, "id": 9398, "nodeType": "IfStatement", "src": "4583:1227:34", "trueBody": {"id": 9364, "nodeType": "Block", "src": "4724:589:34", "statements": [{"expression": {"arguments": [{"hexValue": "44697361626c6564", "id": 9361, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4749:10:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cc706b0562d4d0480fd55e80d6bbe5abb3f248e31fb8d00e56119227634d3ed3", "typeString": "literal_string \"Disabled\""}, "value": "Disabled"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_cc706b0562d4d0480fd55e80d6bbe5abb3f248e31fb8d00e56119227634d3ed3", "typeString": "literal_string \"Disabled\""}], "id": 9360, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "4742:6:34", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 9362, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4742:18:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9363, "nodeType": "ExpressionStatement", "src": "4742:18:34"}]}}, {"expression": {"id": 9408, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 9399, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5824:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9401, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 9166, "src": "5824:9:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 9405, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5850:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9406, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 9160, "src": "5850:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 9402, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5836:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9403, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 9166, "src": "5836:9:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9404, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 44377, "src": "5836:13:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 9407, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5836:21:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "5824:33:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9409, "nodeType": "ExpressionStatement", "src": "5824:33:34"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9327, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9324, "src": "4452:1:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 9328, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9296, "src": "4456:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 9329, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4456:13:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4452:17:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9411, "initializationExpression": {"assignments": [9324], "declarations": [{"constant": false, "id": 9324, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 9411, "src": "4437:9:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9323, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4437:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9326, "initialValue": {"hexValue": "30", "id": 9325, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4449:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4437:13:34"}, "loopExpression": {"expression": {"id": 9332, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4471:3:34", "subExpression": {"id": 9331, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9324, "src": "4471:1:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9333, "nodeType": "ExpressionStatement", "src": "4471:3:34"}, "nodeType": "ForStatement", "src": "4432:1436:34"}, {"expression": {"components": [{"id": 9412, "name": "portfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9293, "src": "5886:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_memory_ptr", "typeString": "struct PortfolioState memory"}}, {"expression": {"id": 9413, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9314, "src": "5902:1:34", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$9171_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 9414, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 9166, "src": "5902:9:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9415, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5885:27:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_PortfolioState_$56561_memory_ptr_$_t_int256_$", "typeString": "tuple(struct PortfolioState memory,int256)"}}, "functionReturnParameters": 9302, "id": 9416, "nodeType": "Return", "src": "5878:34:34"}]}, "documentation": {"id": 9287, "nodeType": "StructuredDocumentation", "src": "3556:436:34", "text": "@notice Executes trades for a bitmapped portfolio, cannot be called directly\n @param account account to put fCash assets in\n @param currencyId currency id to trade\n @param portfolioState used to update the positions in the portfolio\n @param trades tightly packed array of trades, schema is defined in global/Types.sol\n @return resulting portfolio state\n @return netCash generated by trading"}, "functionSelector": "b58f83ed", "id": 9418, "implemented": true, "kind": "function", "modifiers": [], "name": "executeTradesArrayBatch", "nodeType": "FunctionDefinition", "parameters": {"id": 9297, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9289, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 9418, "src": "4039:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9288, "name": "address", "nodeType": "ElementaryTypeName", "src": "4039:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9291, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 9418, "src": "4064:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 9290, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "4064:6:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 9293, "mutability": "mutable", "name": "portfolioState", "nodeType": "VariableDeclaration", "scope": 9418, "src": "4091:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_memory_ptr", "typeString": "struct PortfolioState"}, "typeName": {"id": 9292, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56561, "src": "4091:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_storage_ptr", "typeString": "struct PortfolioState"}}, "visibility": "internal"}, {"constant": false, "id": 9296, "mutability": "mutable", "name": "trades", "nodeType": "VariableDeclaration", "scope": 9418, "src": "4137:25:34", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 9294, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4137:7:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 9295, "nodeType": "ArrayTypeName", "src": "4137:9:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "4029:139:34"}, "returnParameters": {"id": 9302, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9299, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 9418, "src": "4187:21:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_memory_ptr", "typeString": "struct PortfolioState"}, "typeName": {"id": 9298, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56561, "src": "4187:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_storage_ptr", "typeString": "struct PortfolioState"}}, "visibility": "internal"}, {"constant": false, "id": 9301, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 9418, "src": "4210:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9300, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4210:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "4186:31:34"}, "scope": 10485, "src": "3997:1922:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 9537, "nodeType": "Block", "src": "6800:1319:34", "statements": [{"assignments": [9439], "declarations": [{"constant": false, "id": 9439, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 9537, "src": "6810:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "typeName": {"id": 9438, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56454, "src": "6810:15:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "visibility": "internal"}], "id": 9452, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"id": 9447, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9427, "src": "6875:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9446, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6868:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 9445, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "6868:6:34", "typeDescriptions": {}}}, "id": 9448, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6868:13:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 9444, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6862:5:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 9443, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "6862:5:34", "typeDescriptions": {}}}, "id": 9449, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6862:20:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 9442, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6854:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9441, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6854:7:34", "typeDescriptions": {}}}, "id": 9450, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6854:29:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9440, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "6838:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9451, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6838:46:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "VariableDeclarationStatement", "src": "6810:74:34"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9456, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9453, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9439, "src": "6898:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9454, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "6911:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9455, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "PurchaseNTokenResidual", "nodeType": "MemberAccess", "src": "6911:38:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "6898:51:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9470, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9439, "src": "7163:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9471, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "7176:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9472, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SettleCashDebt", "nodeType": "MemberAccess", "src": "7176:30:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "7163:43:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 9495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9487, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9439, "src": "7334:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9488, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "7347:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9489, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Lend", "nodeType": "MemberAccess", "src": "7347:20:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "7334:33:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9494, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9491, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9439, "src": "7371:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9492, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "7384:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9493, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Borrow", "nodeType": "MemberAccess", "src": "7384:22:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "7371:35:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "7334:72:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9533, "nodeType": "Block", "src": "8060:53:34", "statements": [{"expression": {"arguments": [{"hexValue": "496e76616c69642074726164652074797065", "id": 9530, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8081:20:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8c2081c7a5c41bdc898663534a06a136ac00f9d6c81c7a4791b3330d35f3a799", "typeString": "literal_string \"Invalid trade type\""}, "value": "Invalid trade type"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_8c2081c7a5c41bdc898663534a06a136ac00f9d6c81c7a4791b3330d35f3a799", "typeString": "literal_string \"Invalid trade type\""}], "id": 9529, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "8074:6:34", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 9531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8074:28:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9532, "nodeType": "ExpressionStatement", "src": "8074:28:34"}]}, "id": 9534, "nodeType": "IfStatement", "src": "7330:783:34", "trueBody": {"id": 9528, "nodeType": "Block", "src": "7408:646:34", "statements": [{"expression": {"id": 9506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 9496, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9434, "src": "7423:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9497, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9436, "src": "7435:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9498, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "7422:25:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9500, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9423, "src": "7491:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9501, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9425, "src": "7518:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"id": 9502, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9439, "src": "7542:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, {"id": 9503, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9429, "src": "7569:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9504, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9427, "src": "7596:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9499, "name": "_executeLendBorrowTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9892, "src": "7450:23:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_enum$_TradeActionType_$56454_$_t_uint256_$_t_bytes32_$returns$_t_int256_$_t_int256_$", "typeString": "function (struct CashGroupParameters memory,struct MarketParameters memory,enum TradeActionType,uint256,bytes32) returns (int256,int256)"}}, "id": 9505, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7450:165:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "src": "7422:193:34", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9507, "nodeType": "ExpressionStatement", "src": "7422:193:34"}, {"expression": {"id": 9511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9508, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9432, "src": "7807:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 9509, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9425, "src": "7818:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9510, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 56624, "src": "7818:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7807:26:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9512, "nodeType": "ExpressionStatement", "src": "7807:26:34"}, {"eventCall": {"arguments": [{"id": 9514, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9421, "src": "7885:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 9517, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9423, "src": "7917:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 9518, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "7917:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "id": 9516, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7910:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint16_$", "typeString": "type(uint16)"}, "typeName": {"id": 9515, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "7910:6:34", "typeDescriptions": {}}}, "id": 9519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7910:28:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"arguments": [{"id": 9522, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9432, "src": "7963:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9521, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7956:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint40_$", "typeString": "type(uint40)"}, "typeName": {"id": 9520, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "7956:6:34", "typeDescriptions": {}}}, "id": 9523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7956:16:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, {"id": 9524, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9434, "src": "7990:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9525, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9436, "src": "8018:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint40", "typeString": "uint40"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 9513, "name": "LendBorrowTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9120, "src": "7852:15:34", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$_t_uint40_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (address,uint16,uint40,int256,int256)"}}, "id": 9526, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7852:191:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9527, "nodeType": "EmitStatement", "src": "7847:196:34"}]}}, "id": 9535, "nodeType": "IfStatement", "src": "7159:954:34", "trueBody": {"id": 9486, "nodeType": "Block", "src": "7208:116:34", "statements": [{"expression": {"id": 9484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 9474, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9432, "src": "7223:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9475, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9434, "src": "7233:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9476, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9436, "src": "7245:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9477, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "7222:35:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9479, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9421, "src": "7276:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9480, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9423, "src": "7285:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9481, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9429, "src": "7296:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9482, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9427, "src": "7307:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9478, "name": "_settleCashDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10077, "src": "7260:15:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_uint256_$_t_bytes32_$returns$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,uint256,bytes32) returns (uint256,int256,int256)"}}, "id": 9483, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7260:53:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "src": "7222:91:34", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9485, "nodeType": "ExpressionStatement", "src": "7222:91:34"}]}}, "id": 9536, "nodeType": "IfStatement", "src": "6894:1219:34", "trueBody": {"id": 9469, "nodeType": "Block", "src": "6951:202:34", "statements": [{"expression": {"id": 9467, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 9457, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9432, "src": "6966:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9458, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9434, "src": "6976:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9459, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9436, "src": "6988:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9460, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "6965:35:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9462, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9421, "src": "7044:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9463, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9423, "src": "7069:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9464, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9429, "src": "7096:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9465, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9427, "src": "7123:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9461, "name": "_purchaseNTokenResidual", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10322, "src": "7003:23:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_uint256_$_t_bytes32_$returns$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,uint256,bytes32) returns (uint256,int256,int256)"}}, "id": 9466, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7003:139:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "src": "6965:177:34", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9468, "nodeType": "ExpressionStatement", "src": "6965:177:34"}]}}]}, "documentation": {"id": 9419, "nodeType": "StructuredDocumentation", "src": "5925:540:34", "text": "@notice Executes a non-liquidity token trade\n @param account the initiator of the trade\n @param cashGroup parameters for the trade\n @param market market memory location to use\n @param trade bytes32 encoding of the particular trade\n @param blockTime the current block time\n @return maturity of the asset that was traded\n @return cashAmount - a positive or negative cash amount accrued to the account\n @return fCashAmount - a positive or negative fCash amount accrued to the account"}, "id": 9538, "implemented": true, "kind": "function", "modifiers": [], "name": "_executeTrade", "nodeType": "FunctionDefinition", "parameters": {"id": 9430, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9421, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6502:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9420, "name": "address", "nodeType": "ElementaryTypeName", "src": "6502:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9423, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6527:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 9422, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "6527:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 9425, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6573:30:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 9424, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56637, "src": "6573:16:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}, {"constant": false, "id": 9427, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6613:13:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 9426, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6613:7:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 9429, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6636:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9428, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6636:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6492:167:34"}, "returnParameters": {"id": 9437, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9432, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6706:16:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9431, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6706:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9434, "mutability": "mutable", "name": "cashAmount", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6736:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9433, "name": "int256", "nodeType": "ElementaryTypeName", "src": "6736:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9436, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 9538, "src": "6767:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9435, "name": "int256", "nodeType": "ElementaryTypeName", "src": "6767:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "6692:103:34"}, "scope": 10485, "src": "6470:1649:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 9758, "nodeType": "Block", "src": "9106:2494:34", "statements": [{"assignments": [9559], "declarations": [{"constant": false, "id": 9559, "mutability": "mutable", "name": "marketIndex", "nodeType": "VariableDeclaration", "scope": 9758, "src": "9116:19:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9558, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9116:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9569, "initialValue": {"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 9566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9564, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9549, "src": "9151:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": {"hexValue": "38", "id": 9565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9160:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "9151:10:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9563, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9144:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 9562, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "9144:6:34", "typeDescriptions": {}}}, "id": 9567, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9144:18:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 9561, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9138:5:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 9560, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "9138:5:34", "typeDescriptions": {}}}, "id": 9568, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9138:25:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "VariableDeclarationStatement", "src": "9116:47:34"}, {"expression": {"arguments": [{"id": 9573, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "9243:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"id": 9574, "name": "marketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9559, "src": "9251:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 9575, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9264:4:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"expression": {"id": 9576, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "9270:5:34", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 9577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "9270:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9570, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9543, "src": "9222:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 9572, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "loadMarket", "nodeType": "MemberAccess", "referencedDeclaration": 30596, "src": "9222:20:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$bound_to$_t_struct$_CashGroupParameters_$56607_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,struct MarketParameters memory,uint256,bool,uint256) view"}}, "id": 9578, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9222:64:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9579, "nodeType": "ExpressionStatement", "src": "9222:64:34"}, {"assignments": [9581], "declarations": [{"constant": false, "id": 9581, "mutability": "mutable", "name": "cashAmount", "nodeType": "VariableDeclaration", "scope": 9758, "src": "9297:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9580, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9297:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 9582, "nodeType": "VariableDeclarationStatement", "src": "9297:17:34"}, {"assignments": [9584], "declarations": [{"constant": false, "id": 9584, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 9758, "src": "9324:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9583, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9324:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 9585, "nodeType": "VariableDeclarationStatement", "src": "9324:18:34"}, {"assignments": [9587], "declarations": [{"constant": false, "id": 9587, "mutability": "mutable", "name": "tokens", "nodeType": "VariableDeclaration", "scope": 9758, "src": "9352:13:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9586, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9352:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 9588, "nodeType": "VariableDeclarationStatement", "src": "9352:13:34"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9589, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9547, "src": "9379:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9590, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "9392:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9591, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "AddLiquidity", "nodeType": "MemberAccess", "src": "9392:28:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "9379:41:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9670, "nodeType": "Block", "src": "10200:239:34", "statements": [{"expression": {"id": 9653, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9636, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9587, "src": "10214:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9651, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 9641, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9549, "src": "10239:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9640, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10231:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9639, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10231:7:34", "typeDescriptions": {}}}, "id": 9642, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10231:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "313532", "id": 9643, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10249:3:34", "typeDescriptions": {"typeIdentifier": "t_rational_152_by_1", "typeString": "int_const 152"}, "value": "152"}, "src": "10231:21:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 9645, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10230:23:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": {"expression": {"arguments": [{"id": 9648, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10261:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}, "typeName": {"id": 9647, "name": "uint88", "nodeType": "ElementaryTypeName", "src": "10261:6:34", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}], "id": 9646, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "10256:4:34", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 9649, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10256:12:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint88", "typeString": "type(uint88)"}}, "id": 9650, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "10256:16:34", "typeDescriptions": {"typeIdentifier": "t_uint88", "typeString": "uint88"}}, "src": "10230:42:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9638, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10223:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 9637, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10223:6:34", "typeDescriptions": {}}}, "id": 9652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10223:50:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10214:59:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9654, "nodeType": "ExpressionStatement", "src": "10214:59:34"}, {"expression": {"id": 9662, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 9655, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "10288:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9656, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9584, "src": "10300:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9657, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "10287:25:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9660, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9587, "src": "10338:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 9658, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "10315:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9659, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "removeLiquidity", "nodeType": "MemberAccess", "referencedDeclaration": 32203, "src": "10315:22:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_int256_$returns$_t_int256_$_t_int256_$bound_to$_t_struct$_MarketParameters_$56637_memory_ptr_$", "typeString": "function (struct MarketParameters memory,int256) returns (int256,int256)"}}, "id": 9661, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10315:30:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "src": "10287:58:34", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9663, "nodeType": "ExpressionStatement", "src": "10287:58:34"}, {"expression": {"id": 9668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9664, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9587, "src": "10359:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 9665, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9587, "src": "10368:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9666, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "10368:10:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 9667, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10368:12:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10359:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9669, "nodeType": "ExpressionStatement", "src": "10359:21:34"}]}, "id": 9671, "nodeType": "IfStatement", "src": "9375:1064:34", "trueBody": {"id": 9635, "nodeType": "Block", "src": "9422:772:34", "statements": [{"expression": {"id": 9610, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9593, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "9436:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9601, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 9598, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9549, "src": "9465:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9597, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9457:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9596, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9457:7:34", "typeDescriptions": {}}}, "id": 9599, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9457:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "313532", "id": 9600, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9475:3:34", "typeDescriptions": {"typeIdentifier": "t_rational_152_by_1", "typeString": "int_const 152"}, "value": "152"}, "src": "9457:21:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 9602, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9456:23:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": {"expression": {"arguments": [{"id": 9605, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9487:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}, "typeName": {"id": 9604, "name": "uint88", "nodeType": "ElementaryTypeName", "src": "9487:6:34", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}], "id": 9603, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "9482:4:34", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 9606, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9482:12:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint88", "typeString": "type(uint88)"}}, "id": 9607, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "9482:16:34", "typeDescriptions": {"typeIdentifier": "t_uint88", "typeString": "uint88"}}, "src": "9456:42:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9595, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9449:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 9594, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9449:6:34", "typeDescriptions": {}}}, "id": 9609, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9449:50:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "9436:63:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9611, "nodeType": "ExpressionStatement", "src": "9436:63:34"}, {"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 9614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9612, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "9923:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 9613, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9937:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9923:15:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9619, "nodeType": "IfStatement", "src": "9919:41:34", "trueBody": {"expression": {"id": 9617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9615, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "9940:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 9616, "name": "netCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9553, "src": "9953:7:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "9940:20:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9618, "nodeType": "ExpressionStatement", "src": "9940:20:34"}}, {"expression": {"id": 9627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 9620, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9587, "src": "10040:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9621, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9584, "src": "10048:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 9622, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "10039:21:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9625, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "10083:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 9623, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "10063:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9624, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "addLiquidity", "nodeType": "MemberAccess", "referencedDeclaration": 32118, "src": "10063:19:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_int256_$returns$_t_int256_$_t_int256_$bound_to$_t_struct$_MarketParameters_$56637_memory_ptr_$", "typeString": "function (struct MarketParameters memory,int256) returns (int256,int256)"}}, "id": 9626, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10063:31:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "src": "10039:55:34", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9628, "nodeType": "ExpressionStatement", "src": "10039:55:34"}, {"expression": {"id": 9633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9629, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "10108:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 9630, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "10121:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "10121:14:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 9632, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10121:16:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10108:29:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9634, "nodeType": "ExpressionStatement", "src": "10108:29:34"}]}}, {"id": 9716, "nodeType": "Block", "src": "10449:430:34", "statements": [{"assignments": [9673], "declarations": [{"constant": false, "id": 9673, "mutability": "mutable", "name": "minImpliedRate", "nodeType": "VariableDeclaration", "scope": 9716, "src": "10463:22:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9672, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10463:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9683, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9681, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 9678, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9549, "src": "10503:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9677, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10495:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9676, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10495:7:34", "typeDescriptions": {}}}, "id": 9679, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10495:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "313230", "id": 9680, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10513:3:34", "typeDescriptions": {"typeIdentifier": "t_rational_120_by_1", "typeString": "int_const 120"}, "value": "120"}, "src": "10495:21:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9675, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10488:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 9674, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "10488:6:34", "typeDescriptions": {}}}, "id": 9682, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10488:29:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "VariableDeclarationStatement", "src": "10463:54:34"}, {"assignments": [9685], "declarations": [{"constant": false, "id": 9685, "mutability": "mutable", "name": "maxImpliedRate", "nodeType": "VariableDeclaration", "scope": 9716, "src": "10531:22:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9684, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10531:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9695, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 9690, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9549, "src": "10571:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9689, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10563:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9688, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10563:7:34", "typeDescriptions": {}}}, "id": 9691, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10563:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "3838", "id": 9692, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10581:2:34", "typeDescriptions": {"typeIdentifier": "t_rational_88_by_1", "typeString": "int_const 88"}, "value": "88"}, "src": "10563:20:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9687, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10556:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 9686, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "10556:6:34", "typeDescriptions": {}}}, "id": 9694, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10556:28:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "VariableDeclarationStatement", "src": "10531:53:34"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9700, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 9697, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "10671:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9698, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 56632, "src": "10671:22:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 9699, "name": "minImpliedRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9673, "src": "10697:14:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10671:40:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c20736c697070616765", "id": 9701, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10713:24:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}, "value": "Trade failed, slippage"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}], "id": 9696, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10663:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9702, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10663:75:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9703, "nodeType": "ExpressionStatement", "src": "10663:75:34"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9706, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9704, "name": "maxImpliedRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9685, "src": "10756:14:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 9705, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10774:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10756:19:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9715, "nodeType": "IfStatement", "src": "10752:116:34", "trueBody": {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 9708, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "10801:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9709, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 56632, "src": "10801:22:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 9710, "name": "maxImpliedRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9685, "src": "10827:14:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10801:40:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c20736c697070616765", "id": 9712, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10843:24:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}, "value": "Trade failed, slippage"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}], "id": 9707, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10793:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9713, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10793:75:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9714, "nodeType": "ExpressionStatement", "src": "10793:75:34"}}]}, {"expression": {"arguments": [{"expression": {"id": 9720, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9543, "src": "10985:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 9721, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "10985:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 9722, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "11019:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9723, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 56624, "src": "11019:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 9724, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "11048:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$22246_$", "typeString": "type(library Constants)"}}, "id": 9725, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "FCASH_ASSET_TYPE", "nodeType": "MemberAccess", "referencedDeclaration": 22176, "src": "11048:26:34", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"id": 9726, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9584, "src": "11088:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 9717, "name": "portfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9551, "src": "10948:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 9719, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "addAsset", "nodeType": "MemberAccess", "referencedDeclaration": 36813, "src": "10948:23:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_PortfolioState_$56561_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$__$bound_to$_t_struct$_PortfolioState_$56561_memory_ptr_$", "typeString": "function (struct PortfolioState memory,uint256,uint256,uint256,int256) pure"}}, "id": 9727, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10948:161:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9728, "nodeType": "ExpressionStatement", "src": "10948:161:34"}, {"expression": {"arguments": [{"expression": {"id": 9732, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9543, "src": "11198:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 9733, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "11198:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 9734, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "11232:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9735, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 56624, "src": "11232:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9736, "name": "marketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9559, "src": "11261:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 9737, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11275:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "11261:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9739, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9587, "src": "11290:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 9729, "name": "portfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9551, "src": "11161:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 9731, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "addAsset", "nodeType": "MemberAccess", "referencedDeclaration": 36813, "src": "11161:23:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_PortfolioState_$56561_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$__$bound_to$_t_struct$_PortfolioState_$56561_memory_ptr_$", "typeString": "function (struct PortfolioState memory,uint256,uint256,uint256,int256) pure"}}, "id": 9740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11161:145:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9741, "nodeType": "ExpressionStatement", "src": "11161:145:34"}, {"eventCall": {"arguments": [{"id": 9743, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9541, "src": "11354:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 9744, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9543, "src": "11375:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 9745, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "11375:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"arguments": [{"expression": {"id": 9748, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9545, "src": "11470:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9749, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 56624, "src": "11470:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9747, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11463:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint40_$", "typeString": "type(uint40)"}, "typeName": {"id": 9746, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "11463:6:34", "typeDescriptions": {}}}, "id": 9750, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11463:23:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, {"id": 9751, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "11500:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9752, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9584, "src": "11524:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9753, "name": "tokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9587, "src": "11549:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint40", "typeString": "uint40"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 9742, "name": "AddRemoveLiquidity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9134, "src": "11322:18:34", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$_t_uint40_$_t_int256_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (address,uint16,uint40,int256,int256,int256)"}}, "id": 9754, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11322:243:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9755, "nodeType": "EmitStatement", "src": "11317:248:34"}, {"expression": {"id": 9756, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9581, "src": "11583:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 9557, "id": 9757, "nodeType": "Return", "src": "11576:17:34"}]}, "documentation": {"id": 9539, "nodeType": "StructuredDocumentation", "src": "8718:81:34", "text": "@return cashAmount: a positive or negative cash amount accrued to the account"}, "id": 9759, "implemented": true, "kind": "function", "modifiers": [], "name": "_executeLiquidityTrade", "nodeType": "FunctionDefinition", "parameters": {"id": 9554, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9541, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 9759, "src": "8845:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9540, "name": "address", "nodeType": "ElementaryTypeName", "src": "8845:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9543, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 9759, "src": "8870:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 9542, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "8870:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 9545, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 9759, "src": "8916:30:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 9544, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56637, "src": "8916:16:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}, {"constant": false, "id": 9547, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 9759, "src": "8956:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "typeName": {"id": 9546, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56454, "src": "8956:15:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "visibility": "internal"}, {"constant": false, "id": 9549, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 9759, "src": "8991:13:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 9548, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8991:7:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 9551, "mutability": "mutable", "name": "portfolioState", "nodeType": "VariableDeclaration", "scope": 9759, "src": "9014:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_memory_ptr", "typeString": "struct PortfolioState"}, "typeName": {"id": 9550, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56561, "src": "9014:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$56561_storage_ptr", "typeString": "struct PortfolioState"}}, "visibility": "internal"}, {"constant": false, "id": 9553, "mutability": "mutable", "name": "netCash", "nodeType": "VariableDeclaration", "scope": 9759, "src": "9060:14:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9552, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9060:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "8835:245:34"}, "returnParameters": {"id": 9557, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9556, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 9759, "src": "9098:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9555, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9098:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "9097:8:34"}, "scope": 10485, "src": "8804:2796:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 9891, "nodeType": "Block", "src": "12428:1110:34", "statements": [{"assignments": [9778], "declarations": [{"constant": false, "id": 9778, "mutability": "mutable", "name": "marketIndex", "nodeType": "VariableDeclaration", "scope": 9891, "src": "12438:19:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9777, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12438:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9791, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 9787, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9785, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9770, "src": "12481:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": {"hexValue": "38", "id": 9786, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12490:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "12481:10:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9784, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12474:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 9783, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "12474:6:34", "typeDescriptions": {}}}, "id": 9788, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12474:18:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 9782, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12468:5:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 9781, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "12468:5:34", "typeDescriptions": {}}}, "id": 9789, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12468:25:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 9780, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12460:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9779, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12460:7:34", "typeDescriptions": {}}}, "id": 9790, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12460:34:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12438:56:34"}, {"expression": {"arguments": [{"id": 9795, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9764, "src": "12576:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"id": 9796, "name": "marketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9778, "src": "12584:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 9797, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "12597:5:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"id": 9798, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9768, "src": "12604:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9792, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9762, "src": "12555:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 9794, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "loadMarket", "nodeType": "MemberAccess", "referencedDeclaration": 30596, "src": "12555:20:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$bound_to$_t_struct$_CashGroupParameters_$56607_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,struct MarketParameters memory,uint256,bool,uint256) view"}}, "id": 9799, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12555:59:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9800, "nodeType": "ExpressionStatement", "src": "12555:59:34"}, {"expression": {"id": 9814, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9801, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9775, "src": "12625:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 9810, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9808, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9770, "src": "12661:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": {"hexValue": "3136", "id": 9809, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12670:2:34", "typeDescriptions": {"typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16"}, "value": "16"}, "src": "12661:11:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9807, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12653:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes11_$", "typeString": "type(bytes11)"}, "typeName": {"id": 9806, "name": "bytes11", "nodeType": "ElementaryTypeName", "src": "12653:7:34", "typeDescriptions": {}}}, "id": 9811, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12653:20:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes11", "typeString": "bytes11"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes11", "typeString": "bytes11"}], "id": 9805, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12646:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}, "typeName": {"id": 9804, "name": "uint88", "nodeType": "ElementaryTypeName", "src": "12646:6:34", "typeDescriptions": {}}}, "id": 9812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12646:28:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint88", "typeString": "uint88"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint88", "typeString": "uint88"}], "id": 9803, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12639:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 9802, "name": "int256", "nodeType": "ElementaryTypeName", "src": "12639:6:34", "typeDescriptions": {}}}, "id": 9813, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12639:36:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12625:50:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9815, "nodeType": "ExpressionStatement", "src": "12625:50:34"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9816, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9766, "src": "12739:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9817, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "12752:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9818, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Borrow", "nodeType": "MemberAccess", "src": "12752:22:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "12739:35:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9826, "nodeType": "IfStatement", "src": "12735:72:34", "trueBody": {"expression": {"id": 9824, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9820, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9775, "src": "12776:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 9821, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9775, "src": "12790:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9822, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "12790:15:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 9823, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12790:17:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12776:31:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9825, "nodeType": "ExpressionStatement", "src": "12776:31:34"}}, {"expression": {"id": 9839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9827, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9773, "src": "12818:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9830, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9762, "src": "12864:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9831, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9775, "src": "12887:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [{"id": 9835, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9768, "src": "12932:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 9832, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9764, "src": "12912:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9833, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 56624, "src": "12912:15:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 9834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 55839, "src": "12912:19:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 9836, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12912:30:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9837, "name": "marketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9778, "src": "12956:11:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9828, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9764, "src": "12831:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9829, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "executeTrade", "nodeType": "MemberAccess", "referencedDeclaration": 32262, "src": "12831:19:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParameters_$56637_memory_ptr_$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_int256_$_t_uint256_$_t_uint256_$returns$_t_int256_$bound_to$_t_struct$_MarketParameters_$56637_memory_ptr_$", "typeString": "function (struct MarketParameters memory,struct CashGroupParameters memory,int256,uint256,uint256) returns (int256)"}}, "id": 9838, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12831:146:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12818:159:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9840, "nodeType": "ExpressionStatement", "src": "12818:159:34"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 9844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9842, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9773, "src": "12995:10:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 9843, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13009:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12995:15:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c206c6971756964697479", "id": 9845, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13012:25:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5c6237db371d8fd66064bbc81499f19b42663dfe04c0da45fccffe96b03144b1", "typeString": "literal_string \"Trade failed, liquidity\""}, "value": "Trade failed, liquidity"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5c6237db371d8fd66064bbc81499f19b42663dfe04c0da45fccffe96b03144b1", "typeString": "literal_string \"Trade failed, liquidity\""}], "id": 9841, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12987:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9846, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12987:51:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9847, "nodeType": "ExpressionStatement", "src": "12987:51:34"}, {"assignments": [9849], "declarations": [{"constant": false, "id": 9849, "mutability": "mutable", "name": "rateLimit", "nodeType": "VariableDeclaration", "scope": 9891, "src": "13049:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9848, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13049:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9862, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 9858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9856, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9770, "src": "13091:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": {"hexValue": "313034", "id": 9857, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13100:3:34", "typeDescriptions": {"typeIdentifier": "t_rational_104_by_1", "typeString": "int_const 104"}, "value": "104"}, "src": "13091:12:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9855, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13084:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)"}, "typeName": {"id": 9854, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "13084:6:34", "typeDescriptions": {}}}, "id": 9859, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13084:20:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 9853, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13077:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 9852, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "13077:6:34", "typeDescriptions": {}}}, "id": 9860, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13077:28:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}], "id": 9851, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13069:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9850, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13069:7:34", "typeDescriptions": {}}}, "id": 9861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13069:37:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "13049:57:34"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9865, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9863, "name": "rateLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9849, "src": "13120:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 9864, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13133:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "13120:14:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9890, "nodeType": "IfStatement", "src": "13116:416:34", "trueBody": {"id": 9889, "nodeType": "Block", "src": "13136:396:34", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "id": 9869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9866, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9766, "src": "13154:9:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 9867, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56454, "src": "13167:15:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$56454_$", "typeString": "type(enum TradeActionType)"}}, "id": 9868, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Borrow", "nodeType": "MemberAccess", "src": "13167:22:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "src": "13154:35:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 9887, "nodeType": "Block", "src": "13360:162:34", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9883, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 9880, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9764, "src": "13445:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9881, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 56632, "src": "13445:22:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 9882, "name": "rateLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9849, "src": "13471:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13445:35:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c20736c697070616765", "id": 9884, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13482:24:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}, "value": "Trade failed, slippage"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}], "id": 9879, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "13437:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9885, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13437:70:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9886, "nodeType": "ExpressionStatement", "src": "13437:70:34"}]}, "id": 9888, "nodeType": "IfStatement", "src": "13150:372:34", "trueBody": {"id": 9878, "nodeType": "Block", "src": "13191:163:34", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 9871, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9764, "src": "13277:6:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 9872, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 56632, "src": "13277:22:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 9873, "name": "rateLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9849, "src": "13303:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13277:35:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c20736c697070616765", "id": 9875, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13314:24:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}, "value": "Trade failed, slippage"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}], "id": 9870, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "13269:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9876, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13269:70:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9877, "nodeType": "ExpressionStatement", "src": "13269:70:34"}]}}]}}]}, "documentation": {"id": 9760, "nodeType": "StructuredDocumentation", "src": "11606:497:34", "text": "@notice Executes a lend or borrow trade\n @param cashGroup parameters for the trade\n @param market market memory location to use\n @param tradeType whether this is add or remove liquidity\n @param blockTime the current block time\n @param trade bytes32 encoding of the particular trade\n @return cashAmount - a positive or negative cash amount accrued to the account\n @return fCashAmount -  a positive or negative fCash amount accrued to the account"}, "id": 9892, "implemented": true, "kind": "function", "modifiers": [], "name": "_executeLendBorrowTrade", "nodeType": "FunctionDefinition", "parameters": {"id": 9771, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9762, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 9892, "src": "12150:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 9761, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "12150:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 9764, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 9892, "src": "12196:30:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 9763, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56637, "src": "12196:16:34", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$56637_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}, {"constant": false, "id": 9766, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 9892, "src": "12236:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}, "typeName": {"id": 9765, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56454, "src": "12236:15:34", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$56454", "typeString": "enum TradeActionType"}}, "visibility": "internal"}, {"constant": false, "id": 9768, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 9892, "src": "12271:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9767, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12271:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9770, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 9892, "src": "12298:13:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 9769, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12298:7:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "12140:177:34"}, "returnParameters": {"id": 9776, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9773, "mutability": "mutable", "name": "cashAmount", "nodeType": "VariableDeclaration", "scope": 9892, "src": "12364:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9772, "name": "int256", "nodeType": "ElementaryTypeName", "src": "12364:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9775, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 9892, "src": "12395:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9774, "name": "int256", "nodeType": "ElementaryTypeName", "src": "12395:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "12350:73:34"}, "scope": 10485, "src": "12108:1430:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 10076, "nodeType": "Block", "src": "14499:2871:34", "statements": [{"assignments": [9911], "declarations": [{"constant": false, "id": 9911, "mutability": "mutable", "name": "counterparty", "nodeType": "VariableDeclaration", "scope": 10076, "src": "14509:20:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9910, "name": "address", "nodeType": "ElementaryTypeName", "src": "14509:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 9921, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9919, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 9916, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9901, "src": "14548:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9915, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "14540:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9914, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14540:7:34", "typeDescriptions": {}}}, "id": 9917, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14540:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "3838", "id": 9918, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14558:2:34", "typeDescriptions": {"typeIdentifier": "t_rational_88_by_1", "typeString": "int_const 88"}, "value": "88"}, "src": "14540:20:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9913, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "14532:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 9912, "name": "address", "nodeType": "ElementaryTypeName", "src": "14532:7:34", "typeDescriptions": {}}}, "id": 9920, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14532:29:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "VariableDeclarationStatement", "src": "14509:52:34"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 9925, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9923, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9895, "src": "14660:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 9924, "name": "counterparty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9911, "src": "14671:12:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "14660:23:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f7420736574746c652073656c66", "id": 9926, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "14685:20:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e8be5400a7d7233af68e4ff643cdcf229406c3de9c658b43e802d6e9a5c590cb", "typeString": "literal_string \"Cannot settle self\""}, "value": "Cannot settle self"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e8be5400a7d7233af68e4ff643cdcf229406c3de9c658b43e802d6e9a5c590cb", "typeString": "literal_string \"Cannot settle self\""}], "id": 9922, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "14652:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 9927, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14652:54:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9928, "nodeType": "ExpressionStatement", "src": "14652:54:34"}, {"assignments": [9930], "declarations": [{"constant": false, "id": 9930, "mutability": "mutable", "name": "amountToSettleAsset", "nodeType": "VariableDeclaration", "scope": 10076, "src": "14716:26:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9929, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14716:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 9941, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"id": 9937, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9901, "src": "14767:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 9936, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "14759:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9935, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14759:7:34", "typeDescriptions": {}}}, "id": 9938, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14759:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 9934, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "14752:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}, "typeName": {"id": 9933, "name": "uint88", "nodeType": "ElementaryTypeName", "src": "14752:6:34", "typeDescriptions": {}}}, "id": 9939, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14752:22:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint88", "typeString": "uint88"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint88", "typeString": "uint88"}], "id": 9932, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "14745:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 9931, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14745:6:34", "typeDescriptions": {}}}, "id": 9940, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14745:30:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "14716:59:34"}, {"assignments": [9943], "declarations": [{"constant": false, "id": 9943, "mutability": "mutable", "name": "counterpartyContext", "nodeType": "VariableDeclaration", "scope": 10076, "src": "14786:41:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext"}, "typeName": {"id": 9942, "name": "AccountContext", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56702, "src": "14786:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_storage_ptr", "typeString": "struct AccountContext"}}, "visibility": "internal"}], "id": 9948, "initialValue": {"arguments": [{"id": 9946, "name": "counterparty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9911, "src": "14882:12:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 9944, "name": "AccountContextHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23459, "src": "14842:21:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_AccountContextHandler_$23459_$", "typeString": "type(library AccountContextHandler)"}}, "id": 9945, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAccountContext", "nodeType": "MemberAccess", "referencedDeclaration": 22749, "src": "14842:39:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_AccountContext_$56702_memory_ptr_$", "typeString": "function (address) view returns (struct AccountContext memory)"}}, "id": 9947, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14842:53:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "nodeType": "VariableDeclarationStatement", "src": "14786:109:34"}, {"condition": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 9949, "name": "counterpartyContext", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9943, "src": "14910:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "id": 9950, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mustSettleAssets", "nodeType": "MemberAccess", "referencedDeclaration": 22914, "src": "14910:36:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AccountContext_$56702_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_AccountContext_$56702_memory_ptr_$", "typeString": "function (struct AccountContext memory) view returns (bool)"}}, "id": 9951, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14910:38:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 9961, "nodeType": "IfStatement", "src": "14906:160:34", "trueBody": {"id": 9960, "nodeType": "Block", "src": "14950:116:34", "statements": [{"expression": {"id": 9958, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9952, "name": "counterpartyContext", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9943, "src": "14964:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9955, "name": "counterparty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9911, "src": "15021:12:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9956, "name": "counterpartyContext", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9943, "src": "15035:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}], "expression": {"id": 9953, "name": "SettleAssetsExternal", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1335, "src": "14986:20:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_SettleAssetsExternal_$1335_$", "typeString": "type(library SettleAssetsExternal)"}}, "id": 9954, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "settleAccount", "nodeType": "MemberAccess", "referencedDeclaration": 1334, "src": "14986:34:34", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_nonpayable$_t_address_$_t_struct$_AccountContext_$56702_memory_ptr_$returns$_t_struct$_AccountContext_$56702_memory_ptr_$", "typeString": "function (address,struct AccountContext memory) returns (struct AccountContext memory)"}}, "id": 9957, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14986:69:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "src": "14964:91:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "id": 9959, "nodeType": "ExpressionStatement", "src": "14964:91:34"}]}}, {"expression": {"id": 9970, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 9962, "name": "amountToSettleAsset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9930, "src": "15406:19:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 9965, "name": "counterparty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9911, "src": "15491:12:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 9966, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9897, "src": "15517:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9967, "name": "amountToSettleAsset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9930, "src": "15540:19:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 9968, "name": "counterpartyContext", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9943, "src": "15573:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}], "expression": {"id": 9963, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24802, "src": "15428:14:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BalanceHandler_$24802_$", "typeString": "type(library BalanceHandler)"}}, "id": 9964, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setBalanceStorageForSettleCashDebt", "nodeType": "MemberAccess", "referencedDeclaration": 24149, "src": "15428:49:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_int256_$_t_struct$_AccountContext_$56702_memory_ptr_$returns$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,int256,struct AccountContext memory) returns (int256)"}}, "id": 9969, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15428:174:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "15406:196:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 9971, "nodeType": "ExpressionStatement", "src": "15406:196:34"}, {"assignments": [9973], "declarations": [{"constant": false, "id": 9973, "mutability": "mutable", "name": "threeMonthMaturity", "nodeType": "VariableDeclaration", "scope": 10076, "src": "15755:26:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9972, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15755:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 9981, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 9980, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 9976, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9899, "src": "15810:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 9974, "name": "DateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31991, "src": "15784:8:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DateTime_$31991_$", "typeString": "type(library DateTime)"}}, "id": 9975, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getReferenceTime", "nodeType": "MemberAccess", "referencedDeclaration": 31384, "src": "15784:25:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 9977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15784:36:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 9978, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "15823:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$22246_$", "typeString": "type(library Constants)"}}, "id": 9979, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "QUARTER", "nodeType": "MemberAccess", "referencedDeclaration": 22094, "src": "15823:17:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15784:56:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "15755:85:34"}, {"assignments": [9983], "declarations": [{"constant": false, "id": 9983, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 10076, "src": "15850:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9982, "name": "int256", "nodeType": "ElementaryTypeName", "src": "15850:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 9990, "initialValue": {"arguments": [{"id": 9985, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9897, "src": "15905:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 9986, "name": "threeMonthMaturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9973, "src": "15916:18:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9987, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9899, "src": "15936:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 9988, "name": "amountToSettleAsset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9930, "src": "15947:19:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 9984, "name": "_getfCashSettleAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10125, "src": "15883:21:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (struct CashGroupParameters memory,uint256,uint256,int256) view returns (int256)"}}, "id": 9989, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15883:84:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "15850:117:34"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 9994, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 9992, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9983, "src": "16083:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "30", "id": 9993, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16098:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "16083:16:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 9991, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "16075:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 9995, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16075:25:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 9996, "nodeType": "ExpressionStatement", "src": "16075:25:34"}, {"id": 10048, "nodeType": "Block", "src": "16441:590:34", "statements": [{"assignments": [10000], "declarations": [{"constant": false, "id": 10000, "mutability": "mutable", "name": "assets", "nodeType": "VariableDeclaration", "scope": 10048, "src": "16455:30:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 9998, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56620, "src": "16455:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$56620_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 9999, "nodeType": "ArrayTypeName", "src": "16455:16:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "id": 10006, "initialValue": {"arguments": [{"hexValue": "31", "id": 10004, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16509:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 10003, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "16488:20:34", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct PortfolioAsset memory[] memory)"}, "typeName": {"baseType": {"id": 10001, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56620, "src": "16492:14:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$56620_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 10002, "nodeType": "ArrayTypeName", "src": "16492:16:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}}, "id": 10005, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16488:23:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16455:56:34"}, {"expression": {"id": 10013, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 10007, "name": "assets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10000, "src": "16525:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 10009, "indexExpression": {"hexValue": "30", "id": 10008, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16532:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16525:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$56620_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 10010, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56609, "src": "16525:20:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 10011, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9897, "src": "16548:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10012, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "16548:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "src": "16525:43:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10014, "nodeType": "ExpressionStatement", "src": "16525:43:34"}, {"expression": {"id": 10020, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 10015, "name": "assets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10000, "src": "16582:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 10017, "indexExpression": {"hexValue": "30", "id": 10016, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16589:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16582:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$56620_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 10018, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 56611, "src": "16582:18:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10019, "name": "threeMonthMaturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9973, "src": "16603:18:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16582:39:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10021, "nodeType": "ExpressionStatement", "src": "16582:39:34"}, {"expression": {"id": 10029, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 10022, "name": "assets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10000, "src": "16635:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 10024, "indexExpression": {"hexValue": "30", "id": 10023, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16642:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16635:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$56620_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 10025, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 56615, "src": "16635:18:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 10026, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9983, "src": "16656:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10027, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "16656:15:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 10028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16656:17:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "16635:38:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10030, "nodeType": "ExpressionStatement", "src": "16635:38:34"}, {"expression": {"id": 10037, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 10031, "name": "assets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10000, "src": "16738:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 10033, "indexExpression": {"hexValue": "30", "id": 10032, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16745:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16738:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$56620_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 10034, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "assetType", "nodeType": "MemberAccess", "referencedDeclaration": 56613, "src": "16738:19:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 10035, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "16760:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$22246_$", "typeString": "type(library Constants)"}}, "id": 10036, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "FCASH_ASSET_TYPE", "nodeType": "MemberAccess", "referencedDeclaration": 22176, "src": "16760:26:34", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "16738:48:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10038, "nodeType": "ExpressionStatement", "src": "16738:48:34"}, {"expression": {"id": 10046, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10039, "name": "counterpartyContext", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9943, "src": "16858:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10042, "name": "counterparty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9911, "src": "16933:12:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10043, "name": "counterpartyContext", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9943, "src": "16963:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, {"id": 10044, "name": "assets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10000, "src": "17000:6:34", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}, {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}], "expression": {"id": 10040, "name": "TransferAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38011, "src": "16880:14:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_TransferAssets_$38011_$", "typeString": "type(library TransferAssets)"}}, "id": 10041, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "placeAssetsInAccount", "nodeType": "MemberAccess", "referencedDeclaration": 38010, "src": "16880:35:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AccountContext_$56702_memory_ptr_$_t_array$_t_struct$_PortfolioAsset_$56620_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_AccountContext_$56702_memory_ptr_$", "typeString": "function (address,struct AccountContext memory,struct PortfolioAsset memory[] memory) returns (struct AccountContext memory)"}}, "id": 10045, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16880:140:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "src": "16858:162:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "id": 10047, "nodeType": "ExpressionStatement", "src": "16858:162:34"}]}, {"expression": {"arguments": [{"id": 10052, "name": "counterparty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9911, "src": "17078:12:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 10049, "name": "counterpartyContext", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9943, "src": "17040:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$56702_memory_ptr", "typeString": "struct AccountContext memory"}}, "id": 10051, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "setAccountContext", "nodeType": "MemberAccess", "referencedDeclaration": 22776, "src": "17040:37:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AccountContext_$56702_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_AccountContext_$56702_memory_ptr_$", "typeString": "function (struct AccountContext memory,address)"}}, "id": 10053, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17040:51:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10054, "nodeType": "ExpressionStatement", "src": "17040:51:34"}, {"eventCall": {"arguments": [{"id": 10056, "name": "counterparty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9911, "src": "17136:12:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"expression": {"id": 10059, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9897, "src": "17169:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10060, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "17169:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "id": 10058, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "17162:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint16_$", "typeString": "type(uint16)"}, "typeName": {"id": 10057, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "17162:6:34", "typeDescriptions": {}}}, "id": 10061, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17162:28:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 10062, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9895, "src": "17204:7:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10063, "name": "amountToSettleAsset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9930, "src": "17225:19:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 10064, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9983, "src": "17258:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10065, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "17258:15:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 10066, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17258:17:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 10055, "name": "SettledCashDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9146, "src": "17107:15:34", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$_t_address_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (address,uint16,address,int256,int256)"}}, "id": 10067, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17107:178:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10068, "nodeType": "EmitStatement", "src": "17102:183:34"}, {"expression": {"components": [{"id": 10069, "name": "threeMonthMaturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9973, "src": "17304:18:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 10070, "name": "amountToSettleAsset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9930, "src": "17324:19:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "17324:23:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 10072, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17324:25:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 10073, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9983, "src": "17351:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 10074, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "17303:60:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "functionReturnParameters": 9909, "id": 10075, "nodeType": "Return", "src": "17296:67:34"}]}, "documentation": {"id": 9893, "nodeType": "StructuredDocumentation", "src": "13544:689:34", "text": "@notice If an account has a negative cash balance we allow anyone to lend to to that account at a penalty\n rate to the 3 month market.\n @param account the account initiating the trade, used to check that self settlement is not possible\n @param cashGroup parameters for the trade\n @param blockTime the current block time\n @param trade bytes32 encoding of the particular trade\n @return maturity: the date of the three month maturity where fCash will be exchanged\n @return cashAmount: a negative cash amount that the account must pay to the settled account\n @return fCashAmount: a positive fCash amount that the account will receive"}, "id": 10077, "implemented": true, "kind": "function", "modifiers": [], "name": "_settleCashDebt", "nodeType": "FunctionDefinition", "parameters": {"id": 9902, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9895, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 10077, "src": "14272:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 9894, "name": "address", "nodeType": "ElementaryTypeName", "src": "14272:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 9897, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 10077, "src": "14297:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 9896, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "14297:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 9899, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 10077, "src": "14343:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9898, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14343:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9901, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 10077, "src": "14370:13:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 9900, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "14370:7:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "14262:127:34"}, "returnParameters": {"id": 9909, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 9904, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10077, "src": "14437:7:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9903, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14437:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 9906, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10077, "src": "14458:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9905, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14458:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 9908, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10077, "src": "14478:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 9907, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14478:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "14423:71:34"}, "scope": 10485, "src": "14238:3132:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 10124, "nodeType": "Block", "src": "17677:678:34", "statements": [{"assignments": [10092], "declarations": [{"constant": false, "id": 10092, "mutability": "mutable", "name": "oracleRate", "nodeType": "VariableDeclaration", "scope": 10124, "src": "17687:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10091, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17687:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10098, "initialValue": {"arguments": [{"id": 10095, "name": "threeMonthMaturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10082, "src": "17738:18:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10096, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10084, "src": "17758:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10093, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10080, "src": "17708:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10094, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "calculateOracleRate", "nodeType": "MemberAccess", "referencedDeclaration": 30794, "src": "17708:29:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_CashGroupParameters_$56607_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,uint256,uint256) view returns (uint256)"}}, "id": 10097, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17708:60:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "17687:81:34"}, {"assignments": [10100], "declarations": [{"constant": false, "id": 10100, "mutability": "mutable", "name": "exchangeRate", "nodeType": "VariableDeclaration", "scope": 10124, "src": "17779:19:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10099, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17779:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 10114, "initialValue": {"arguments": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 10105, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10080, "src": "17883:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10106, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "getSettlementPenalty", "nodeType": "MemberAccess", "referencedDeclaration": 30492, "src": "17883:30:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_CashGroupParameters_$56607_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_CashGroupParameters_$56607_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory) pure returns (uint256)"}}, "id": 10107, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17883:32:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10103, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10092, "src": "17868:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 55817, "src": "17868:14:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17868:48:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 10111, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10084, "src": "17957:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10109, "name": "threeMonthMaturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10082, "src": "17934:18:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 55839, "src": "17934:22:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10112, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17934:33:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10101, "name": "Market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33905, "src": "17813:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Market_$33905_$", "typeString": "type(library Market)"}}, "id": 10102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getExchangeRateFromImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 32883, "src": "17813:37:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256) pure returns (int256)"}}, "id": 10113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17813:168:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "17779:202:34"}, {"expression": {"arguments": [{"id": 10121, "name": "exchangeRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10100, "src": "18335:12:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"arguments": [{"id": 10118, "name": "amountToSettleAsset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10086, "src": "18200:19:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 10115, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10080, "src": "18143:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10116, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "assetRate", "nodeType": "MemberAccess", "referencedDeclaration": 56604, "src": "18143:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateParameters_$56598_memory_ptr", "typeString": "struct AssetRateParameters memory"}}, "id": 10117, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "convertToUnderlying", "nodeType": "MemberAccess", "referencedDeclaration": 29550, "src": "18143:56:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_AssetRateParameters_$56598_memory_ptr_$_t_int256_$returns$_t_int256_$bound_to$_t_struct$_AssetRateParameters_$56598_memory_ptr_$", "typeString": "function (struct AssetRateParameters memory,int256) pure returns (int256)"}}, "id": 10119, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18143:77:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10120, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 44474, "src": "18143:191:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 10122, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18143:205:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 10090, "id": 10123, "nodeType": "Return", "src": "18124:224:34"}]}, "documentation": {"id": 10078, "nodeType": "StructuredDocumentation", "src": "17376:84:34", "text": "@dev Helper method to calculate the fCashAmount from the penalty settlement rate"}, "id": 10125, "implemented": true, "kind": "function", "modifiers": [], "name": "_getfCashSettleAmount", "nodeType": "FunctionDefinition", "parameters": {"id": 10087, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10080, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 10125, "src": "17505:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 10079, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "17505:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 10082, "mutability": "mutable", "name": "threeMonthMaturity", "nodeType": "VariableDeclaration", "scope": 10125, "src": "17551:26:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10081, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17551:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10084, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 10125, "src": "17587:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10083, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17587:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10086, "mutability": "mutable", "name": "amountToSettleAsset", "nodeType": "VariableDeclaration", "scope": 10125, "src": "17614:26:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10085, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17614:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "17495:151:34"}, "returnParameters": {"id": 10090, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10089, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10125, "src": "17669:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10088, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17669:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "17668:8:34"}, "scope": 10485, "src": "17465:890:34", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 10321, "nodeType": "Block", "src": "19211:3502:34", "statements": [{"assignments": [10144], "declarations": [{"constant": false, "id": 10144, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 10321, "src": "19221:16:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10143, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19221:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10157, "initialValue": {"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10154, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 10151, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10134, "src": "19263:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 10150, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "19255:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 10149, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19255:7:34", "typeDescriptions": {}}}, "id": 10152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19255:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "323136", "id": 10153, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19273:3:34", "typeDescriptions": {"typeIdentifier": "t_rational_216_by_1", "typeString": "int_const 216"}, "value": "216"}, "src": "19255:21:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 10148, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "19248:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 10147, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "19248:6:34", "typeDescriptions": {}}}, "id": 10155, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19248:29:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}], "id": 10146, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "19240:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 10145, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19240:7:34", "typeDescriptions": {}}}, "id": 10156, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19240:38:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "19221:57:34"}, {"assignments": [10159], "declarations": [{"constant": false, "id": 10159, "mutability": "mutable", "name": "fCashAmountToPurchase", "nodeType": "VariableDeclaration", "scope": 10321, "src": "19288:28:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10158, "name": "int256", "nodeType": "ElementaryTypeName", "src": "19288:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 10172, "initialValue": {"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10169, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 10166, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10134, "src": "19340:5:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 10165, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "19332:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 10164, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19332:7:34", "typeDescriptions": {}}}, "id": 10167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19332:14:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "313238", "id": 10168, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "19350:3:34", "typeDescriptions": {"typeIdentifier": "t_rational_128_by_1", "typeString": "int_const 128"}, "value": "128"}, "src": "19332:21:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 10163, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "19325:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}, "typeName": {"id": 10162, "name": "uint88", "nodeType": "ElementaryTypeName", "src": "19325:6:34", "typeDescriptions": {}}}, "id": 10170, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19325:29:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint88", "typeString": "uint88"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint88", "typeString": "uint88"}], "id": 10161, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "19319:5:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_int88_$", "typeString": "type(int88)"}, "typeName": {"id": 10160, "name": "int88", "nodeType": "ElementaryTypeName", "src": "19319:5:34", "typeDescriptions": {}}}, "id": 10171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19319:36:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int88", "typeString": "int88"}}, "nodeType": "VariableDeclarationStatement", "src": "19288:67:34"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10174, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10144, "src": "19373:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 10175, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10132, "src": "19384:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "19373:20:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964206d61747572697479", "id": 10177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "19395:18:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6ac8fa1ec1f45f2a4a2017eedf59db09ad3fe10b2748a8ca73a4b71f86bef54e", "typeString": "literal_string \"Invalid maturity\""}, "value": "Invalid maturity"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6ac8fa1ec1f45f2a4a2017eedf59db09ad3fe10b2748a8ca73a4b71f86bef54e", "typeString": "literal_string \"Invalid maturity\""}], "id": 10173, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "19365:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 10178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19365:49:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10179, "nodeType": "ExpressionStatement", "src": "19365:49:34"}, {"expression": {"arguments": [{"id": 10188, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "19582:78:34", "subExpression": {"arguments": [{"expression": {"id": 10183, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10130, "src": "19614:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10184, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxMarketIndex", "nodeType": "MemberAccess", "referencedDeclaration": 56602, "src": "19614:24:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10185, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10144, "src": "19640:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10186, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10132, "src": "19650:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10181, "name": "DateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31991, "src": "19583:8:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DateTime_$31991_$", "typeString": "type(library DateTime)"}}, "id": 10182, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isValidMarketMaturity", "nodeType": "MemberAccess", "referencedDeclaration": 31550, "src": "19583:30:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256,uint256,uint256) pure returns (bool)"}}, "id": 10187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19583:77:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e206964696f73796e637261746963206d61747572697479", "id": 10189, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "19674:28:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_170cbb6ae2d81aeec65922f85f1fdb93aed169edb18ab7dfe13333b8f0ea8715", "typeString": "literal_string \"Non idiosyncratic maturity\""}, "value": "Non idiosyncratic maturity"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_170cbb6ae2d81aeec65922f85f1fdb93aed169edb18ab7dfe13333b8f0ea8715", "typeString": "literal_string \"Non idiosyncratic maturity\""}], "id": 10180, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "19561:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 10190, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19561:151:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10191, "nodeType": "ExpressionStatement", "src": "19561:151:34"}, {"assignments": [10193], "declarations": [{"constant": false, "id": 10193, "mutability": "mutable", "name": "nTokenAddress", "nodeType": "VariableDeclaration", "scope": 10321, "src": "19723:21:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10192, "name": "address", "nodeType": "ElementaryTypeName", "src": "19723:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 10199, "initialValue": {"arguments": [{"expression": {"id": 10196, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10130, "src": "19775:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10197, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "19775:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 10194, "name": "nTokenHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35501, "src": "19747:13:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_nTokenHandler_$35501_$", "typeString": "type(library nTokenHandler)"}}, "id": 10195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "nTokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 34570, "src": "19747:27:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 10198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19747:49:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "19723:73:34"}, {"assignments": [null, null, 10201, null, 10203], "declarations": [null, null, {"constant": false, "id": 10201, "mutability": "mutable", "name": "lastInitializedTime", "nodeType": "VariableDeclaration", "scope": 10321, "src": "19910:27:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19910:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, {"constant": false, "id": 10203, "mutability": "mutable", "name": "parameters", "nodeType": "VariableDeclaration", "scope": 10321, "src": "19987:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes5", "typeString": "bytes5"}, "typeName": {"id": 10202, "name": "bytes5", "nodeType": "ElementaryTypeName", "src": "19987:6:34", "typeDescriptions": {"typeIdentifier": "t_bytes5", "typeString": "bytes5"}}, "visibility": "internal"}], "id": 10208, "initialValue": {"arguments": [{"id": 10206, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10193, "src": "20048:13:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 10204, "name": "nTokenHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35501, "src": "20017:13:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_nTokenHandler_$35501_$", "typeString": "type(library nTokenHandler)"}}, "id": 10205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getNTokenContext", "nodeType": "MemberAccess", "referencedDeclaration": 34549, "src": "20017:30:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes5_$", "typeString": "function (address) view returns (uint16,uint256,uint256,uint8,bytes5)"}}, "id": 10207, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20017:45:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes5_$", "typeString": "tuple(uint16,uint256,uint256,uint8,bytes5)"}}, "nodeType": "VariableDeclarationStatement", "src": "19833:229:34"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10226, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10210, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10132, "src": "20732:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10224, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"baseExpression": {"id": 10217, "name": "parameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10203, "src": "20819:10:34", "typeDescriptions": {"typeIdentifier": "t_bytes5", "typeString": "bytes5"}}, "id": 10220, "indexExpression": {"expression": {"id": 10218, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "20830:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$22246_$", "typeString": "type(library Constants)"}}, "id": 10219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RESIDUAL_PURCHASE_TIME_BUFFER", "nodeType": "MemberAccess", "referencedDeclaration": 22221, "src": "20830:39:34", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20819:51:34", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 10216, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20813:5:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 10215, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "20813:5:34", "typeDescriptions": {}}}, "id": 10221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20813:58:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 10214, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "20805:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 10213, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20805:7:34", "typeDescriptions": {}}}, "id": 10222, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20805:67:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31", "id": 10223, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20875:7:34", "subdenomination": "hours", "typeDescriptions": {"typeIdentifier": "t_rational_3600_by_1", "typeString": "int_const 3600"}, "value": "1"}, "src": "20805:77:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10211, "name": "lastInitializedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10201, "src": "20760:19:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 55817, "src": "20760:23:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20760:140:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "20732:168:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e73756666696369656e7420626c6f636b2074696d65", "id": 10227, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "20914:25:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a342b12b1f68df3836aadf9b184eda8e1c38b67afe19dc75e8fec530927211c1", "typeString": "literal_string \"Insufficient block time\""}, "value": "Insufficient block time"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a342b12b1f68df3836aadf9b184eda8e1c38b67afe19dc75e8fec530927211c1", "typeString": "literal_string \"Insufficient block time\""}], "id": 10209, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "20711:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 10228, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20711:238:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10229, "nodeType": "ExpressionStatement", "src": "20711:238:34"}, {"assignments": [10231], "declarations": [{"constant": false, "id": 10231, "mutability": "mutable", "name": "notional", "nodeType": "VariableDeclaration", "scope": 10321, "src": "20960:15:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10230, "name": "int256", "nodeType": "ElementaryTypeName", "src": "20960:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 10239, "initialValue": {"arguments": [{"id": 10234, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10193, "src": "21028:13:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 10235, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10130, "src": "21043:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10236, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "21043:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 10237, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10144, "src": "21065:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10232, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36492, "src": "20990:19:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$36492_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 10233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getifCashNotional", "nodeType": "MemberAccess", "referencedDeclaration": 35927, "src": "20990:37:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (address,uint256,uint256) view returns (int256)"}}, "id": 10238, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20990:84:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "20960:114:34"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 10246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10240, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10231, "src": "21173:8:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 10241, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21184:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21173:12:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10245, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10243, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "21189:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 10244, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21213:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21189:25:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "21173:41:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 10262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10256, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10231, "src": "21400:8:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21411:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21400:12:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10261, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10259, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "21416:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10260, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21440:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "21416:25:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "21400:41:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10276, "nodeType": "Block", "src": "21623:121:34", "statements": [{"expression": {"arguments": [{"hexValue": "496e76616c696420616d6f756e74", "id": 10273, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "21716:16:34", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1", "typeString": "literal_string \"Invalid amount\""}, "value": "Invalid amount"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1", "typeString": "literal_string \"Invalid amount\""}], "id": 10272, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "21709:6:34", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 10274, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21709:24:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10275, "nodeType": "ExpressionStatement", "src": "21709:24:34"}]}, "id": 10277, "nodeType": "IfStatement", "src": "21396:348:34", "trueBody": {"id": 10271, "nodeType": "Block", "src": "21443:174:34", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10263, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "21540:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 10264, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10231, "src": "21564:8:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "21540:32:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 10270, "nodeType": "IfStatement", "src": "21536:70:34", "trueBody": {"expression": {"id": 10268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10266, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "21574:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10267, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10231, "src": "21598:8:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "21574:32:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10269, "nodeType": "ExpressionStatement", "src": "21574:32:34"}}]}}, "id": 10278, "nodeType": "IfStatement", "src": "21169:575:34", "trueBody": {"id": 10255, "nodeType": "Block", "src": "21216:174:34", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10247, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "21313:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 10248, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10231, "src": "21337:8:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "21313:32:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 10254, "nodeType": "IfStatement", "src": "21309:70:34", "trueBody": {"expression": {"id": 10252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10250, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "21347:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 10251, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10231, "src": "21371:8:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "21347:32:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10253, "nodeType": "ExpressionStatement", "src": "21347:32:34"}}]}}, {"assignments": [10280], "declarations": [{"constant": false, "id": 10280, "mutability": "mutable", "name": "netAssetCashNToken", "nodeType": "VariableDeclaration", "scope": 10321, "src": "21966:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10279, "name": "int256", "nodeType": "ElementaryTypeName", "src": "21966:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 10288, "initialValue": {"arguments": [{"id": 10282, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10130, "src": "22050:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 10283, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10144, "src": "22077:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10284, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10132, "src": "22103:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10285, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "22130:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 10286, "name": "parameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10203, "src": "22169:10:34", "typeDescriptions": {"typeIdentifier": "t_bytes5", "typeString": "bytes5"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_bytes5", "typeString": "bytes5"}], "id": 10281, "name": "_getResidualPriceAssetCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10412, "src": "22006:26:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_uint256_$_t_uint256_$_t_int256_$_t_bytes6_$returns$_t_int256_$", "typeString": "function (struct CashGroupParameters memory,uint256,uint256,int256,bytes6) view returns (int256)"}}, "id": 10287, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22006:187:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "21966:227:34"}, {"expression": {"arguments": [{"id": 10290, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10193, "src": "22240:13:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 10291, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10130, "src": "22267:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10292, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "22267:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 10293, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10144, "src": "22301:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10294, "name": "lastInitializedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10201, "src": "22323:19:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10295, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "22356:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 10296, "name": "netAssetCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10280, "src": "22391:18:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 10289, "name": "_updateNTokenPortfolio", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10484, "src": "22204:22:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (address,uint256,uint256,uint256,int256,int256)"}}, "id": 10297, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22204:215:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10298, "nodeType": "ExpressionStatement", "src": "22204:215:34"}, {"eventCall": {"arguments": [{"arguments": [{"expression": {"id": 10302, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10130, "src": "22478:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10303, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 56600, "src": "22478:20:34", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "id": 10301, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22471:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint16_$", "typeString": "type(uint16)"}, "typeName": {"id": 10300, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "22471:6:34", "typeDescriptions": {}}}, "id": 10304, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22471:28:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"arguments": [{"id": 10307, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10144, "src": "22520:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 10306, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "22513:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint40_$", "typeString": "type(uint40)"}, "typeName": {"id": 10305, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "22513:6:34", "typeDescriptions": {}}}, "id": 10308, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22513:16:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, {"id": 10309, "name": "purchaser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10128, "src": "22543:9:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10310, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "22566:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 10311, "name": "netAssetCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10280, "src": "22601:18:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint40", "typeString": "uint40"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 10299, "name": "nTokenResidualPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 9158, "src": "22435:22:34", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint40_$_t_address_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (uint16,uint40,address,int256,int256)"}}, "id": 10312, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22435:194:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10313, "nodeType": "EmitStatement", "src": "22430:199:34"}, {"expression": {"components": [{"id": 10314, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10144, "src": "22648:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 10315, "name": "netAssetCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10280, "src": "22658:18:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "22658:22:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 10317, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22658:24:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 10318, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10159, "src": "22684:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 10319, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "22647:59:34", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "functionReturnParameters": 10142, "id": 10320, "nodeType": "Return", "src": "22640:66:34"}]}, "documentation": {"id": 10126, "nodeType": "StructuredDocumentation", "src": "18361:574:34", "text": "@notice Allows an account to purchase ntoken residuals\n @param purchaser account that is purchasing the residuals\n @param cashGroup parameters for the trade\n @param blockTime the current block time\n @param trade bytes32 encoding of the particular trade\n @return maturity: the date of the idiosyncratic maturity where fCash will be exchanged\n @return cashAmount: a positive or negative cash amount that the account will receive or pay\n @return fCashAmount: a positive or negative fCash amount that the account will receive"}, "id": 10322, "implemented": true, "kind": "function", "modifiers": [], "name": "_purchaseNTokenResidual", "nodeType": "FunctionDefinition", "parameters": {"id": 10135, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10128, "mutability": "mutable", "name": "purchaser", "nodeType": "VariableDeclaration", "scope": 10322, "src": "18982:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10127, "name": "address", "nodeType": "ElementaryTypeName", "src": "18982:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 10130, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 10322, "src": "19009:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 10129, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "19009:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 10132, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 10322, "src": "19055:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10131, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19055:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10134, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 10322, "src": "19082:13:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 10133, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "19082:7:34", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "18972:129:34"}, "returnParameters": {"id": 10142, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10137, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10322, "src": "19149:7:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10136, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19149:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10139, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10322, "src": "19170:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10138, "name": "int256", "nodeType": "ElementaryTypeName", "src": "19170:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 10141, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10322, "src": "19190:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10140, "name": "int256", "nodeType": "ElementaryTypeName", "src": "19190:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "19135:71:34"}, "scope": 10485, "src": "18940:3773:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 10411, "nodeType": "Block", "src": "23036:1384:34", "statements": [{"assignments": [10339], "declarations": [{"constant": false, "id": 10339, "mutability": "mutable", "name": "oracleRate", "nodeType": "VariableDeclaration", "scope": 10411, "src": "23046:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10338, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23046:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10345, "initialValue": {"arguments": [{"id": 10342, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10327, "src": "23097:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10343, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10329, "src": "23107:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10340, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10325, "src": "23067:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10341, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "calculateOracleRate", "nodeType": "MemberAccess", "referencedDeclaration": 30794, "src": "23067:29:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$56607_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_CashGroupParameters_$56607_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,uint256,uint256) view returns (uint256)"}}, "id": 10344, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23067:50:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23046:71:34"}, {"assignments": [10347], "declarations": [{"constant": false, "id": 10347, "mutability": "mutable", "name": "purchaseIncentive", "nodeType": "VariableDeclaration", "scope": 10411, "src": "23209:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10346, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23209:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 10361, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10360, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"baseExpression": {"id": 10352, "name": "parameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10333, "src": "23263:10:34", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}}, "id": 10355, "indexExpression": {"expression": {"id": 10353, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "23274:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$22246_$", "typeString": "type(library Constants)"}}, "id": 10354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RESIDUAL_PURCHASE_INCENTIVE", "nodeType": "MemberAccess", "referencedDeclaration": 22227, "src": "23274:37:34", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "23263:49:34", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 10351, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23257:5:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 10350, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "23257:5:34", "typeDescriptions": {}}}, "id": 10356, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23257:56:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 10349, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "23249:7:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 10348, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23249:7:34", "typeDescriptions": {}}}, "id": 10357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23249:65:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"id": 10358, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22246, "src": "23333:9:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$22246_$", "typeString": "type(library Constants)"}}, "id": 10359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TEN_BASIS_POINTS", "nodeType": "MemberAccess", "referencedDeclaration": 22160, "src": "23333:26:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23249:110:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "23209:150:34"}, {"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10362, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10331, "src": "23374:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10363, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23388:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "23374:15:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 10375, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10373, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10339, "src": "23635:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 10374, "name": "purchaseIncentive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10347, "src": "23648:17:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23635:30:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 10388, "nodeType": "Block", "src": "23927:141:34", "statements": [{"expression": {"id": 10386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10384, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10339, "src": "24043:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 10385, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24056:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24043:14:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10387, "nodeType": "ExpressionStatement", "src": "24043:14:34"}]}, "id": 10389, "nodeType": "IfStatement", "src": "23631:437:34", "trueBody": {"id": 10383, "nodeType": "Block", "src": "23667:254:34", "statements": [{"expression": {"id": 10381, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10376, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10339, "src": "23864:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10379, "name": "purchaseIncentive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10347, "src": "23892:17:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10377, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10339, "src": "23877:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 55839, "src": "23877:14:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10380, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23877:33:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23864:46:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10382, "nodeType": "ExpressionStatement", "src": "23864:46:34"}]}}, "id": 10390, "nodeType": "IfStatement", "src": "23370:698:34", "trueBody": {"id": 10372, "nodeType": "Block", "src": "23391:234:34", "statements": [{"expression": {"id": 10370, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10365, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10339, "src": "23568:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10368, "name": "purchaseIncentive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10347, "src": "23596:17:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10366, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10339, "src": "23581:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10367, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 55817, "src": "23581:14:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23581:33:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "23568:46:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10371, "nodeType": "ExpressionStatement", "src": "23568:46:34"}]}}, {"assignments": [10392], "declarations": [{"constant": false, "id": 10392, "mutability": "mutable", "name": "exchangeRate", "nodeType": "VariableDeclaration", "scope": 10411, "src": "24078:19:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10391, "name": "int256", "nodeType": "ElementaryTypeName", "src": "24078:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 10401, "initialValue": {"arguments": [{"id": 10395, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10339, "src": "24150:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 10398, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10329, "src": "24175:9:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10396, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10327, "src": "24162:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 10397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 55839, "src": "24162:12:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 10399, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24162:23:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10393, "name": "Market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33905, "src": "24112:6:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Market_$33905_$", "typeString": "type(library Market)"}}, "id": 10394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getExchangeRateFromImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 32883, "src": "24112:37:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256) pure returns (int256)"}}, "id": 10400, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24112:74:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "24078:108:34"}, {"expression": {"arguments": [{"arguments": [{"id": 10407, "name": "exchangeRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10392, "src": "24399:12:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 10405, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10331, "src": "24368:11:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 44454, "src": "24368:30:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 10408, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24368:44:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 10402, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10325, "src": "24326:9:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 10403, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "assetRate", "nodeType": "MemberAccess", "referencedDeclaration": 56604, "src": "24326:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateParameters_$56598_memory_ptr", "typeString": "struct AssetRateParameters memory"}}, "id": 10404, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "convertFromUnderlying", "nodeType": "MemberAccess", "referencedDeclaration": 29578, "src": "24326:41:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_AssetRateParameters_$56598_memory_ptr_$_t_int256_$returns$_t_int256_$bound_to$_t_struct$_AssetRateParameters_$56598_memory_ptr_$", "typeString": "function (struct AssetRateParameters memory,int256) pure returns (int256)"}}, "id": 10409, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24326:87:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 10337, "id": 10410, "nodeType": "Return", "src": "24307:106:34"}]}, "documentation": {"id": 10323, "nodeType": "StructuredDocumentation", "src": "22719:85:34", "text": "@notice Returns the amount of asset cash required to purchase the nToken residual"}, "id": 10412, "implemented": true, "kind": "function", "modifiers": [], "name": "_getResidualPriceAssetCash", "nodeType": "FunctionDefinition", "parameters": {"id": 10334, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10325, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 10412, "src": "22854:36:34", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 10324, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56607, "src": "22854:19:34", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$56607_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 10327, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 10412, "src": "22900:16:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10326, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22900:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10329, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 10412, "src": "22926:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10328, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22926:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10331, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 10412, "src": "22953:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10330, "name": "int256", "nodeType": "ElementaryTypeName", "src": "22953:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 10333, "mutability": "mutable", "name": "parameters", "nodeType": "VariableDeclaration", "scope": 10412, "src": "22981:17:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}, "typeName": {"id": 10332, "name": "bytes6", "nodeType": "ElementaryTypeName", "src": "22981:6:34", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}}, "visibility": "internal"}], "src": "22844:160:34"}, "returnParameters": {"id": 10337, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10336, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 10412, "src": "23028:6:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10335, "name": "int256", "nodeType": "ElementaryTypeName", "src": "23028:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "23027:8:34"}, "scope": 10485, "src": "22809:1611:34", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 10483, "nodeType": "Block", "src": "24667:1004:34", "statements": [{"assignments": [10428], "declarations": [{"constant": false, "id": 10428, "mutability": "mutable", "name": "finalNotional", "nodeType": "VariableDeclaration", "scope": 10483, "src": "24677:20:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10427, "name": "int256", "nodeType": "ElementaryTypeName", "src": "24677:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 10439, "initialValue": {"arguments": [{"id": 10431, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10414, "src": "24748:13:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10432, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10416, "src": "24775:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10433, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10418, "src": "24799:8:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10434, "name": "lastInitializedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10420, "src": "24821:19:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 10435, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10422, "src": "24854:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 44391, "src": "24854:25:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 10437, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24854:27:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 10429, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36492, "src": "24700:19:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$36492_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 10430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addifCashAsset", "nodeType": "MemberAccess", "referencedDeclaration": 36189, "src": "24700:34:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (address,uint256,uint256,uint256,int256) returns (int256)"}}, "id": 10438, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24700:236:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "24677:259:34"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 10457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 10447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10441, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10422, "src": "25043:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 10442, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25067:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25043:25:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10444, "name": "finalNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10428, "src": "25072:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "30", "id": 10445, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25089:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25072:18:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "25043:47:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 10448, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25042:49:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 10455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10451, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10449, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10422, "src": "25108:21:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 10450, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25132:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25108:25:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 10454, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 10452, "name": "finalNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10428, "src": "25137:13:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "30", "id": 10453, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "25154:1:34", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "25137:18:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "25108:47:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 10456, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "25107:49:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "25042:114:34", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 10440, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "25021:7:34", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 10458, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25021:145:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10459, "nodeType": "ExpressionStatement", "src": "25021:145:34"}, {"assignments": [10461, null, null, null], "declarations": [{"constant": false, "id": 10461, "mutability": "mutable", "name": "nTokenCashBalance", "nodeType": "VariableDeclaration", "scope": 10483, "src": "25218:24:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10460, "name": "int256", "nodeType": "ElementaryTypeName", "src": "25218:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, null, null, null], "id": 10467, "initialValue": {"arguments": [{"id": 10464, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10414, "src": "25403:13:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10465, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10416, "src": "25418:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 10462, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24802, "src": "25370:14:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BalanceHandler_$24802_$", "typeString": "type(library BalanceHandler)"}}, "id": 10463, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getBalanceStorage", "nodeType": "MemberAccess", "referencedDeclaration": 24663, "src": "25370:32:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$", "typeString": "function (address,uint256) view returns (int256,int256,uint256,uint256)"}}, "id": 10466, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25370:59:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(int256,int256,uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "25204:225:34"}, {"expression": {"id": 10473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 10468, "name": "nTokenCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10461, "src": "25439:17:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 10471, "name": "netAssetCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10424, "src": "25481:18:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 10469, "name": "nTokenCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10461, "src": "25459:17:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10470, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 44377, "src": "25459:21:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 10472, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25459:41:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "25439:61:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 10474, "nodeType": "ExpressionStatement", "src": "25439:61:34"}, {"expression": {"arguments": [{"id": 10478, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10414, "src": "25619:13:34", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 10479, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10416, "src": "25634:10:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 10480, "name": "nTokenCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10461, "src": "25646:17:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 10475, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24802, "src": "25577:14:34", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BalanceHandler_$24802_$", "typeString": "type(library BalanceHandler)"}}, "id": 10477, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setBalanceStorageForNToken", "nodeType": "MemberAccess", "referencedDeclaration": 24364, "src": "25577:41:34", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_int256_$returns$__$", "typeString": "function (address,uint256,int256)"}}, "id": 10481, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25577:87:34", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 10482, "nodeType": "ExpressionStatement", "src": "25577:87:34"}]}, "id": 10484, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateNTokenPortfolio", "nodeType": "FunctionDefinition", "parameters": {"id": 10425, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10414, "mutability": "mutable", "name": "nTokenAddress", "nodeType": "VariableDeclaration", "scope": 10484, "src": "24467:21:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 10413, "name": "address", "nodeType": "ElementaryTypeName", "src": "24467:7:34", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 10416, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 10484, "src": "24498:18:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10415, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24498:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10418, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 10484, "src": "24526:16:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10417, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24526:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10420, "mutability": "mutable", "name": "lastInitializedTime", "nodeType": "VariableDeclaration", "scope": 10484, "src": "24552:27:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10419, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24552:7:34", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10422, "mutability": "mutable", "name": "fCashAmountToPurchase", "nodeType": "VariableDeclaration", "scope": 10484, "src": "24589:28:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10421, "name": "int256", "nodeType": "ElementaryTypeName", "src": "24589:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 10424, "mutability": "mutable", "name": "netAssetCashNToken", "nodeType": "VariableDeclaration", "scope": 10484, "src": "24627:25:34", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 10423, "name": "int256", "nodeType": "ElementaryTypeName", "src": "24627:6:34", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "24457:201:34"}, "returnParameters": {"id": 10426, "nodeType": "ParameterList", "parameters": [], "src": "24667:0:34"}, "scope": 10485, "src": "24426:1245:34", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 10486, "src": "554:25119:34"}], "src": "41:25633:34"}, "compiler": {"version": "0.7.6+commit.7338295f", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "TradingAction", "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80633643f39b14610045578063b58f83ed1461007c575b600080fd5b81801561005157600080fd5b50610065610060366004614c84565b6100aa565b604051610073929190614e87565b60405180910390f35b81801561008857600080fd5b5061009c610097366004614b88565b610181565b60405161007392919061520e565b60008060006100b8876102a7565b90506100c26148a0565b60006100cc6148e8565b4260a082015260005b8781101561016b5760006101028d87878d8d878181106100f157fe5b905060200201358760a001516102d3565b856000018660200182815250828152508293505050506101348d8d61ffff16838e64ffffffffff1687602001516103f3565b60208401528380610149575060008360200151125b8351606085015191955061015d9190610560565b6060840152506001016100d5565b50606001519450925050505b9550959350505050565b61018961491e565b600080610195876102a7565b905061019f6148a0565b6101a76148e8565b4260a082015260005b868110156102925760008888838181106101c657fe5b9050602002013560f81c60ff1660058111156101de57fe5b905060028160058111156101ee57fe5b14806102055750600381600581111561020357fe5b145b1561022b5760405162461bcd60e51b81526004016102229061515c565b60405180910390fd5b60006102508d87878d8d8881811061023f57fe5b905060200201358860a001516102d3565b60208701819052908652909150610273908c9061ffff8f1690849060019061057c565b508251606084015161028491610560565b6060840152506001016101b0565b50606001519699969850959650505050505050565b6102af614946565b60006102be8361ffff16610681565b90506102ca83826106cd565b9150505b919050565b600080808060f886901c60058111156102e857fe5b905060048160058111156102f857fe5b14156103165761030a89898789610710565b919550935091506103e7565b600581600581111561032457fe5b14156103365761030a898987896108fa565b600081600581111561034457fe5b148061035b5750600181600581111561035957fe5b145b156103cf5761036d888883888a610b73565b809350819450505086602001519350876000015161ffff16896001600160a01b03167fc53d733b6fdfac3f892b49bf468cd1cae7773ab553e440dc689ed6b09bb646b18686866040516103c293929190615266565b60405180910390a36103e7565b60405162461bcd60e51b815260040161022290615099565b50955095509592505050565b6000806104008787610c7e565b9050600061040c610cb3565b6001600160a01b0389166000908152602082815260408083208b845282528083208a8452909152812091925080610443888a610cc0565b915091508061045157600080fd5b61045b8583610dcb565b156104ea578254600090610477908990600f90810b900b610560565b905060016001607f1b03198112801590610498575060016001607f1b038113155b6104a157600080fd5b83546001600160801b0319166001600160801b03600f83900b16178455806104d2576104cf86846000610dfb565b95505b6104dd8c8c88610e49565b9550610557945050505050565b861561054e5760016001607f1b0319871280159061050f575060016001607f1b038713155b61051857600080fd5b82546001600160801b0319166001600160801b03600f89900b1617835561054185836001610dfb565b945061054e8b8b87610e49565b86955050505050505b95945050505050565b8181018281121560008312151461057657600080fd5b92915050565b845161058b9085858585610ea3565b156105955761067a565b6040850151156105c25760006105b2866020015186868686610ea3565b905080156105c0575061067a565b505b6105cb82610fb4565b156105de5760008112156105de57600080fd5b6001600160571b031981128015906105fd57506001600160571b038113155b61060657600080fd5b8460200151518560400151141561062a576106248560200151610fca565b60208601525b6000856020015186604001518151811061064057fe5b602090810291909101810151868152908101859052604080820185905260608201849052600060a090920191909152860180516001019052505b5050505050565b610689614972565b600080600061069785611083565b604080516060810182526001600160a01b039093168352602083019390935260ff16600a0a918101919091529350505050919050565b6106d5614946565b60006106e48461ffff16611146565b6040805160808101825261ffff96909616865260ff821660208701528501939093525050606082015290565b6000808063ffffffff60d885901c16608085901c600a0b8682116107465760405162461bcd60e51b815260040161022290615017565b61075588602001518389611163565b156107725760405162461bcd60e51b815260040161022290614ed5565b6000610785896000015161ffff16611208565b90506000806107938361122e565b945050935050506107ba81600260ff16600581106107ad57fe5b8491610e10911a02611297565b8a116107d85760405162461bcd60e51b8152600401610222906150c5565b60006107ed848d6000015161ffff16886112f1565b90506000811280156107ff5750600085125b156108155780851215610810578094505b610852565b6000811380156108255750600085135b1561083a578085131561081057809450610852565b60405162461bcd60e51b815260040161022290614f0c565b600061086b8d888e896001600160d81b03198816611336565b9050610883858e6000015161ffff1689878a866113bd565b8d6001600160a01b03168764ffffffffff168e6000015161ffff167fe85dd6c9c85c29a2f4d4cb74e31514bfc478c8c5a50da255ea565123d879335289856040516108cf929190614e97565b60405180910390a4866108e182611442565b87995099509950505050505050505b9450945094915050565b60008080605884901c6001600160a01b03888116908216141561092f5760405162461bcd60e51b8152600401610222906151b5565b6001600160581b038516600061094483611450565b905061094f816114f1565b156109e0576040516337b5fc2160e11b815273__$f6541b0d362a0c7d99a2a29cd3d373d61b$__90636f6bf8429061098d9086908590600401614e12565b60a06040518083038186803b1580156109a557600080fd5b505af41580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190614d03565b90505b6109ec838a8484611545565b915060006276a7006109fd8a611678565b0190506000610a0e8b838c87611699565b90506000811215610a1e57600080fd5b604080516001808252818301909252600091816020015b610a3d61499c565b815260200190600190039081610a355790505090508b6000015161ffff1681600081518110610a6857fe5b602002602001015160000181815250508281600081518110610a8657fe5b60200260200101516020018181525050610a9f82611442565b81600081518110610aac57fe5b60200260200101516060018181525050600160ff1681600081518110610ace57fe5b60200260200101516040018181525050610ae98685836116f9565b9350610af79050838661177a565b8b6001600160a01b03168b6000015161ffff16866001600160a01b03167fc76e4e38ccd25a7b0a39cdaa81a20efa0c2127e74c448b7b05aef1c427d5732b87610b3f86611442565b604051610b4d929190614e97565b60405180910390a481610b5f85611442565b909d909c50909a5098505050505050505050565b60008060ff60f084901c16610b8b888883858961187e565b6001600160581b03609885901c1691506001866005811115610ba957fe5b1415610bbb57610bb882611442565b91505b610be18883610bd7888b602001516118f990919063ffffffff16565b8a92919085611956565b925082610c005760405162461bcd60e51b815260040161022290614fb7565b63ffffffff607885901c168015610c72576001876005811115610c1f57fe5b1415610c4e57808860a001511115610c495760405162461bcd60e51b81526004016102229061512c565b610c72565b808860a001511015610c725760405162461bcd60e51b81526004016102229061512c565b50509550959350505050565b600080610c896119b5565b6001600160a01b038516600090815260209182526040808220868352909252205491505092915050565b600080610576600c6119be565b6000806000610cce856119d7565b905062015180840615610ce8576000809250925050610dc4565b838110610cfc576000809250925050610dc4565b6201518081850304605a8111610d1957925060019150610dc49050565b6101688111610d58576000620151806207e900840604820160591901905060068104605a0160068281610d4857fe5b0660001494509450505050610dc4565b6108708111610d885760006201518062278d00840604820161016719019050601e8104608701601e8281610d4857fe5b611de28111610db8576000620151806276a700840604820161086f19019050605a810460c301605a8281610d4857fe5b61010060009350935050505b9250929050565b600060018210158015610de057506101008211155b610de957600080fd5b50600019011b600160ff1b9081161490565b600060018310158015610e1057506101008311155b610e1957600080fd5b8115610e325750600160ff1b60001983011c8317610e42565b50600160ff1b60001983011c1983165b9392505050565b6014610e54826119f3565b1115610e725760405162461bcd60e51b815260040161022290614fee565b6000610e7c6119b5565b6001600160a01b039094166000908152602094855260408082209482529390945250912055565b6000805b8651811015610fa7576000878281518110610ebe57fe5b60200260200101519050848160400151141580610edc575080518714155b80610eeb575085816020015114155b15610ef65750610f9f565b60028160a001516003811115610f0857fe5b14158015610f26575060038160a001516003811115610f2357fe5b14155b610f2f57600080fd5b6060810151600090610f419086610560565b9050610f4c86610fb4565b15610f5f576000811215610f5f57600080fd5b6001600160571b03198112801590610f7e57506001600160571b038113155b610f8757600080fd5b6060820152600160a090910181905291506105579050565b600101610ea7565b5060009695505050505050565b6000600282108015906105765750506008101590565b606060008251600014610fe1578251600202610fe4565b60015b905060008167ffffffffffffffff81118015610fff57600080fd5b5060405190808252806020026020018201604052801561103957816020015b61102661499c565b81526020019060019003908161101e5790505b50905060005b845181101561107b5784818151811061105457fe5b602002602001015182828151811061106857fe5b602090810291909101015260010161103f565b509392505050565b600080600080600061109486611ac3565b909250905060006001600160a01b0383166110b95750600090506402540be40061113b565b826001600160a01b0316631ee108336040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110f457600080fd5b505af1158015611108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112c9190614ceb565b90506000811361113b57600080fd5b969195509350915050565b600080611151611afa565b60009384526020525050604090205490565b60008084116111845760405162461bcd60e51b815260040161022290614f34565b60078411156111a55760405162461bcd60e51b815260040161022290615041565b6276a7008306156111b857506000610e42565b60006111c383611678565b905060015b8581116111fc576111e26111db82611b07565b8390611297565b8514156111f457600192505050610e42565b6001016111c8565b50600095945050505050565b600080611213611bab565b6000938452602052505060409020546001600160a01b031690565b60008060008060008061123f611bb8565b6001600160a01b039097166000908152602097909752505060409094205461ffff81169563ffffffff62010000830481169650600160301b830416945060ff600160501b8304169350600160581b90910460d81b9150565b600082820183811015610e42576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000806112fc610cb3565b6001600160a01b03861660009081526020918252604080822087835283528082208683529092522054600f90810b900b9150509392505050565b600080611344878787611bc5565b9050600483901a620f424002600085131561136a576113638282611297565b9150611381565b8082111561137c5761136382826118f9565b600091505b6000611396836113918a8a6118f9565b611cae565b90506113b06113a58783611d1f565b60408b015190611d38565b9998505050505050505050565b60006113d4878787876113cf88611442565b6103f3565b90506000831380156113e7575060008112155b806113fe57506000831280156113fe575060008113155b61140757600080fd5b60006114138888611d77565b505050905061142b838261056090919063ffffffff16565b9050611438888883611e20565b5050505050505050565b600061057660001983611e43565b6114586149dc565b6000611462611e91565b6001600160a01b039390931660009081526020938452604090819020815160a081018352905464ffffffffff8116825265010000000000810460f81b6001600160f81b03191695820195909552600160301b850460ff1691810191909152600160381b840461ffff166060820152600160481b90930460701b6001600160701b03191660808401525090919050565b6000426114fd83611e9e565b1561151e5761150b816119d7565b835164ffffffffff161091506102ce9050565b825164ffffffffff161580159061153d5750825164ffffffffff168110155b9150506102ce565b60008083121561155457600080fd5b60008060008061156c89896000015161ffff16611d77565b9350935093509350600084126115945760405162461bcd60e51b8152600401610222906150fc565b866115ad576115a284611442565b9650600093506115e2565b6115b684611442565b8713156115d55760405162461bcd60e51b81526004016102229061517e565b6115df8488610560565b93505b831580156115ee575082155b1561160b57875161160b90879061ffff166000600160fe1b611eab565b61162189896000015161ffff16868686866120ab565b876000015161ffff16896001600160a01b03167f5441e4a5fac93a951d782e6f1cdb82e95c8fc58561a013953d17e395c5e69b4b896040516116639190614e7e565b60405180910390a35094979650505050505050565b60006276a70082101561168a57600080fd5b6276a700825b06909103919050565b6000806116a7868686611bc5565b905060006116cb6116c16116ba896121d2565b8490611297565b61139188886118f9565b90506116ee816116e8868a604001516121e790919063ffffffff16565b90612212565b979650505050505050565b6117016149dc565b61170a836114f1565b156117275760405162461bcd60e51b815260040161022290614f8a565b61173083611e9e565b156117455761174084848461222b565b611772565b600061175785856040015185516122ec565b9050611763818461237f565b61177084868360006123dd565b505b509092915050565b6000611784611e91565b6001600160a01b03831660008181526020838152604080832088518154938a0151838b015160608c015160808d015160701c600160481b027affffffffffffffffffffffffffffffffffff0000000000000000001961ffff909216600160381b0268ffff000000000000001960ff94909416600160301b0266ff0000000000001960f89690961c650100000000000265ff00000000001964ffffffffff90981664ffffffffff19909b169a909a1796909616989098179390931693909317169490941716929092179091555192935090917f6bd4b121bca854a191536a2ca891155c42ee2fb23f307fb34e8bc65cfcb5412e9190a2505050565b82600111158015611893575084602001518311155b6118af5760405162461bcd60e51b815260040161022290615071565b60006118cc6118bd85611b07565b6118c684611678565b90611297565b90506118f1866000015161ffff168284866118e68b6124bf565b8a94939291906124d3565b505050505050565b600082821115611950576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008061196687878787876124fd565b9092509050600061197688612600565b905061199a8189604001518a606001518b60a001518c60c001518d60e00151612604565b86516119aa9061ffff1683612718565b505095945050505050565b600080610576600b5b6000620f42408260128111156119d057fe5b0192915050565b6000620151808210156119e957600080fd5b6201518082611690565b600181901c7f5555555555555555555555555555555555555555555555555555555555555555908116911601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f07070707070707070707070707070707070707070707070707070707070707079190911601600881901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f908116911601601081901c01602081901c01604081901c01608081901c60ff90811691160190565b6000806000611ad061279f565b600094855260205250506040909120546001600160a01b03811692600160a01b90910460ff169150565b60008061057660096119be565b60008160011415611b1c57506276a7006102ce565b8160021415611b2f575062ed4e006102ce565b8160031415611b4357506301da9c006102ce565b8160041415611b5757506303b538006102ce565b8160051415611b6b57506309450c006102ce565b8160061415611b7f575063128a18006102ce565b8160071415611b93575063251430006102ce565b60405162461bcd60e51b815260040161022290614f63565b60008061057660036119be565b60008061057660026119be565b6000806000611bd9866020015186866127ac565b915091506000611be8876124bf565b905081611c0b578651611c019061ffff1687838861286d565b9350505050610e42565b6000611c1686611678565b90506000611c266111db86611b07565b90506000611c3e8a6000015161ffff1683868b61286d565b90506000808760011415611c6357899150611c5c8c6040015161290c565b9050611c92565b611c79611c7260018a03611b07565b8690611297565b9150611c8f8c6000015161ffff1683888d61286d565b90505b611c9f828583868f61299d565b98505050505050505050610e42565b600080611cd1611ccc6301da9c00611cc687876129fb565b90612a54565b612abb565b90506000611ce582621dcd6560491b612ad9565b90506000611cf282612b2c565b90506000611d0682621dcd6560491b612b81565b9050611d1181612bb7565b60070b979650505050505050565b6000610e42611d3284633b9aca00611e43565b83612bc0565b600080611d6f8460200151611d698660400151611d636402540be40088611e4390919063ffffffff16565b90611e43565b90612bc0565b949350505050565b6000806000806000611d87612bf1565b6001600160a01b0388166000908152602082815260408083208a8452909152902080546001600160501b0381169650600160501b900463ffffffff1694509091508315611df0578054611de990600160701b900466ffffffffffffff16612bfe565b9250611e05565b8054600160701b900466ffffffffffffff1692505b54600160a81b9004600a90810b900b97939650919450925050565b6000811215611e2e57600080fd5b611e3e83838360008060006120ab565b505050565b818102600019831415611e7357811580611e65575082828281611e6257fe5b05145b611e6e57600080fd5b610576565b821580611e88575081838281611e8557fe5b05145b61057657600080fd5b60008061057660016119be565b6060015161ffff16151590565b826000108015611ebd5750613fff8311155b611ec657600080fd5b818015611eda575082846060015161ffff16145b15611ee4576120a5565b6080840151600090815b6001600160701b031982161561205f5760f082901c613fff168681148015611f135750855b15611f4b57506080870180516001600160f01b0319861660109093029290921c919091176001600160701b0319169052506120a59050565b8681148015611f58575085155b15611fad576001600160f01b03198516199290921691600360fe1b8316611f8b576010836001600160701b031916901b92505b506001600160701b031991821660109091021c919091171660808501526120a5565b8681118015611fb95750855b15612013576080888101516001600160f01b031960f08a901b88178116601086021c9690961795911b1615611fed57600080fd5b506001600160701b03199182166001919091016010021c919091171660808501526120a5565b8681118015612020575085155b1561202e57505050506120a5565b506001600160f01b0319821660108281029190911c93909317929190911b6001600160801b03191690600101611eee565b8461206c575050506120a5565b6009811061207957600080fd5b6001600160f01b031960f087901b85171660109091021c919091176001600160701b0319166080860152505b50505050565b60006120b5612bf1565b6001600160a01b0388166000908152602082815260408083208a845290915290209091506001600160571b031986128015906120f857506001600160571b038613155b61210157600080fd5b6000851215801561211957506001600160501b038513155b61212257600080fd5b831561212d57600080fd5b66ffffffffffffff83111561214157600080fd5b805466ffffffffffffff909316600160701b0266ffffffffffffff60701b19600a9790970b6001600160581b0316600160a81b026001600160a81b0363ffffffff909616600160501b0263ffffffff60501b196001600160501b0390981669ffffffffffffffffffff1990961695909517969096169390931793909316939093179390931692909217909155505050565b606001516207a12060309190911c60ff160290565b600080611d6f8460400151611d696402540be400611d69878960200151611e4390919063ffffffff16565b6000610e426122218484611e43565b633b9aca00612bc0565b61223482611e9e565b61223d57600080fd5b606082015161ffff1660005b825181101561067a57600083828151811061226057fe5b6020026020010151905080606001516000141561227d57506122e4565b8051831461228a57600080fd5b604081015160011461229b57600080fd5b60006122bd87858460200151896000015164ffffffffff1686606001516103f3565b905060008112156122e157602086018051600160f81b176001600160f81b03191690525b50505b600101612249565b6122f461491e565b6122fc61491e565b60ff841661230b579050610e42565b6123158585612c0c565b815260ff841660608201528267ffffffffffffffff8111801561233757600080fd5b5060405190808252806020026020018201604052801561237157816020015b61235e61499c565b8152602001906001900390816123565790505b506020820152949350505050565b60005b8151811015611e3e57600082828151811061239957fe5b602002602001015190508060600151600014156123b657506123d5565b6123d384826000015183602001518460400151856060015161057c565b505b600101612382565b60008080806123ec8688612c35565b64ffffffffff81168c5292965090945092509050612409886114f1565b1561241357600080fd5b60ff821660408901528461243257600760ff8316111561243257600080fd5b831561245557602088018051600160f81b176001600160f81b0319169052612464565b602088018051607f60f91b1690525b6124718860800151612e74565b6001600160701b031916608089015260005b83156124b45760f084901c8181146124a6576124a68a826001600160ff1b611eab565b60109490941b939050612483565b505050505050505050565b6060015161012c60089190911c60ff160290565b60006276a7006124e285611678565b0190506124f487878787878787612eef565b50505050505050565b6000808487604001511361251657506000905080610177565b60008060006125278a8a8989612f26565b9250925092506000806125418c604001518587868e612fc6565b90925090508061255c57600080965096505050505050610177565b50600080600061256e8d858e8e613072565b9250925092508260001415612590576000809850985050505050505050610177565b60408e015161259f908d613162565b60408f018190526125bc906125b48885610560565b89888f61317e565b60a08f018190526125da576000809850985050505050505050610177565b6125eb8e8e6040015185858561323b565b98509850505050505050509550959350505050565b5190565b6000851215801561261c57506001600160501b038513155b61262557600080fd5b6000841215801561263d57506001600160501b038413155b61264657600080fd5b82600010801561265a575063ffffffff8311155b61266357600080fd5b816000108015612677575063ffffffff8211155b61268057600080fd5b63ffffffff81111561269157600080fd5b855469ffffffffffffffffffff19166001600160501b039586161769ffffffffffffffffffff60501b1916600160501b94909516939093029390931763ffffffff60a01b1916600160a01b63ffffffff928316021763ffffffff60c01b1916600160c01b93821693909302929092176001600160e01b0316600160e01b9190921602179055565b600081121561272657600080fd5b6000612733600084611d77565b505050905061274b828261056090919063ffffffff16565b905061275e6000848360008060006120ab565b8261ffff167f85170c297762884f47ec6098b74925c795e6d33686b11019b400e33a9b23b5e9836040516127929190614e7e565b60405180910390a2505050565b600080610576600f6119be565b600080600085116127cf5760405162461bcd60e51b815260040161022290614f34565b60078511156127f05760405162461bcd60e51b815260040161022290615041565b60006127fb84611678565b905060015b86811161284c5760006128156116ba83611b07565b90508681141561282d57509250600091506128659050565b8681111561284357509250600191506128659050565b50600101612800565b5060405162461bcd60e51b8152600401610222906151e1565b935093915050565b600080612878613290565b905060006276a70061288985611678565b6000898152602085815260408083208b84528252808320949093018083529390522080549192509063ffffffff600160a01b8204811691600160c01b8104821691600160e01b90910416816128f05760405162461bcd60e51b815260040161022290614ea5565b6128fd8184848c8c61329d565b9b9a5050505050505050505050565b80516000906001600160a01b0316612926575060006102ce565b600082600001516001600160a01b031663dd30a6666040518163ffffffff1660e01b815260040160206040518083038186803b15801561296557600080fd5b505afa158015612979573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e429190614ceb565b60008186106129ab57600080fd5b8482106129b757600080fd5b8383106129dd576129d6846118c6888803611cc68388038b88036129fb565b9050610557565b6129d66129f4878703611cc68688038a87036129fb565b85906118f9565b600082612a0a57506000610576565b82820282848281612a1757fe5b0414610e425760405162461bcd60e51b81526004018080602001828103825260218152602001806152d06021913960400191505060405180910390fd5b6000808211612aaa576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381612ab357fe5b049392505050565b6000677fffffffffffffff821115612ad257600080fd5b5060401b90565b600081600f0b60001415612aec57600080fd5b600082600f0b604085600f0b901b81612b0157fe5b05905060016001607f1b03198112801590612b23575060016001607f1b038113155b610e4257600080fd5b6000600160461b82600f0b12612b4157600080fd5b683fffffffffffffffff1982600f0b1215612b5e575060006102ce565b610576608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d613330565b6000600f83810b9083900b0260401d60016001607f1b03198112801590612b23575060016001607f1b03811315610e4257600080fd5b600f0b60401d90565b600081600019148015612bd65750600160ff1b83145b15612be057600080fd5b818381612be957fe5b059392505050565b60008061057660066119be565b600881901c60ff9091161b90565b60606000612c1a8484613dde565b90506001815111612c2c579050610576565b610e4281613f00565b6000808080808080805b895151811015612cc65760008a600001518281518110612c5b57fe5b60200260200101519050600380811115612c7157fe5b8160a001516003811115612c8157fe5b1415612c8c57600080fd5b60028160a001516003811115612c9e57fe5b14158015612cae57506060810151155b15612cbd57612cbd8b836140b9565b50600101612c3f565b5060005b895151811015612d695760008a600001518281518110612ce657fe5b6020026020010151905060026003811115612cfd57fe5b8160a001516003811115612d0d57fe5b1415612d2157608081015160009055612d60565b60018160a001516003811115612d3357fe5b1415612d4c57608081015180612d498382614209565b50505b612d588186868661432e565b919650945092505b50600101612cca565b5060608901516000612d79614391565b6001600160a01b038b1660009081526020829052604081209192505b8c6020015151811015612e435760008d602001518281518110612db457fe5b60200260200101519050806060015160001415612dd15750612e3b565b60028160a001516003811115612de357fe5b14158015612e01575060038160a001516003811115612dfe57fe5b14155b612e0a57600080fd5b612e168189898961432e565b91995097509550612e3381848760108110612e2d57fe5b01614209565b600185019450505b600101612d95565b5060108311158015612e5a575064ffffffffff8411155b612e6357600080fd5b50939a929950975095509350505050565b6000807f7fff7fff7fff7fff7fff7fff7fff7fff7fff00000000000000000000000000008316815b6001600160701b0319821615612ee657600160fe1b8281161415612ed0576001600160f01b03198216811c92909217916010015b6010826001600160701b031916901b9150612e9c565b50909392505050565b612efc878787868561439e565b612f158760e001518860a001518960c00151858861329d565b60c090970196909652505050505050565b6000808080612f36878688614458565b90506000612f55896060015189604001516121e790919063ffffffff16565b9050886040015160001480612f68575080155b15612f7f57600080600094509450945050506108f0565b600080612f978b604001518c60a0015185878d6144ca565b909250905080612fb5576000806000965096509650505050506108f0565b509199909850909650945050505050565b60008080612fd48885613162565b90506000612fec612fe58a8a610560565b8390611d1f565b9050633938700081131561300857600080935093505050610177565b6000806130148361455a565b915091508061302d576000809550955050505050610177565b60006130438961303d858d611d1f565b90610560565b9050633b9aca0081121561306257600080965096505050505050610177565b9550600194506101779350505050565b60008080806130896130848789611d1f565b611442565b9050600061309f6130998a6145fc565b87611cae565b905060008713156130f75760006130b68983611d1f565b9050633b9aca008112156130d75760008060009550955095505050506108f0565b6130ef6130e8633b9aca0084614611565b8490612212565b915050613119565b61311661308482611d6961310f633b9aca0083614611565b8690611e43565b90505b60006131336064611d6961312c8d614627565b8590611e43565b905061313f8383614611565b6131506130848361303d8787614611565b909b909a509098509650505050505050565b600061316e8383614611565b9050600081121561057657600080fd5b6000806000613191888888886000612fc6565b91509150806131a557600092505050610557565b60006131b083614634565b905060006131c482621dcd6560491b612ad9565b905060006131d182614660565b905060006131ed6131e883621dcd6560491b612b81565b61469a565b67ffffffffffffffff169050600061320d89611cc6846301da9c006129fb565b905063ffffffff81111561322b576000975050505050505050610557565b9c9b505050505050505050505050565b600080806132498786611d38565b606089015190915061325b9082610560565b60608901524260e089015260006132728886611d38565b905060006132808989611d38565b9a91995090975050505050505050565b600080610576600a6119be565b60008083116132ab57600080fd5b818611156132ba575083610557565b60006132c683886118f9565b9050838111156132d95785915050610557565b60006132ed85611cc684633b9aca006129fb565b905060006132ff633b9aca00836118f9565b90506000613322633b9aca00611cc66133188b866129fb565b6118c68d886129fb565b9a9950505050505050505050565b6000600160461b82600f0b1261334557600080fd5b683fffffffffffffffff1982600f0b1215613362575060006102ce565b6001607f1b60006001603f1b8416600f0b13156133905770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b13156133bd577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b13156133ea577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b13156134175770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315613444577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b131561347157700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b131561349e5770010163da9fb33356d84a66ae336dcdfa3f0260801c5b600083600160381b16600f0b13156134c757700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156134f35770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b131561351f577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b131561354b57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b1315613577577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b13156135a357700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b13156135cf5770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b13156135fb577001000162e525ee054754457d59952920260260801c5b600083600160301b16600f0b13156136245770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b131561364f577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b131561367a57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b13156136a55770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b13156136d057700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b13156136fb5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315613726577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b131561375157700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b131561377c577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b13156137a657700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156137d05770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b13156137fa577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156138245770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b131561384e577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b131561387857700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156138a25770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b13156138cc57700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156138f55770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b131561391e577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b131561394757700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b1315613970577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561399957700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156139c25770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b13156139eb577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b1315613a145770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b1315613a3c577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b1315613a6457700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b1315613a8c5770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b1315613ab457700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b1315613adc5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315613b04577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b1315613b2c57700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b1315613b54577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b1315613b7b57700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b1315613ba25770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315613bc9577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b1315613bf05770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315613c17577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b1315613c3e57700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b1315613c655770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b1315613c8c57700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b1315613cb25770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315613cd8577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b1315613cfe57700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315613d24577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b1315613d4a57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b1315613d705770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315613d96577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b1315613dbc5770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b0381111561057657600080fd5b606060108260ff161115613df157600080fd5b6000613dfb614391565b6001600160a01b038516600090815260208290526040812091925060ff851667ffffffffffffffff81118015613e3057600080fd5b50604051908082528060200260200182016040528015613e6a57816020015b613e5761499c565b815260200190600190039081613e4f5790505b50905060005b8560ff16811015613ef6576000838260108110613e8957fe5b0190506000838381518110613e9a57fe5b602090810291909101810151835461ffff8116825264ffffffffff620100008204169282019290925260ff600160381b8304166040820152600160401b909104600a90810b900b60608201526080019190915250600101613e70565b5095945050505050565b805160008167ffffffffffffffff81118015613f1b57600080fd5b50604051908082528060200260200182016040528015613f45578160200160208202803683370190505b50905060005b82811015613fa2576000848281518110613f6157fe5b60200260200101519050613f828160000151826020015183604001516146b6565b838381518110613f8e57fe5b602090810291909101015250600101613f4b565b5060015b828110156120a557805b600081118015613fe85750828181518110613fc757fe5b6020026020010151836001830381518110613fde57fe5b6020026020010151115b156140b057828181518110613ff957fe5b602002602001015183600183038151811061401057fe5b602002602001015184600184038151811061402757fe5b6020026020010185848151811061403a57fe5b602002602001018281525082815250505084818151811061405757fe5b602002602001015185600183038151811061406e57fe5b602002602001015186600184038151811061408557fe5b6020026020010187848151811061409857fe5b60209081029190910101919091525260001901613fb0565b50600101613fa6565b81515181106140c757600080fd5b60008260600151116140d857600080fd5b6000826000015182815181106140ea57fe5b602002602001015190506002600381111561410157fe5b8160a00151600381111561411157fe5b1415801561412f575060038160a00151600381111561412c57fe5b14155b61413857600080fd5b606083018051600019019052600080805b8551518110156141ab5760008660000151828151811061416557fe5b60200260200101519050828160800151118015614192575060028160a00151600381111561418f57fe5b14155b156141a257806080015192508193505b50600101614149565b50818414156141c4575050600260a09190910152614205565b6000856000015183815181106141d657fe5b602090810291909101015160808581018051918301805190915252600160a09182015260029401939093525050505b5050565b81511580159061421c57508151613fff10155b61422557600080fd5b816020015160001080156142425750602082015164ffffffffff10155b61424b57600080fd5b8160400151600010801561426457506040820151600810155b61426d57600080fd5b60608201516001600160571b031913801590614294575060608201516001600160571b0312155b61429d57600080fd5b8151815460208401516040850151606090950151600a0b6001600160581b0316600160401b0272ffffffffffffffffffffff00000000000000001960ff909616600160381b0267ff000000000000001964ffffffffff909316620100000266ffffffffff00001961ffff90961661ffff19909516949094179490941692909217169190911792909216919091179055565b60008060008061433d88614711565b905084158061434b57508085115b15614354578094505b8680614364575060008860600151125b965061ffff86161561437557600080fd5b50509451939560109390931c60f09490941b9390931793509150565b600080610576600d6119be565b60006143a8613290565b6000868152602082815260408083208884528252808320868452825291829020808a5290890187905280546001600160501b03808216938b0193909352600160501b810490921660608a015263ffffffff600160a01b8304811660a08b0152600160c01b8304811660c08b0152600160e01b90920490911660e08901529091508084156144475760018201546001600160501b03166080890152611438565b600060808901525050505050505050565b60008260011115801561446f575083602001518311155b61447857600080fd5b606084015160806008600019860102019060ff90821c16633b9aca000260006144b16144a386614778565b611d69846301da9c00611e43565b9050600081136144c057600080fd5b9695505050505050565b60008060006144d98785611cae565b9050633b9aca008112156144f4576000809250925050610177565b60008061450b6145048b8a610560565b8b90611d1f565b90506000806145198361455a565b915091508061453357600080965096505050505050610177565b614547614540838b611d1f565b8690614611565b9c60019c509a5050505050505050505050565b600080633b9aca00831415614574575060009050806145f7565b600061458e614587633b9aca0086614611565b8590611d1f565b9050600061459b82614634565b9050600081600f0b136145b6576000809350935050506145f7565b60006145ea6145e56145d96145ca85614660565b6814b927f32bffb83338614792565b621dcd6560491b612b81565b612bb7565b60070b9450600193505050505b915091565b60600151620186a060109190911c60ff160290565b8082038281131560008312151461057657600080fd5b6060015160181c60ff1690565b6000677fffffffffffffff1982121580156146575750677fffffffffffffff8213155b612ad257600080fd5b60008082600f0b1361467157600080fd5b608061467c836147c5565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b60008082600f0b12156146ac57600080fd5b50600f0b60401d90565b6000613fff8411156146c757600080fd5b64ffffffffff8311156146d957600080fd5b60088211156146e757600080fd5b5067ffff000000000000603084901b1665ffffffffff00600884901b161760ff8216179392505050565b600080826040015111801561472b57506040820151600810155b61473457600080fd5b604082015160021061474b575060208101516102ce565b600061475d6001846040015103611b07565b60208401519091506102ca906276a700906118c690846118f9565b60006001600160ff1b0382111561478e57600080fd5b5090565b6000600f82810b9084900b0360016001607f1b03198112801590612b23575060016001607f1b03811315610e4257600080fd5b60008082600f0b136147d657600080fd5b6000600f83900b600160401b81126147f0576040918201911d5b6401000000008112614804576020918201911d5b620100008112614816576010918201911d5b6101008112614827576008918201911d5b60108112614837576004918201911d5b60048112614847576002918201911d5b60028112614856576001820191505b603f19820160401b600f85900b607f8490031b6001603f1b5b60008113156148955790800260ff81901c8281029390930192607f011c9060011d61486f565b509095945050505050565b60405180610100016040528060008019168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b6040805160808101825260008082526020820152908101614965614972565b8152600060209091015290565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600060038111156149d757fe5b905290565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b80356001600160a01b03811681146102ce57600080fd5b60008083601f840112614a32578081fd5b50813567ffffffffffffffff811115614a49578182fd5b6020830191508360208083028501011115610dc457600080fd5b600082601f830112614a73578081fd5b8135602067ffffffffffffffff80831115614a8a57fe5b614a978283850201615285565b8381528281019086840160c0808702890186018a1015614ab5578788fd5b875b87811015614b365781838c031215614acd578889fd5b604080518381018181108982111715614ae257fe5b82528435815288850135898201528482013591810191909152606080850135908201526080808501359082015260a090614b1d828601614b5d565b9181019190915285529386019391810191600101614ab7565b50919998505050505050505050565b80516001600160701b0319811681146102ce57600080fd5b8035600481106102ce57600080fd5b80516102ce816152a9565b805160ff811681146102ce57600080fd5b600080600080600060808688031215614b9f578081fd5b614ba886614a0a565b94506020860135614bb8816152a9565b9350604086013567ffffffffffffffff80821115614bd4578283fd5b908701906080828a031215614be7578283fd5b604051608081018181108382111715614bfc57fe5b604052823582811115614c0d578485fd5b614c198b828601614a63565b825250602083013582811115614c2d578485fd5b614c398b828601614a63565b60208301525060408381013590820152606092830135838201529450908701359080821115614c66578283fd5b50614c7388828901614a21565b969995985093965092949392505050565b600080600080600060808688031215614c9b578081fd5b614ca486614a0a565b94506020860135614cb4816152a9565b93506040860135614cc4816152bc565b9250606086013567ffffffffffffffff811115614cdf578182fd5b614c7388828901614a21565b600060208284031215614cfc578081fd5b5051919050565b600060a08284031215614d14578081fd5b60405160a0810181811067ffffffffffffffff82111715614d3157fe5b6040528251614d3f816152bc565b815260208301516001600160f81b031981168114614d5b578283fd5b6020820152614d6c60408401614b77565b6040820152614d7d60608401614b6c565b6060820152614d8e60808401614b45565b60808201529392505050565b6000815180845260208085019450808401835b83811015614e0757815180518852838101518489015260408082015190890152606080820151908901526080808201519089015260a0908101519060048210614df257fe5b88015260c09096019590820190600101614dad565b509495945050505050565b6001600160a01b03929092168252805164ffffffffff166020808401919091528101516001600160f81b03191660408084019190915281015160ff1660608084019190915281015161ffff1660808084019190915201516001600160701b03191660a082015260c00190565b90815260200190565b9182521515602082015260400190565b918252602082015260400190565b60208082526016908201527513585c9ad95d081b9bdd081a5b9a5d1a585b1a5e995960521b604082015260600190565b6020808252601a908201527f4e6f6e206964696f73796e637261746963206d61747572697479000000000000604082015260600190565b6020808252600e908201526d125b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b60208082526015908201527410d1ce881b9bc81b585c9ad95d1cc81b1a5cdd1959605a1b604082015260600190565b6020808252600d908201526c092dcecc2d8d2c840d2dcc8caf609b1b604082015260600190565b6020808252601390820152724163636f756e74206d75737420736574746c6560681b604082015260600190565b60208082526017908201527f5472616465206661696c65642c206c6971756964697479000000000000000000604082015260600190565b6020808252600f908201526e4f766572206d61782061737365747360881b604082015260600190565b60208082526010908201526f496e76616c6964206d6174757269747960801b604082015260600190565b60208082526016908201527510d1ce881b585c9ad95d081a5b99195e08189bdd5b9960521b604082015260600190565b6020808252600e908201526d125b9d985b1a59081b585c9ad95d60921b604082015260600190565b602080825260129082015271496e76616c6964207472616465207479706560701b604082015260600190565b60208082526017908201527f496e73756666696369656e7420626c6f636b2074696d65000000000000000000604082015260600190565b602080825260169082015275496e76616c696420736574746c652062616c616e636560501b604082015260600190565b6020808252601690820152755472616465206661696c65642c20736c69707061676560501b604082015260600190565b602080825260089082015267111a5cd8589b195960c21b604082015260600190565b60208082526018908201527f496e76616c696420616d6f756e7420746f20736574746c650000000000000000604082015260600190565b60208082526012908201527121b0b73737ba1039b2ba3a36329039b2b63360711b604082015260600190565b60208082526013908201527210d1ce881b9bc81b585c9ad95d08199bdd5b99606a1b604082015260600190565b60006040825283516080604084015261522a60c0840182614d9a565b90506020850151603f198483030160608501526152478282614d9a565b6040870151608086015260609096015160a08501525050506020015290565b64ffffffffff9390931683526020830191909152604082015260600190565b60405181810167ffffffffffffffff811182821017156152a157fe5b604052919050565b61ffff811681146152b957600080fd5b50565b64ffffffffff811681146152b957600080fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220e9eacbcc1e20bbce01ea69fe1bd556ee0d3e3b3f252d866982dacc698caf756d64736f6c63430007060033", "deployedSourceMap": "554:25119:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2425:1125;;;;;;;;;;-1:-1:-1;2425:1125:34;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3997:1922;;;;;;;;;;-1:-1:-1;3997:1922:34;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2425:1125::-;2607:6;2615:4;2631:36;2670:50;2703:16;2670:32;:50::i;:::-;2631:89;;2730:30;;:::i;:::-;2770:17;2797:21;;:::i;:::-;2842:15;2828:11;;;:29;2873:9;2868:633;2888:17;;;2868:633;;;2926:16;2992:159;3023:7;3048:9;3075:6;3099;;3106:1;3099:9;;;;;;;;;;;;;3126:1;:11;;;2992:13;:159::i;:::-;2967:1;:6;;2975:1;:13;;2956:195;;;;;;;;;;;;;;3182:196;3234:7;3259:16;3182:196;;3293:8;3319:14;3182:196;;3351:1;:13;;;3182:34;:196::i;:::-;3166:13;;;:212;3408:12;;:35;;;3441:1;3425;:13;;;:17;3408:35;3483:6;;3469:9;;;;3393:50;;-1:-1:-1;3469:21:34;;:9;:13;:21::i;:::-;3457:9;;;:33;-1:-1:-1;2907:3:34;;2868:633;;;-1:-1:-1;3519:9:34;;;;-1:-1:-1;3530:12:34;-1:-1:-1;;;2425:1125:34;;;;;;;;;:::o;3997:1922::-;4187:21;;:::i;:::-;4210:6;4228:36;4267:44;4300:10;4267:32;:44::i;:::-;4228:83;;4321:30;;:::i;:::-;4361:21;;:::i;:::-;4406:15;4392:11;;;:29;4437:9;4432:1436;4452:17;;;4432:1436;;;4490:25;4555:6;;4562:1;4555:9;;;;;;;;;;;;;4542:24;;4534:33;;4518:50;;;;;;;;4490:78;-1:-1:-1;4617:28:34;4604:9;:41;;;;;;;;;:105;;;-1:-1:-1;4678:31:34;4665:9;:44;;;;;;;;;4604:105;4583:1227;;;4742:18;;-1:-1:-1;;;4742:18:34;;;;;;;:::i;:::-;;;;;;;;4583:1227;5337:16;5407:183;5442:7;5471:9;5502:6;5530;;5537:1;5530:9;;;;;;;;;;;;;5561:1;:11;;;5407:13;:183::i;:::-;5390:13;;;5371:219;;;;;;;;-1:-1:-1;5609:186:34;;:14;;:186;;;;5371:219;;4700:1:58;;5609:23:34;:186::i;:::-;4583:1227;5850:6;;5836:9;;;;:21;;:13;:21::i;:::-;5824:9;;;:33;-1:-1:-1;4471:3:34;;4432:1436;;;-1:-1:-1;5902:9:34;;;5886:14;;5902:9;;-1:-1:-1;3997:1922:34;;-1:-1:-1;;;;;;;3997:1922:34:o;17649:272:75:-;17734:26;;:::i;:::-;17776:36;17815:44;17848:10;17815:44;;:32;:44::i;:::-;17776:83;;17876:38;17892:10;17904:9;17876:15;:38::i;:::-;17869:45;;;17649:272;;;;:::o;6470:1649:34:-;6706:16;;;;6862:20;;;;6838:46;;;;;;;;6810:74;-1:-1:-1;6911:38:34;6898:9;:51;;;;;;;;;6894:1219;;;7003:139;7044:7;7069:9;7096;7123:5;7003:23;:139::i;:::-;6965:177;;-1:-1:-1;6965:177:34;-1:-1:-1;6965:177:34;-1:-1:-1;6894:1219:34;;;7176:30;7163:9;:43;;;;;;;;;7159:954;;;7260:53;7276:7;7285:9;7296;7307:5;7260:15;:53::i;7159:954::-;7347:20;7334:9;:33;;;;;;;;;:72;;;-1:-1:-1;7384:22:34;7371:9;:35;;;;;;;;;7334:72;7330:783;;;7450:165;7491:9;7518:6;7542:9;7569;7596:5;7450:23;:165::i;:::-;7422:193;;;;;;;;7818:6;:15;;;7807:26;;7917:9;:20;;;7852:191;;7885:7;-1:-1:-1;;;;;7852:191:34;;7963:8;7990:10;8018:11;7852:191;;;;;;;;:::i;:::-;;;;;;;;7330:783;;;8074:28;;-1:-1:-1;;;8074:28:34;;;;;;;:::i;7330:783::-;6470:1649;;;;;;;;;;:::o;3016:1782:81:-;3200:6;3218:20;3241:36;3257:7;3266:10;3241:15;:36::i;:::-;3218:59;;3287:99;3389:35;:33;:35::i;:::-;-1:-1:-1;;;;;3468:14:81;;3434:31;3468:14;;;;;;;;;;;:26;;;;;;;;:36;;;;;;;;3287:137;;-1:-1:-1;3434:31:81;3547:56;3578:14;3495:8;3547:30;:56::i;:::-;3514:89;;;;3621:7;3613:16;;;;;;3689:29;:12;3711:6;3689:21;:29::i;:::-;3685:649;;;3838:18;;3802:20;;3825:32;;:8;;3838:18;;;;3825:32;;:12;:32::i;:::-;3802:55;-1:-1:-1;;;;;;;3879:33:81;-1:-1:-1;3879:33:81;;;:70;;-1:-1:-1;;;;;;3916:33:81;;;3879:70;3871:79;;;;;;3997:42;;-1:-1:-1;;;;;;3997:42:81;-1:-1:-1;;;;;3997:42:81;;;;;;;;;4119:106;;4176:34;:12;4196:6;4204:5;4176:19;:34::i;:::-;4161:49;;4119:106;4239:50;4255:7;4264:10;4276:12;4239:15;:50::i;:::-;4310:13;-1:-1:-1;4303:20:81;;-1:-1:-1;;;;;4303:20:81;3685:649;4348:13;;4344:422;;-1:-1:-1;;;;;;4483:28:81;-1:-1:-1;4483:28:81;;;:60;;-1:-1:-1;;;;;;4515:28:81;;;4483:60;4475:69;;;;;;4591:37;;-1:-1:-1;;;;;;4591:37:81;-1:-1:-1;;;;;4591:37:81;;;;;;;;4658:33;:12;4678:6;-1:-1:-1;4658:19:81;:33::i;:::-;4643:48;;4705:50;4721:7;4730:10;4742:12;4705:15;:50::i;:::-;4783:8;4776:15;;;;;;;3016:1782;;;;;;;;:::o;1427:120:92:-;1516:5;;;1511:16;;;;1483:8;1532:6;;;1511:28;1503:37;;;;;;1427:120;;;;:::o;2933:2071:82:-;3230:27;;3192:186;;3275:10;3303:8;3329:9;3356:8;3192:20;:186::i;:::-;3133:263;;;3389:7;;3133:263;3410:32;;;;:36;3406:296;;3462:11;3476:183;3514:14;:24;;;3556:10;3584:8;3610:9;3637:8;3476:20;:183::i;:::-;3462:197;;3677:6;3673:19;;;3685:7;;;3673:19;3406:296;;3866:40;3896:9;3866:29;:40::i;:::-;3862:152;;;3942:1;3930:8;:13;;3922:22;;;;;;-1:-1:-1;;;;;;4031:27:82;;;;;:58;;-1:-1:-1;;;;;;4062:27:82;;;4031:58;4023:67;;;;;;4240:14;:24;;;:31;4204:14;:32;;;:67;4200:171;;;4314:46;4335:14;:24;;;4314:20;:46::i;:::-;4287:24;;;:73;4200:171;4641:30;4674:14;:24;;;4699:14;:32;;;4674:58;;;;;;;;;;;;;;;;;;;4742:32;;;4784:17;;;:28;;;4822:18;;;;:30;;;4862:17;;;:28;;;-1:-1:-1;4900:21:82;;;;:50;;;;4960:32;;:37;;4996:1;4960:37;;;-1:-1:-1;2933:2071:82;;;;;;:::o;5904:516:74:-;5990:26;;:::i;:::-;6033:11;6046:27;6075:29;6120:33;6142:10;6120:21;:33::i;:::-;6183:230;;;;;;;;-1:-1:-1;;;;;6183:230:74;;;;;;;;;;;;6370:27;;:2;:27;6183:230;;;;;;;;-1:-1:-1;;;;5904:516:74;;;:::o;16694:512:75:-;16822:26;;:::i;:::-;16864:12;16879:37;16905:10;16879:37;;:25;:37::i;:::-;17010:189;;;;;;;;;;;;;;;16957:22;;;17010:189;;;;;;;;;;-1:-1:-1;;17010:189:75;;;;;16694:512::o;18940:3773:34:-;19149:7;;;19240:38;19273:3;19255:21;;;19240:38;19350:3;19332:21;;;19288:67;;19373:20;;;19365:49;;;;-1:-1:-1;;;19365:49:34;;;;;;;:::i;:::-;19583:77;19614:9;:24;;;19640:8;19650:9;19583:30;:77::i;:::-;19582:78;19561:151;;;;-1:-1:-1;;;19561:151:34;;;;;;;:::i;:::-;19723:21;19747:49;19775:9;:20;;;19747:49;;:27;:49::i;:::-;19723:73;;19910:27;19987:17;20017:45;20048:13;20017:30;:45::i;:::-;19833:229;;;;;;;20760:140;20819:10;5985:1:58;20819:51:34;;;;;;;;;20760:19;;20875:7;20819:51;;20805:77;20760:23;:140::i;:::-;20732:9;:168;20711:238;;;;-1:-1:-1;;;20711:238:34;;;;;;;:::i;:::-;20960:15;20990:84;21028:13;21043:9;:20;;;20990:84;;21065:8;20990:37;:84::i;:::-;20960:114;;21184:1;21173:8;:12;:41;;;;;21213:1;21189:21;:25;21173:41;21169:575;;;21337:8;21313:21;:32;21309:70;;;21371:8;21347:32;;21309:70;21169:575;;;21411:1;21400:8;:12;:41;;;;;21440:1;21416:21;:25;21400:41;21396:348;;;21564:8;21540:21;:32;21536:70;;;21598:8;21574:32;;21396:348;;;21709:24;;-1:-1:-1;;;21709:24:34;;;;;;;:::i;21396:348::-;21966:25;22006:187;22050:9;22077:8;22103:9;22130:21;-1:-1:-1;;;;;;22006:187:34;;:26;:187::i;:::-;21966:227;;22204:215;22240:13;22267:9;:20;;;22204:215;;22301:8;22323:19;22356:21;22391:18;22204:22;:215::i;:::-;22543:9;-1:-1:-1;;;;;22435:194:34;22520:8;22435:194;;22478:9;:20;;;22435:194;;;22566:21;22601:18;22435:194;;;;;;;:::i;:::-;;;;;;;;22648:8;22658:24;:18;:22;:24::i;:::-;22684:21;22640:66;;;;;;;;;;;;;18940:3773;;;;;;;;;:::o;14238:3132::-;14437:7;;;14558:2;14540:20;;;-1:-1:-1;;;;;14660:23:34;;;;;;;;14652:54;;;;-1:-1:-1;;;14652:54:34;;;;;;;:::i;:::-;-1:-1:-1;;;;;14745:30:34;;14716:26;14842:53;14882:12;14842:39;:53::i;:::-;14786:109;;14910:38;:19;:36;:38::i;:::-;14906:160;;;14986:69;;-1:-1:-1;;;14986:69:34;;:20;;:34;;:69;;15021:12;;15035:19;;14986:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14964:91;;14906:160;15428:174;15491:12;15517:9;15540:19;15573;15428:49;:174::i;:::-;15406:196;-1:-1:-1;15755:26:34;2617:9:58;15784:36:34;15810:9;15784:25;:36::i;:::-;:56;15755:85;;15850:18;15883:84;15905:9;15916:18;15936:9;15947:19;15883:21;:84::i;:::-;15850:117;;16098:1;16083:11;:16;;16075:25;;;;;;16488:23;;;16509:1;16488:23;;;;;;;;;16455:30;;16488:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16455:56;;16548:9;:20;;;16525:43;;:6;16532:1;16525:9;;;;;;;;;;;;;;:20;;:43;;;;;16603:18;16582:6;16589:1;16582:9;;;;;;;;;;;;;;:18;;:39;;;;;16656:17;:11;:15;:17::i;:::-;16635:6;16642:1;16635:9;;;;;;;;;;;;;;:18;;:38;;;;;4700:1:58;16738:48:34;;:6;16745:1;16738:9;;;;;;;;;;;;;;:19;;:48;;;;;16880:140;16933:12;16963:19;17000:6;16880:35;:140::i;:::-;16858:162;-1:-1:-1;17040:51:34;;-1:-1:-1;16858:162:34;17078:12;17040:37;:51::i;:::-;17204:7;-1:-1:-1;;;;;17107:178:34;17169:9;:20;;;17107:178;;17136:12;-1:-1:-1;;;;;17107:178:34;;17225:19;17258:17;:11;:15;:17::i;:::-;17107:178;;;;;;;:::i;:::-;;;;;;;;17304:18;17324:25;:19;:23;:25::i;:::-;17296:67;;;;-1:-1:-1;17351:11:34;;-1:-1:-1;14238:3132:34;-1:-1:-1;;;;;;;;;14238:3132:34:o;12108:1430::-;12364:17;;12468:25;;;;;;12555:59;:9;12576:6;12468:25;12364:17;12604:9;12555:20;:59::i;:::-;-1:-1:-1;;;;;12646:28:34;;;;;;-1:-1:-1;12752:22:34;12739:9;:35;;;;;;;;;12735:72;;;12790:17;:11;:15;:17::i;:::-;12776:31;;12735:72;12831:146;12864:9;12887:11;12912:30;12932:9;12912:6;:15;;;:19;;:30;;;;:::i;:::-;12831:6;;:146;;12956:11;12831:19;:146::i;:::-;12818:159;-1:-1:-1;12995:15:34;12987:51;;;;-1:-1:-1;;;12987:51:34;;;;;;;:::i;:::-;13077:28;;;;;;13120:14;;13116:416;;13167:22;13154:9;:35;;;;;;;;;13150:372;;;13303:9;13277:6;:22;;;:35;;13269:70;;;;-1:-1:-1;;;13269:70:34;;;;;;;:::i;:::-;13150:372;;;13471:9;13445:6;:22;;;:35;;13437:70;;;;-1:-1:-1;;;13437:70:34;;;;;;;:::i;:::-;12108:1430;;;;;;;;;;:::o;656:266:81:-;741:20;773:61;837:35;:33;:35::i;:::-;-1:-1:-1;;;;;889:14:81;;;;;;;;;;;;;;:26;;;;;;;;;-1:-1:-1;;656:266:81;;;;:::o;5595:269:60:-;5660:87;5763:12;5778:39;5794:22;5778:15;:39::i;4025:2699:76:-;4140:7;4149:4;4169:21;4193:22;4205:9;4193:11;:22::i;:::-;4169:46;-1:-1:-1;2399:5:58;4283:8:76;:24;:29;4279:52;;4322:1;4325:5;4314:17;;;;;;;4279:52;4404:8;4387:13;:25;4383:48;;4422:1;4425:5;4414:17;;;;;;;4383:48;2399:5:58;4556:24:76;;;4555:42;2984:2:58;4680:38:76;;4676:1887;;4742:10;-1:-1:-1;4754:4:76;;-1:-1:-1;4734:25:76;;-1:-1:-1;4734:25:76;4676:1887;3036:3:58;4780:10:76;:39;4776:1787;;5092:20;2399:5:58;2520:7;5212:30:76;;5211:68;5131:148;;-1:-1:-1;;5131:148:76;;-1:-1:-1;2776:1:58;5131:148:76;5528:37;3257:2:58;5500:65:76;2776:1:58;5584:12:76;:37;;;;;;5626:1;5583:44;5306:335;;;;;;;;;4776:1787;3090:4:58;5662:10:76;:40;5658:905;;5718:20;2399:5:58;2567:8;5839:31:76;;5838:69;5757:150;;-1:-1:-1;;5757:150:76;;-1:-1:-1;2825:2:58;5757:150:76;5976:38;3310:3:58;5947:67:76;2825:2:58;6033:12:76;:38;;;;5658:905;3147:4:58;6112:10:76;:42;6108:455;;6170:20;2399:5:58;2617:9;6292:33:76;;6291:71;6209:153;;-1:-1:-1;;6209:153:76;;-1:-1:-1;2877:2:58;6209:153:76;6433:40;3366:3:58;6402:71:76;2877:2:58;6492:12:76;:40;;;;6108:455;6706:3;6711:5;6698:19;;;;;;4025:2699;;;;;;:::o;732:234:90:-;804:4;837:1;828:5;:10;;:26;;;;;851:3;842:5;:12;;828:26;820:35;;;;;;-1:-1:-1;;;914:9:90;903:21;-1:-1:-1;;;902:39:90;;;901:58;;732:234::o;316:372::-;428:7;464:1;455:5;:10;;:26;;;;;478:3;469:5;:12;;455:26;447:35;;;;;;526:5;522:160;;;-1:-1:-1;;;;;;582:9:90;;564:28;554:39;;547:46;;522:160;-1:-1:-1;;;;;;660:9:90;;642:28;640:31;631:40;;522:160;316:372;;;;;:::o;928:386:81:-;2215:2:58;1069:27:81;:12;:25;:27::i;:::-;:58;;1061:86;;;;-1:-1:-1;;;1061:86:81;;;;;;;:::i;:::-;1157:61;1221:35;:33;:35::i;:::-;-1:-1:-1;;;;;1266:14:81;;;;;;;;;;;;;;;:26;;;;;;;-1:-1:-1;1266:26:81;;:41;928:386::o;1128:1465:82:-;1336:4;;1352:1212;1376:10;:17;1372:1;:21;1352:1212;;;1414:27;1444:10;1455:1;1444:13;;;;;;;;;;;;;;1414:43;;1511:9;1492:5;:15;;;:28;;:78;;;-1:-1:-1;1540:16:82;;:30;;;1492:78;:124;;;;1608:8;1590:5;:14;;;:26;;1492:124;1471:168;;;1631:8;;;1471:168;1837:24;1815:5;:18;;;:46;;;;;;;;;;:120;;;;-1:-1:-1;1903:32:82;1881:5;:18;;;:54;;;;;;;;;;1815:120;1790:159;;;;;;2027:14;;;;2006:18;;2027:28;;2046:8;2027:18;:28::i;:::-;2006:49;;2135:40;2165:9;2135:29;:40::i;:::-;2131:163;;;2218:1;2203:11;:16;;2195:25;;;;;;-1:-1:-1;;;;;;2316:30:82;;;;;:64;;-1:-1:-1;;;;;;2350:30:82;;;2316:64;2308:73;;;;;;2440:14;;;:28;2503:24;2482:18;;;;:45;;;2503:24;-1:-1:-1;2542:11:82;;-1:-1:-1;2542:11:82;1352:1212;1395:3;;1352:1212;;;-1:-1:-1;2581:5:82;;1128:1465;-1:-1:-1;;;;;;1128:1465:82:o;581:222:86:-;649:4;4847:1:58;684:48:86;;;;;:112;;-1:-1:-1;;4906:1:58;-1:-1:-1;748:48:86;;581:222::o;5145:648:82:-;5256:23;5494:17;5514:9;:16;5534:1;5514:21;:48;;5542:9;:16;5561:1;5542:20;5514:48;;;5538:1;5514:48;5494:68;;5572:37;5633:9;5612:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5572:71;;5658:9;5653:103;5677:9;:16;5673:1;:20;5653:103;;;5733:9;5743:1;5733:12;;;;;;;;;;;;;;5714:13;5728:1;5714:16;;;;;;;;;;;;;;;;;:31;5695:3;;5653:103;;;-1:-1:-1;5773:13:82;5145:648;-1:-1:-1;;;5145:648:82:o;4424:809:74:-;4521:6;4541:16;4571:5;4602:27;4631:29;4664:32;4685:10;4664:20;:32::i;:::-;4601:95;;-1:-1:-1;4601:95:74;-1:-1:-1;4707:11:74;-1:-1:-1;;;;;4732:33:74;;4728:438;;-1:-1:-1;5019:1:74;;-1:-1:-1;658:4:74;4728:438;;;5058:10;-1:-1:-1;;;;;5058:34:74;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5051:43;;5123:1;5116:4;:8;5108:17;;;;;;5184:4;5190:10;;-1:-1:-1;5190:10:74;-1:-1:-1;4424:809:74;-1:-1:-1;;4424:809:74:o;11271:218:75:-;11348:12;11372:41;11416:32;:30;:32::i;:::-;11465:17;;;;;;-1:-1:-1;;11465:17:75;;;;;11271:218::o;1496:609:76:-;1641:4;1682:1;1665:14;:18;1657:52;;;;-1:-1:-1;;;1657:52:76;;;;;;;:::i;:::-;2023:1:58;1727:14:76;:51;;1719:86;;;;-1:-1:-1;;;1719:86:76;;;;;;;:::i;:::-;2617:9:58;1820:8:76;:28;:33;1816:51;;-1:-1:-1;1862:5:76;1855:12;;1816:51;1877:12;1892:36;1918:9;1892:25;:36::i;:::-;1877:51;-1:-1:-1;1956:1:76;1939:137;1964:14;1959:1;:19;1939:137;;2015:37;2024:27;2049:1;2024:24;:27::i;:::-;2015:4;;:8;:37::i;:::-;2003:8;:49;1999:66;;;2061:4;2054:11;;;;;;1999:66;1980:3;;1939:137;;;-1:-1:-1;2093:5:76;;1496:609;-1:-1:-1;;;;;1496:609:76:o;1541:219:79:-;1607:20;1639:41;1683:36;:34;:36::i;:::-;1736:17;;;;;;-1:-1:-1;;1736:17:79;;;;-1:-1:-1;;;;;1736:17:79;;1541:219::o;728:737::-;836:17;867:35;916:27;957:22;993:17;1035:47;1085:36;:34;:36::i;:::-;-1:-1:-1;;;;;1163:19:79;;;1131:29;1163:19;;;;;;;;-1:-1:-1;;1163:19:79;;;;1206:18;;;;;1264:35;;;;;;;-1:-1:-1;;;;1331:27:79;;;;-1:-1:-1;1387:24:79;-1:-1:-1;;;1387:24:79;;;;-1:-1:-1;;;;1434:24:79;;;;;;-1:-1:-1;728:737:79:o;2682:175:6:-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:368:81;1455:15;1482:99;1584:35;:33;:35::i;:::-;-1:-1:-1;;;;;1636:14:81;;;;;;;;;;;;;;:26;;;;;;;;:36;;;;;;;:45;;;;;1629:52;;;-1:-1:-1;;1320:368:81;;;;;:::o;22809:1611:34:-;23028:6;;23067:50;:9;23097:8;23107:9;23067:29;:50::i;:::-;23046:71;-1:-1:-1;6101:1:58;23263:49:34;;;4169:16:58;23249:110:34;23209:25;23374:15;;23370:698;;;23581:33;:10;23596:17;23581:14;:33::i;:::-;23568:46;;23370:698;;;23648:17;23635:10;:30;23631:437;;;23877:33;:10;23892:17;23877:14;:33::i;23631:437::-;24056:1;24043:14;;23631:437;24078:19;24112:74;24150:10;24162:23;:8;24175:9;24162:12;:23::i;:::-;24112:37;:74::i;:::-;24078:108;-1:-1:-1;24326:87:34;24368:44;:11;24078:108;24368:30;:44::i;:::-;24326:19;;;;;:41;:87::i;:::-;24307:106;22809:1611;-1:-1:-1;;;;;;;;;22809:1611:34:o;24426:1245::-;24677:20;24700:236;24748:13;24775:10;24799:8;24821:19;24854:27;:21;:25;:27::i;:::-;24700:34;:236::i;:::-;24677:259;;25067:1;25043:21;:25;:47;;;;;25089:1;25072:13;:18;;25043:47;25042:114;;;;25132:1;25108:21;:25;:47;;;;;25154:1;25137:13;:18;;25108:47;25021:145;;;;;;25218:24;25370:59;25403:13;25418:10;25370:32;:59::i;:::-;25204:225;;;;;25459:41;25481:18;25459:17;:21;;:41;;;;:::i;:::-;25439:61;;25577:87;25619:13;25634:10;25646:17;25577:41;:87::i;:::-;24426:1245;;;;;;;;:::o;1553:90:92:-;1599:8;1626:10;-1:-1:-1;;1634:1:92;1626:3;:10::i;552:219:64:-;619:21;;:::i;:::-;652:48;703:30;:28;:30::i;:::-;-1:-1:-1;;;;;750:14:64;;;;;;;;;;;;;;;;;743:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;743:21:64;;;;;;;;-1:-1:-1;;;743:21:64;;;;;;;;;;;-1:-1:-1;;;743:21:64;;;;;;;;-1:-1:-1;;;743:21:64;;;;;-1:-1:-1;;;;;;743:21:64;;;;;-1:-1:-1;743:21:64;;552:219;-1:-1:-1;552:219:64:o;3020:732::-;3107:4;3143:15;3173:31;3189:14;3173:15;:31::i;:::-;3169:577;;;3389:31;3410:9;3389:20;:31::i;:::-;3357:29;;:63;;;;-1:-1:-1;3350:70:64;;-1:-1:-1;3350:70:64;3169:577;3660:29;;3656:33;;;;;;:79;;-1:-1:-1;3693:29:64;;:42;;;-1:-1:-1;3693:42:64;3656:79;3649:86;;;;;12969:1766:65;13190:6;13239:1;13216:19;:24;;13208:33;;;;;;13286:18;13306:20;13328:21;13351:31;13398:48;13416:7;13425:9;:20;;;13398:48;;:17;:48::i;:::-;13285:161;;;;;;;;13531:1;13517:11;:15;13509:50;;;;-1:-1:-1;;;13509:50:65;;;;;;;:::i;:::-;13573:24;13569:408;;13700:17;:11;:15;:17::i;:::-;13678:39;;13745:1;13731:15;;13569:408;;;13856:17;:11;:15;:17::i;:::-;13833:19;:40;;13825:77;;;;-1:-1:-1;;;13825:77:65;;;;;;;:::i;:::-;13930:36;:11;13946:19;13930:15;:36::i;:::-;13916:50;;13569:408;14123:16;;:38;;;;-1:-1:-1;14143:18:65;;14123:38;14119:222;;;14227:20;;14177:153;;:14;;:153;;14227:20;-1:-1:-1;;;14177:32:65;:153::i;:::-;14351:199;14383:7;14404:9;:20;;;14351:199;;14438:11;14463:13;14490;14517:23;14351:18;:199::i;:::-;14649:9;:20;;;14622:69;;14640:7;-1:-1:-1;;;;;14622:69:65;;14671:19;14622:69;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;14709:19:65;;12969:1766;-1:-1:-1;;;;;;;12969:1766:65:o;330:193:76:-;398:7;2617:9:58;425:30:76;;;417:39;;;;;;2617:9:58;486::76;:29;;473:43;;;;330:193;-1:-1:-1;330:193:76:o;17465:890:34:-;17669:6;;17708:60;:9;17738:18;17758:9;17708:29;:60::i;:::-;17687:81;;17779:19;17813:168;17868:48;17883:32;:9;:30;:32::i;:::-;17868:10;;:14;:48::i;:::-;17934:33;:18;17957:9;17934:22;:33::i;17813:168::-;17779:202;;18143:205;18335:12;18143:77;18200:19;18143:9;:19;;;:56;;:77;;;;:::i;:::-;:191;;:205::i;:::-;18124:224;17465:890;-1:-1:-1;;;;;;;17465:890:34:o;1928:1135:83:-;2093:21;;:::i;:::-;2254:33;:14;:31;:33::i;:::-;2253:34;2245:66;;;;-1:-1:-1;;;2245:66:83;;;;;;;:::i;:::-;2326:32;:14;:30;:32::i;:::-;2322:703;;;2446:76;2490:7;2499:14;2515:6;2446:43;:76::i;:::-;2322:703;;;2553:36;2592:155;2646:7;2671:14;:31;;;2720:6;:13;2592:36;:155::i;:::-;2553:194;-1:-1:-1;2807:40:83;2553:194;2840:6;2807:32;:40::i;:::-;2940:74;:14;2983:7;2992:14;3008:5;2940:42;:74::i;:::-;2322:703;;-1:-1:-1;3042:14:83;;1928:1135;-1:-1:-1;;1928:1135:83:o;837:274:64:-;938:48;989:30;:28;:30::i;:::-;-1:-1:-1;;;;;1029:14:64;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1029:31:64;-1:-1:-1;;1029:31:64;;;;-1:-1:-1;;;1029:31:64;-1:-1:-1;;1029:31:64;;;;;-1:-1:-1;;;1029:31:64;-1:-1:-1;;1029:31:64;;;;;;;-1:-1:-1;;1029:31:64;;;;-1:-1:-1;;1029:31:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1075:29;938:81;;-1:-1:-1;1029:14:64;;1075:29;;1029:14;1075:29;837:274;;;:::o;6970:627:75:-;7204:11;7199:1;:16;;:59;;;;;7234:9;:24;;;7219:11;:39;;7199:59;7191:86;;;;-1:-1:-1;;;7191:86:75;;;;;;;:::i;:::-;7287:16;7318:79;7359:37;7384:11;7359:24;:37::i;:::-;7318:36;7344:9;7318:25;:36::i;:::-;:40;;:79::i;:::-;7287:110;;7408:182;7439:9;:20;;;7408:182;;7473:8;7495:9;7518:14;7546:34;7570:9;7546:23;:34::i;:::-;7408:6;;:182;;;;:17;:182::i;:::-;6970:627;;;;;;:::o;3128:155:6:-;3186:7;3218:1;3213;:6;;3205:49;;;;;-1:-1:-1;;;3205:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3271:5:6;;;3128:155::o;2759:895:77:-;2983:19;3014:28;3092:148;3120:6;3140:9;3163:14;3191;3219:11;3092:14;:148::i;:::-;3052:188;;-1:-1:-1;3052:188:77;-1:-1:-1;3251:35:77;3289:32;3314:6;3289:24;:32::i;:::-;3251:70;;3331:225;3362:13;3389:6;:17;;;3420:6;:21;;;3455:6;:22;;;3491:6;:17;;;3522:6;:24;;;3331:17;:225::i;:::-;3603:20;;3566:81;;;;3625:21;3566:36;:81::i;:::-;2759:895;;;;;;;;;:::o;5245:243:60:-;5310:61;5387:12;5402:39;5418:22;8128:329;8220:12;445:7;8420:9;8412:18;;;;;;;;:38;;8128:329;-1:-1:-1;;8128:329:60:o;583:160:76:-;641:7;2399:5:58;668:4:76;:21;;660:30;;;;;;2399:5:58;715:4:76;:20;;1013:838:90;1215:1;1210:6;;;1219:66;1210:75;;;1135:70;;1134:152;1381:1;1376:6;;;1385:66;1376:75;;;1301:70;;1300:152;1547:1;1542:6;;;1471:66;1467:70;;;;1466:83;1644:1;1639:6;;;1648:66;1639:75;;;1564:70;;1563:152;1739:2;1734:7;;;1729:13;1766:2;1761:7;;;1756:13;1794:2;1789:7;;;1783:14;1833:3;1828:8;;;1839:4;1828:15;;;1815:8;;1814:30;;1013:838::o;2832:435:74:-;2928:27;2957:29;3002:50;3055:32;:30;:32::i;:::-;3097:27;3127:17;;;;;-1:-1:-1;;3127:17:74;;;;3184:13;-1:-1:-1;;;;;3184:13:74;;;-1:-1:-1;;;3234:26:74;;;;;;-1:-1:-1;2832:435:74:o;4607:217:60:-;4669:41;4726:12;4741:36;4757:19;4741:15;:36::i;928:470:76:-;991:7;1014:5;1023:1;1014:10;1010:40;;;-1:-1:-1;2617:9:58;1026:24:76;;1010:40;1064:5;1073:1;1064:10;1060:44;;;-1:-1:-1;1083:21:76;1076:28;;1060:44;1118:5;1127:1;1118:10;1114:37;;;-1:-1:-1;2665:11:58;1130:21:76;;1114:37;1165:5;1174:1;1165:10;1161:41;;;-1:-1:-1;1184:18:76;1177:25;;1161:41;1216:5;1225:1;1216:10;1212:41;;;-1:-1:-1;1235:18:76;1228:25;;1212:41;1267:5;1276:1;1267:10;1263:42;;;-1:-1:-1;1286:19:76;1279:26;;1263:42;1319:5;1328:1;1319:10;1315:42;;;-1:-1:-1;1338:19:76;1331:26;;1315:42;1368:23;;-1:-1:-1;;;1368:23:76;;;;;;;:::i;2398:225:60:-;2464:41;2521:12;2536:40;2552:23;2536:15;:40::i;2105:232::-;2171:47;2235:12;2250:40;2266:23;2250:15;:40::i;9545:1720:75:-;9702:7;9722:19;9743:18;9777:70;9801:9;:24;;;9827:8;9837:9;9777:23;:70::i;:::-;9721:126;;;;9857:18;9878:34;9902:9;9878:23;:34::i;:::-;9857:55;;9928:13;9923:1336;;9985:20;;9964:75;;;;10007:8;10017:10;10029:9;9964:20;:75::i;:::-;9957:82;;;;;;;9923:1336;10070:21;10094:36;10120:9;10094:25;:36::i;:::-;10070:60;;10245:20;10268:56;10286:37;10311:11;10286:24;:37::i;10268:56::-;10245:79;;10338:16;10373:79;10394:9;:20;;;10373:79;;10416:12;10430:10;10442:9;10373:20;:79::i;:::-;10338:114;;10467:21;10502:17;10537:11;10552:1;10537:16;10533:613;;;10674:9;10658:25;;10713:35;:9;:19;;;:33;:35::i;:::-;10701:47;;10533:613;;;10862:60;10880:41;10919:1;10905:11;:15;10880:24;:41::i;:::-;10862:13;;:17;:60::i;:::-;10846:76;;10953:178;10995:9;:20;;;10953:178;;11037:13;11072:10;11104:9;10953:20;:178::i;:::-;10941:190;;10533:613;11167:81;11189:13;11204:12;11218:9;11229:8;11239;11167:21;:81::i;:::-;11160:88;;;;;;;;;;;;17939:613:77;18071:6;;18123:118;18163:64;3523:9:58;18163:31:77;:11;18179:14;18163:15;:31::i;:::-;:35;;:64::i;:::-;18123:22;:118::i;:::-;18093:148;;18251:21;18275:59;18293:8;-1:-1:-1;;;18275:17:77;:59::i;:::-;18251:83;;18344:16;18363:33;18381:14;18363:17;:33::i;:::-;18344:52;;18406:22;18431:60;18449:9;-1:-1:-1;;;18431:17:77;:60::i;:::-;18406:85;;18509:36;18529:15;18509:19;:36::i;:::-;18502:43;;;17939:613;-1:-1:-1;;;;;;;17939:613:77:o;2027:143:92:-;2098:6;2123:40;2127:32;2131:1;3650:3:58;2127::92;:32::i;:::-;2161:1;2123:3;:40::i;1613:470:74:-;1748:6;1893:19;1915:131;2038:2;:7;;;1915:105;1998:2;:21;;;1915:65;658:4;1915:17;:34;;:65;;;;:::i;:::-;:82;;:105::i;:::-;:122;;:131::i;:::-;1893:153;1613:470;-1:-1:-1;;;;1613:470:74:o;20740:979:65:-;20864:18;20896:20;20930:21;20965:31;21021:68;21092:30;:28;:30::i;:::-;-1:-1:-1;;;;;21172:14:65;;21132:37;21172:14;;;;;;;;;;;:26;;;;;;;;21225:28;;-1:-1:-1;;;;;21225:28:65;;;-1:-1:-1;;;;21279:28:65;;;;;-1:-1:-1;21172:14:65;;-1:-1:-1;21321:17:65;;21317:346;;21506:44;;21473:78;;-1:-1:-1;;;21506:44:65;;;;21473:32;:78::i;:::-;21447:104;;21317:346;;;21608:44;;-1:-1:-1;;;21608:44:65;;;;;-1:-1:-1;21317:346:65;21686:26;-1:-1:-1;;;21686:26:65;;;;;;21672:40;;;20740:979;;-1:-1:-1;20740:979:65;;-1:-1:-1;20740:979:65;-1:-1:-1;;20740:979:65:o;17556:293::-;17727:1;17712:11;:16;;17704:25;;;;;;17775:67;17794:13;17809:10;17821:11;17834:1;17837;17840;17775:18;:67::i;:::-;17556:293;;;:::o;398:190:92:-;478:5;;;-1:-1:-1;;497:7:92;;493:88;;;515:6;;;:20;;;534:1;529;525;:5;;;;;;:10;515:20;506:30;;;;;;493:88;;;560:6;;;:20;;;579:1;574;570;:5;;;;;;:10;560:20;551:30;;;;;1809:229:60;1870:48;1935:12;1950:41;1966:24;1950:15;:41::i;1117:152:64:-;1226:31;;;:36;;;;;1117:152::o;5247:3666::-;5435:10;5431:1;:14;:56;;;;-1:-1:-1;5408:6:58;5449:38:64;;;5431:56;5423:65;;;;;;5707:8;:57;;;;;5754:10;5719:14;:31;;;:45;;;5707:57;5703:70;;;5766:7;;5703:70;5824:31;;;;5783:14;;;6684:1857;-1:-1:-1;;;;;;6691:14:64;;;6684:1857;;6767:22;6743:47;;;5408:6:58;6743:47:64;6877:17;;;:29;;;;;6898:8;6877:29;6873:272;;;-1:-1:-1;7019:31:64;;;;;-1:-1:-1;;;;;;7074:14:64;;7102:2;7093:11;;;7074:31;;;;7019:87;;;;-1:-1:-1;;;;;;6965:141:64;;;-1:-1:-1;7124:7:64;;-1:-1:-1;7124:7:64;6873:272;7239:10;7232:3;:17;:30;;;;;7254:8;7253:9;7232:30;7228:375;;;-1:-1:-1;;;;;;7369:14:64;;7368:15;7359:24;;;;;-1:-1:-1;;;7405:50:64;;7401:77;;7476:2;7466:6;-1:-1:-1;;;;;7466:12:64;;;;7457:21;;7401:77;-1:-1:-1;;;;;;;7540:23:64;;;7560:2;7551:11;;;7540:23;7530:34;;;;7496:68;:31;;;:68;7582:7;;7228:375;7695:10;7689:3;:16;:28;;;;;7709:8;7689:28;7685:575;;;8046:3;8011:31;;;;-1:-1:-1;;;;;;7764:26:64;;;;:34;;7756:43;;7813:2;7804:11;;7756:60;7746:71;;;;;8011:38;;;8010:48;8002:57;;;;;;-1:-1:-1;;;;;;;8191:29:64;;;8212:1;8203:10;;;;8217:2;8202:17;8191:29;8181:40;;;;8147:74;:31;;;:74;8239:7;;7685:575;8364:10;8358:3;:16;:29;;;;;8379:8;8378:9;8358:29;8354:42;;;8389:7;;;;;;8354:42;-1:-1:-1;;;;;;;8429:23:64;;8466:2;8457:11;;;8429:40;;;;8419:51;;;;;8493:12;;;;-1:-1:-1;;;;;;8493:12:64;;8529:1;8519:11;6684:1857;;;8616:8;8611:22;;8626:7;;;;;8611:22;8733:1;8724:6;:10;8716:19;;;;;;-1:-1:-1;;;;;;8853:26:64;;;;:34;;8845:43;8902:2;8893:11;;;8845:60;8823:83;;;;-1:-1:-1;;;;;;8777:129:64;:31;;;:129;-1:-1:-1;5247:3666:64;;;;;:::o;19217:1427:65:-;19452:68;19523:30;:28;:30::i;:::-;-1:-1:-1;;;;;19603:14:65;;19563:37;19603:14;;;;;;;;;;;:26;;;;;;;;19452:101;;-1:-1:-1;;;;;;;19648:30:65;;;;;:64;;-1:-1:-1;;;;;;19682:30:65;;;19648:64;19640:73;;;;;;19869:1;19852:13;:18;;:55;;;;-1:-1:-1;;;;;;19874:33:65;;;19852:55;19844:64;;;;;;20045:18;;20037:27;;;;;;20306:16;20279:43;;;20271:52;;;;;;20378;;20559:78;;;;-1:-1:-1;;;20559:78:65;-1:-1:-1;;;;20440:28:65;20502:47;;;;-1:-1:-1;;;;;20502:47:65;-1:-1:-1;;;20502:47:65;-1:-1:-1;;;;;20440:52:65;;;;-1:-1:-1;;;20440:52:65;-1:-1:-1;;;;;;;;;20378:52:65;;;-1:-1:-1;;20378:52:65;;;;;;;20440;;;;;;;;20502:47;;;;;;;;20559:78;;;;;;;;;;;-1:-1:-1;;;19217:1427:65:o;5905:255:75:-;6084:14;;;6062:91;1960:33;6084:36;;;;6062:61;;:91;;5905:255::o;882:468:74:-;1010:6;1155:24;1182:126;1286:2;:21;;;1182:86;658:4;1182:38;1207:12;1182:2;:7;;;:24;;:38;;;;:::i;2248:143:92:-;2319:6;2344:40;2348:9;2352:1;2355;2348:3;:9::i;:::-;3650:3:58;2344::92;:40::i;1753:1065:81:-;1930:32;:14;:30;:32::i;:::-;1922:41;;;;;;2026:31;;;;2005:52;;:18;2068:744;2088:6;:13;2084:1;:17;2068:744;;;2122:27;2152:6;2159:1;2152:9;;;;;;;;;;;;;;2122:39;;2179:5;:14;;;2197:1;2179:19;2175:33;;;2200:8;;;2175:33;2231:16;;:30;;2223:39;;;;;;2327:15;;;;4700:1:58;2327:45:81;2319:54;;;;;;2430:20;2481:192;2513:7;2538:10;2566:5;:14;;;2598;:29;;;2481:192;;2645:5;:14;;;2481;:192::i;:::-;2465:208;;2708:1;2692:13;:17;2688:113;;;2752:22;;;;;-1:-1:-1;;;2752:49:81;-1:-1:-1;;;;;;2727:74:81;;;2688:113;2068:744;;;2103:3;;2068:744;;15400:477:82;15546:21;;:::i;:::-;15579:27;;:::i;:::-;15620:21;;;15616:39;;15650:5;-1:-1:-1;15643:12:82;;15616:39;15687:45;15706:7;15715:16;15687:18;:45::i;:::-;15666:66;;15742:42;;;:23;;;:42;15833:13;15812:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;15794:15:82;;;:53;:15;15400:477;-1:-1:-1;;;;15400:477:82:o;620:502::-;766:9;761:355;785:6;:13;781:1;:17;761:355;;;819:27;849:6;856:1;849:9;;;;;;;;;;;;;;819:39;;876:5;:14;;;894:1;876:19;872:33;;;897:8;;;872:33;920:185;946:14;978:5;:16;;;1012:5;:14;;;1044:5;:15;;;1077:5;:14;;;920:8;:185::i;:::-;761:355;;800:3;;761:355;;9863:2352:64;10240:12;;;;10344:35;:14;10371:7;10344:26;:35::i;:::-;10389:46;;;;;10239:140;;-1:-1:-1;10239:140:64;;-1:-1:-1;10239:140:64;-1:-1:-1;10239:140:64;-1:-1:-1;10453:32:64;10389:14;10453:16;:32::i;:::-;:41;10445:50;;;;;;10541;;;:31;;;:50;10772:13;10767:141;;2023:1:58;10809:60:64;;;;;10801:69;;;;;;11059:7;11055:263;;;11107:22;;;;;-1:-1:-1;;;11107:49:64;-1:-1:-1;;;;;;11082:74:64;;;11055:263;;;11257:22;;;;;-1:-1:-1;;;11232:75:64;;;11055:263;11460:59;11487:14;:31;;;11460:26;:59::i;:::-;-1:-1:-1;;;;;;11426:93:64;:31;;;:93;11530:20;11560:649;11567:24;;11560:649;;11902:35;;;;11955:26;;;11951:147;;12001:82;12019:14;12035:10;12047:4;-1:-1:-1;;;12001:17:64;:82::i;:::-;12196:2;12173:25;;;;;12126:10;-1:-1:-1;11560:649:64;;;9863:2352;;;;;;;;;:::o;5507:311:75:-;5742:14;;;2264:3:58;1611:1:75;5742:41;;;;5720:66;;:91;;5507:311::o;30227:609:77:-;30521:22;2617:9:58;30546:36:77;30572:9;30546:25;:36::i;:::-;:56;30521:81;;30612:217;30654:6;30674:10;30698:8;30720:9;30743:14;30771:20;30805:14;30612:28;:217::i;:::-;30227:609;;;;;;;:::o;4274:2831::-;4505:6;4513;4809:14;4788:6;:17;;;:35;4784:54;;-1:-1:-1;4833:1:77;;-1:-1:-1;4833:1:77;4825:13;;4784:54;4907:17;4926:26;4954:17;4987:70;5010:6;5018:9;5029:14;5045:11;4987:22;:70::i;:::-;4906:151;;;;;;5176:25;5225:12;5283:190;5317:6;:17;;;5352:19;5389:10;5417;5445:14;5283:16;:190::i;:::-;5251:222;;-1:-1:-1;5251:222:77;-1:-1:-1;5251:222:77;5487:27;;5509:1;5512;5501:13;;;;;;;;;;;5487:27;4274:2831;5661:23;5686:22;5710:23;5749:169;5795:9;5822:18;5858:14;5890;5749:28;:169::i;:::-;5660:258;;;;;;5990:16;6010:1;5990:21;5986:40;;;6021:1;6024;6013:13;;;;;;;;;;;;;5986:40;6233:17;;;;:42;;6260:14;6233:26;:42::i;:::-;6213:17;;;:62;;;6314:209;;6381:40;:19;6405:15;6381:23;:40::i;:::-;6439:10;6467;6495:14;6314;:209::i;:::-;6289:22;;;:234;;;6818:46;;6859:1;6862;6851:13;;;;;;;;;;;;;6818:46;6904:194;6940:6;6964:9;:19;;;7001:16;7035:15;7068:16;6904:18;:194::i;:::-;6885:213;;;;;;;;;;;4274:2831;;;;;;;;:::o;27017:257::-;27181:18;;27218:50::o;28987:1123::-;29259:1;29245:10;:15;;:49;;;;-1:-1:-1;;;;;;29264:30:77;;;29245:49;29237:58;;;;;;29367:1;29349:14;:19;;:57;;;;-1:-1:-1;;;;;;29372:34:77;;;29349:57;29341:66;;;;;;29469:15;29465:1;:19;:58;;;;-1:-1:-1;29507:16:77;29488:35;;;29465:58;29457:67;;;;;;29587:10;29583:1;:14;:48;;;;-1:-1:-1;29615:16:77;29601:30;;;29583:48;29575:57;;;;;;29733:16;29712:37;;;29678:72;;;;;;29806:45;;-1:-1:-1;;29806:45:77;-1:-1:-1;;;;;29806:45:77;;;;-1:-1:-1;;;;29861:53:77;-1:-1:-1;;;29861:53:77;;;;;;;;;;;;-1:-1:-1;;;;29924:55:77;-1:-1:-1;;;29924:55:77;;;;;;-1:-1:-1;;;;29989:45:77;-1:-1:-1;;;29989:45:77;;;;;;;;;;;-1:-1:-1;;;;;30044:59:77;-1:-1:-1;;;30044:59:77;;;;;;;;28987:1123::o;17902:441:65:-;17999:1;17992:3;:8;;17984:17;;;;;;18059:19;18103:48;1106:1:58;18140:10:65;18103:17;:48::i;:::-;18058:93;;;;;18176:21;18193:3;18176:12;:16;;:21;;;;:::i;:::-;18161:36;;18207:72;1106:1:58;18245:10:65;18257:12;18271:1;18274;18277;18207:18;:72::i;:::-;18319:10;18294:42;;;18332:3;18294:42;;;;;;:::i;:::-;;;;;;;;17902:441;;;:::o;7004:226:60:-;7066:50;7132:12;7147:36;7163:19;7147:15;:36::i;2984:825:76:-;3122:7;3131:4;3172:1;3155:14;:18;3147:52;;;;-1:-1:-1;;;3147:52:76;;;;;;;:::i;:::-;2023:1:58;3217:14:76;:51;;3209:86;;;;-1:-1:-1;;;3209:86:76;;;;;;;:::i;:::-;3305:12;3320:36;3346:9;3320:25;:36::i;:::-;3305:51;-1:-1:-1;3384:1:76;3367:396;3392:14;3387:1;:19;3367:396;;3427:22;3452:37;3461:27;3486:1;3461:24;:27::i;3452:37::-;3427:62;;3584:8;3566:14;:26;3562:49;;;-1:-1:-1;3602:1:76;-1:-1:-1;3605:5:76;;-1:-1:-1;3594:17:76;;-1:-1:-1;3594:17:76;3562:49;3726:8;3709:14;:25;3705:47;;;-1:-1:-1;3744:1:76;-1:-1:-1;3747:4:76;;-1:-1:-1;3736:16:76;;-1:-1:-1;3736:16:76;3705:47;-1:-1:-1;3408:3:76;;3367:396;;;;3773:29;;-1:-1:-1;;;3773:29:76;;;;;;;:::i;2984:825::-;;;;;;;:::o;24295:1374:77:-;24466:7;24485:100;24588:29;:27;:29::i;:::-;24485:132;-1:-1:-1;24627:22:77;2617:9:58;24652:36:77;24678:9;24652:25;:36::i;:::-;24718:35;24756:17;;;;;;;;;;;:27;;;;;;;;24652:56;;;;24756:43;;;;;;;24836:29;;24652:56;;-1:-1:-1;24756:43:77;24836:29;-1:-1:-1;;;24836:29:77;;;;;-1:-1:-1;;;24896:24:77;;;;;-1:-1:-1;;;24958:31:77;;;;25399:14;25391:49;;;;-1:-1:-1;;;25391:49:77;;;;;;;:::i;:::-;25470:192;25505:17;25540:15;25573:10;25601:20;25639:9;25470:17;:192::i;:::-;25451:211;24295:1374;-1:-1:-1;;;;;;;;;;;24295:1374:77:o;2269:557:74:-;2485:13;;2346:7;;-1:-1:-1;;;;;2477:36:74;2473:50;;-1:-1:-1;2522:1:74;2515:8;;2473:50;2534:12;2549:2;:13;;;-1:-1:-1;;;;;2549:37:74;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7904:1576:75:-;8109:7;8152:13;8136;:29;8128:38;;;;;;8255:12;8239:13;:28;8231:37;;;;;;8515:9;8503:8;:21;8499:975;;8563:221;8774:9;8563:185;8719:28;;;8563:78;8564:20;;;8611:29;;;8563:47;:78::i;:221::-;8540:244;;;;8499:975;9150:313;9248:197;9416:28;;;9248:82;9249:20;;;9300:29;;;9248:51;:82::i;:197::-;9150:9;;:13;:313::i;3530:215:6:-;3588:7;3611:6;3607:20;;-1:-1:-1;3626:1:6;3619:8;;3607:20;3649:5;;;3653:1;3649;:5;:1;3672:5;;;;;:10;3664:56;;;;-1:-1:-1;;;3664:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4209:150;4267:7;4298:1;4294;:5;4286:44;;;;;-1:-1:-1;;;4286:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:1;4347;:5;;;;;;;4209:150;-1:-1:-1;;;4209:150:6:o;1930:134:89:-;1983:6;2011:18;2006:1;:23;;1997:33;;;;;;-1:-1:-1;2056:2:89;2051:7;;1930:134::o;6673:222::-;6730:6;6753:1;:6;;6758:1;6753:6;;6744:16;;;;;;6766:13;6803:1;6782:22;;6797:2;6791:1;6783:10;;:16;;6782:22;;;;;;;-1:-1:-1;;;;;;;6819:19:89;;;;;:42;;-1:-1:-1;;;;;;6842:19:89;;;6819:42;6810:52;;;;;21341:266;21388:6;-1:-1:-1;;;21411:1:89;:24;;;21402:34;;;;;;-1:-1:-1;;21459:1:89;:25;;;21455:39;;;-1:-1:-1;21493:1:89;21486:8;;21455:39;21521:81;21597:3;21553:1;21545:10;;21558:35;21545:48;:55;;21521:5;:81::i;4188:197::-;4245:6;4275:13;:9;;;:13;;;;;4292:2;4275:19;-1:-1:-1;;;;;;4309:19:89;;;;;:42;;-1:-1:-1;;;;;;4332:19:89;;;4300:52;;;;;1612:89;1688:7;;1693:2;1688:7;;1612:89::o;1022:239:92:-;1078:8;1108:1;-1:-1:-1;;1108:7:92;:27;;;;;-1:-1:-1;;;1119:1:92;:16;1108:27;1106:30;1098:39;;;;;;1253:1;1249;:5;;;;;;;1022:239;-1:-1:-1;;;1022:239:92:o;3568:240:60:-;3628:68;3712:12;3727:34;3743:17;3727:15;:34::i;1180:245:91:-;1403:1;1394:10;;;1354:21;;;;1393:24;;1180:245::o;14753:385:82:-;14869:23;14908:30;14941:42;14957:7;14966:16;14941:15;:42::i;:::-;14908:75;;15061:1;15044:6;:13;:18;15040:37;;15071:6;-1:-1:-1;15064:13:82;;15040:37;15088:20;15101:6;15088:12;:20::i;6422:4123::-;6545:4;;;;;;;;7157:574;7181:27;;:34;7177:38;;7157:574;;;7236:27;7266:14;:27;;;7294:1;7266:30;;;;;;;;;;;;;;7236:60;;7479:32;7457:54;;;;;;;;:5;:18;;;:54;;;;;;;;;;7449:63;;;;;;7609:24;7587:5;:18;;;:46;;;;;;;;;;:69;;;;-1:-1:-1;7637:14:82;;;;:19;7587:69;7583:138;;;7676:30;7688:14;7704:1;7676:11;:30::i;:::-;-1:-1:-1;7217:3:82;;7157:574;;;;7830:9;7825:1217;7849:27;;:34;7845:38;;7825:1217;;;7904:27;7934:14;:27;;;7962:1;7934:30;;;;;;;;;;;;;;7904:60;;8005:24;7983:46;;;;;;;;:5;:18;;;:46;;;;;;;;;7979:1053;;;8116:17;;;;8094:19;8182:25;;8160:65;;;8289:24;8267:5;:18;;;:46;;;;;;;;;8263:361;;;8423:17;;;;;8573:32;8423:5;:17;8573:11;:32::i;:::-;8263:361;;;8837:180;8882:5;8909:7;8938:25;8985:14;8837:23;:180::i;:::-;8782:235;;-1:-1:-1;8782:235:82;-1:-1:-1;8782:235:82;-1:-1:-1;7979:1053:82;-1:-1:-1;7885:3:82;;7825:1217;;;-1:-1:-1;9107:32:82;;;;9078:26;9242:37;:35;:37::i;:::-;-1:-1:-1;;;;;9356:14:82;;9289:64;9356:14;;;;;;;;;;9149:130;;-1:-1:-1;9380:735:82;9404:14;:24;;;:31;9400:1;:35;9380:735;;;9456:27;9486:14;:24;;;9511:1;9486:27;;;;;;;;;;;;;;9456:57;;9531:5;:14;;;9549:1;9531:19;9527:33;;;9552:8;;;9527:33;9621:24;9599:5;:18;;;:46;;;;;;;;;;:120;;;;-1:-1:-1;9687:32:82;9665:5;:18;;;:54;;;;;;;;;;9599:120;9574:159;;;;;;9840:160;9881:5;9904:7;9929:25;9972:14;9840:23;:160::i;:::-;9785:215;;-1:-1:-1;9785:215:82;-1:-1:-1;9785:215:82;-1:-1:-1;10015:52:82;10027:5;10034:12;10047:18;10034:32;;;;;;;;10015:11;:52::i;:::-;10103:1;10081:23;;;;9380:735;;9437:3;;9380:735;;;;10295:2;10273:18;:24;;:62;;;;-1:-1:-1;10319:16:82;10301:34;;;10273:62;10265:71;;;;;;-1:-1:-1;10407:7:82;;10428:25;;-1:-1:-1;10428:25:82;-1:-1:-1;10473:18:82;-1:-1:-1;6422:4123:82;-1:-1:-1;;;;6422:4123:82:o;8919:751:64:-;9004:7;;9150:24;9131:43;;9004:7;9302:338;-1:-1:-1;;;;;;9309:14:64;;;9302:338;;-1:-1:-1;;;9343:45:64;;;:77;9339:256;;;-1:-1:-1;;;;;;9516:23:64;;:33;;9506:44;;;;;9578:2;9568:12;9339:256;9627:2;9617:6;-1:-1:-1;;;;;9617:12:64;;;;9608:21;;9302:338;;;-1:-1:-1;9657:6:64;;8919:751;-1:-1:-1;;;8919:751:64:o;31021:595:77:-;31309:80;31328:6;31336:10;31348:8;31358:14;31374;31309:18;:80::i;:::-;31420:189;31451:6;:24;;;31489:6;:22;;;31525:6;:17;;;31556:20;31590:9;31420:17;:189::i;:::-;31400:17;;;;:209;;;;-1:-1:-1;;;;;;31021:595:77:o;7513:1182::-;7758:6;;;;7849:52;:9;7873:11;7886:14;7849:23;:52::i;:::-;7829:72;;7911:26;7940:62;7980:6;:21;;;7940:9;:19;;;:39;;:62;;;;:::i;:::-;7911:91;;8066:6;:17;;;8087:1;8066:22;:50;;;-1:-1:-1;8092:24:77;;8066:50;8062:72;;;8126:1;8129;8132;8118:16;;;;;;;;;;8062:72;8280:17;8321:12;8371:200;8403:6;:17;;;8438:6;:22;;;8478:19;8515:10;8543:14;8371;:200::i;:::-;8347:224;;-1:-1:-1;8347:224:77;-1:-1:-1;8347:224:77;8585:30;;8607:1;8610;8613;8599:16;;;;;;;;;;;;8585:30;-1:-1:-1;8644:10:77;;8656:19;;-1:-1:-1;8644:10:77;;-1:-1:-1;7513:1182:77;-1:-1:-1;;;;;7513:1182:77:o;18946:1650::-;19149:6;;;19192:35;:10;19212:14;19192:19;:35::i;:::-;19173:54;-1:-1:-1;19376:17:77;19408:65;19437:35;:10;19452:19;19437:14;:35::i;:::-;19408:9;;:28;:65::i;:::-;19376:97;-1:-1:-1;4625:25:58;20081:44:77;;20077:67;;;20135:1;20138:5;20127:17;;;;;;;;20077:67;20156:19;20177:12;20193:26;20208:10;20193:14;:26::i;:::-;20155:64;;;;20234:7;20229:31;;20251:1;20254:5;20243:17;;;;;;;;;;20229:31;20321:11;20335:59;20383:10;20335:43;:12;20367:10;20335:31;:43::i;:::-;:47;;:59::i;:::-;20321:73;;3650:3:58;20465:4:77;:31;20461:129;;;20520:1;20523:5;20512:17;;;;;;;;;;;20461:129;20568:4;-1:-1:-1;20574:4:77;;-1:-1:-1;20560:19:77;;-1:-1:-1;;;;20560:19:77;9092:3965;9339:6;;;;9955:59;:53;:14;9989:18;9955:33;:53::i;:::-;:57;:59::i;:::-;9914:100;;10024:10;10037:71;10068:23;:9;:21;:23::i;:::-;10093:14;10037:30;:71::i;:::-;10024:84;;10140:1;10123:14;:18;10119:2504;;;10270:26;10299:42;:18;10337:3;10299:37;:42::i;:::-;10270:71;;3650:3:58;10543:19:77;:46;10539:68;;;10599:1;10602;10605;10591:16;;;;;;;;;;;10539:68;11529:73;11568:33;3650:3:58;11597::77;11568:28;:33::i;:::-;11529:19;;:38;:73::i;:::-;11523:79;;10119:2504;;;;12539:73;:67;12602:3;12539:58;12563:33;3650:3:58;12602::77;12563:28;:33::i;:::-;12539:19;;:23;:58::i;:73::-;12533:79;;10119:2504;12633:20;12668:74;1862:3:58;12668:39:77;12676:30;:9;:28;:30::i;:::-;12668:3;;:7;:39::i;:74::-;12633:109;-1:-1:-1;12838:28:77;:19;12862:3;12838:23;:28::i;:::-;12958:55;12959:47;12992:13;12959:28;:19;12983:3;12959:23;:28::i;12958:55::-;12753:297;;;;-1:-1:-1;13027:13:77;;-1:-1:-1;9092:3965:77;-1:-1:-1;;;;;;;9092:3965:77:o;1773:176:92:-;1834:8;1858:9;1862:1;1865;1858:3;:9::i;:::-;1854:13;;1890:1;1885;:6;;1877:15;;;;;16345:1469:77;16547:7;16640:19;16661:12;16689:76;16706:10;16718:19;16739:10;16751;16763:1;16689:16;:76::i;:::-;16639:126;;;;16780:7;16775:22;;16796:1;16789:8;;;;;;16775:22;16953:11;16967:35;16989:12;16967:21;:35::i;:::-;16953:49;;17062:17;17082:55;17100:4;-1:-1:-1;;;17082:17:77;:55::i;:::-;17062:75;;17291:19;17313:28;17330:10;17313:16;:28::i;:::-;17291:50;;17389:14;17418:85;17439:63;17457:12;-1:-1:-1;;;17439:17:77;:63::i;:::-;17418:20;:85::i;:::-;17389:114;;;-1:-1:-1;17558:19:77;17580:59;17624:14;17580:39;17389:114;3523:9:58;17580:10:77;:39::i;:59::-;17558:81;-1:-1:-1;17752:16:77;17738:30;;17734:44;;;17777:1;17770:8;;;;;;;;;;;17734:44;17796:11;16345:1469;-1:-1:-1;;;;;;;;;;;;16345:1469:77:o;13305:846::-;13545:6;;;13601:48;:9;13633:15;13601:31;:48::i;:::-;13749:21;;;;13571:78;;-1:-1:-1;13749:47:77;;13571:78;13749:25;:47::i;:::-;13725:21;;;:71;13892:15;13865:24;;;:42;-1:-1:-1;13945:49:77;:9;13977:16;13945:31;:49::i;:::-;13917:77;-1:-1:-1;14004:28:77;14035:49;:9;14067:16;14035:31;:49::i;:::-;14004:80;14125:18;;-1:-1:-1;13305:846:77;;-1:-1:-1;;;;;;;;13305:846:77:o;4912:257:60:-;4971:87;5074:12;5089:33;5105:16;5089:15;:33::i;23057:1232:77:-;23273:7;23323:1;23300:20;:24;23292:33;;;;;;23492:9;23472:17;:29;23468:57;;;-1:-1:-1;23510:15:77;23503:22;;23468:57;23536:16;23555:32;:9;23569:17;23555:13;:32::i;:::-;23536:51;;23612:20;23601:8;:31;23597:155;;;23726:15;23719:22;;;;;23597:155;23811:23;23849:73;23901:20;23849:47;:8;3650:3:58;23849:12:77;:47::i;:73::-;23811:111;-1:-1:-1;23986:20:77;24009:54;3650:3:58;23811:111:77;24009:37;:54::i;:::-;23986:77;-1:-1:-1;24074:21:77;24110:141;3650:3:58;24111:70:77;24152:28;:10;23986:77;24152:14;:28::i;:::-;24111:36;:15;24131;24111:19;:36::i;24110:141::-;24074:177;23057:1232;-1:-1:-1;;;;;;;;;;23057:1232:77:o;14638:6524:89:-;14687:6;-1:-1:-1;;;14710:1:89;:24;;;14701:34;;;;;;-1:-1:-1;;14758:1:89;:25;;;14754:39;;;-1:-1:-1;14792:1:89;14785:8;;14754:39;-1:-1:-1;;;14813:14:89;-1:-1:-1;;;14875:22:89;;:26;;;14871:98;;;14927:35;14918:44;14966:3;14918:51;14871:98;15004:1;14979;14983:18;14979:22;:26;;;14975:98;;;15031:35;15022:44;15070:3;15022:51;14975:98;15108:1;15083;15087:18;15083:22;:26;;;15079:98;;;15135:35;15126:44;15174:3;15126:51;15079:98;15212:1;15187;15191:18;15187:22;:26;;;15183:98;;;15239:35;15230:44;15278:3;15230:51;15183:98;15315:1;15291;15295:17;15291:21;:25;;;15287:97;;;15342:35;15333:44;15381:3;15333:51;15287:97;15418:1;15394;15398:17;15394:21;:25;;;15390:97;;;15445:35;15436:44;15484:3;15436:51;15390:97;15521:1;15497;15501:17;15497:21;:25;;;15493:97;;;15548:35;15539:44;15587:3;15539:51;15493:97;15624:1;15600;-1:-1:-1;;;15600:21:89;:25;;;15596:97;;;15651:35;15642:44;15690:3;15642:51;15596:97;15726:1;15703;15707:16;15703:20;:24;;;15699:96;;;15753:35;15744:44;15792:3;15744:51;15699:96;15828:1;15805;15809:16;15805:20;:24;;;15801:96;;;15855:35;15846:44;15894:3;15846:51;15801:96;15930:1;15907;15911:16;15907:20;:24;;;15903:96;;;15957:35;15948:44;15996:3;15948:51;15903:96;16032:1;16009;16013:16;16009:20;:24;;;16005:96;;;16059:35;16050:44;16098:3;16050:51;16005:96;16133:1;16111;16115:15;16111:19;:23;;;16107:95;;;16160:35;16151:44;16199:3;16151:51;16107:95;16234:1;16212;16216:15;16212:19;:23;;;16208:95;;;16261:35;16252:44;16300:3;16252:51;16208:95;16335:1;16313;16317:15;16313:19;:23;;;16309:95;;;16362:35;16353:44;16401:3;16353:51;16309:95;16436:1;16414;-1:-1:-1;;;16414:19:89;:23;;;16410:95;;;16463:35;16454:44;16502:3;16454:51;16410:95;16536:1;16515;16519:14;16515:18;:22;;;16511:94;;;16563:35;16554:44;16602:3;16554:51;16511:94;16636:1;16615;16619:14;16615:18;:22;;;16611:94;;;16663:35;16654:44;16702:3;16654:51;16611:94;16736:1;16715;16719:14;16715:18;:22;;;16711:94;;;16763:35;16754:44;16802:3;16754:51;16711:94;16836:1;16815;16819:14;16815:18;:22;;;16811:94;;;16863:35;16854:44;16902:3;16854:51;16811:94;16935:1;16915;16919:13;16915:17;:21;;;16911:93;;;16962:35;16953:44;17001:3;16953:51;16911:93;17034:1;17014;17018:13;17014:17;:21;;;17010:93;;;17061:35;17052:44;17100:3;17052:51;17010:93;17133:1;17113;17117:13;17113:17;:21;;;17109:93;;;17160:35;17151:44;17199:3;17151:51;17109:93;17232:1;17212;17216:13;17212:17;:21;;;17208:93;;;17259:35;17250:44;17298:3;17250:51;17208:93;17330:1;17311;17315:12;17311:16;:20;;;17307:92;;;17357:35;17348:44;17396:3;17348:51;17307:92;17428:1;17409;17413:12;17409:16;:20;;;17405:92;;;17455:35;17446:44;17494:3;17446:51;17405:92;17526:1;17507;17511:12;17507:16;:20;;;17503:92;;;17553:35;17544:44;17592:3;17544:51;17503:92;17624:1;17605;17609:12;17605:16;:20;;;17601:92;;;17651:35;17642:44;17690:3;17642:51;17601:92;17721:1;17703;17707:11;17703:15;:19;;;17699:91;;;17748:35;17739:44;17787:3;17739:51;17699:91;17818:1;17800;17804:11;17800:15;:19;;;17796:91;;;17845:35;17836:44;17884:3;17836:51;17796:91;17915:1;17897;17901:11;17897:15;:19;;;17893:91;;;17942:35;17933:44;17981:3;17933:51;17893:91;18012:1;17994;17998:11;17994:15;:19;;;17990:91;;;18039:35;18030:44;18078:3;18030:51;17990:91;18108:1;18091;18095:10;18091:14;:18;;;18087:90;;;18135:35;18126:44;18174:3;18126:51;18087:90;18204:1;18187;18191:10;18187:14;:18;;;18183:90;;;18231:35;18222:44;18270:3;18222:51;18183:90;18300:1;18283;18287:10;18283:14;:18;;;18279:90;;;18327:35;18318:44;18366:3;18318:51;18279:90;18396:1;18379;18383:10;18379:14;:18;;;18375:90;;;18423:35;18414:44;18462:3;18414:51;18375:90;18491:1;18475;18479:9;18475:13;:17;;;18471:89;;;18518:35;18509:44;18557:3;18509:51;18471:89;18586:1;18570;18574:9;18570:13;:17;;;18566:89;;;18613:35;18604:44;18652:3;18604:51;18566:89;18681:1;18665;18669:9;18665:13;:17;;;18661:89;;;18708:35;18699:44;18747:3;18699:51;18661:89;18776:1;18760;18764:9;18760:13;:17;;;18756:89;;;18803:35;18794:44;18842:3;18794:51;18756:89;18870:1;18855;18859:8;18855:12;:16;;;18851:88;;;18897:35;18888:44;18936:3;18888:51;18851:88;18964:1;18949;18953:8;18949:12;:16;;;18945:88;;;18991:35;18982:44;19030:3;18982:51;18945:88;19058:1;19043;19047:8;19043:12;:16;;;19039:88;;;19085:35;19076:44;19124:3;19076:51;19039:88;19152:1;19137;19141:8;19137:12;:16;;;19133:88;;;19179:35;19170:44;19218:3;19170:51;19133:88;19245:1;19231;19235:7;19231:11;:15;;;19227:87;;;19272:35;19263:44;19311:3;19263:51;19227:87;19338:1;19324;19328:7;19324:11;:15;;;19320:87;;;19365:35;19356:44;19404:3;19356:51;19320:87;19431:1;19417;19421:7;19417:11;:15;;;19413:87;;;19458:35;19449:44;19497:3;19449:51;19413:87;19524:1;19510;19514:7;19510:11;:15;;;19506:87;;;19551:35;19542:44;19590:3;19542:51;19506:87;19616:1;19603;19607:6;19603:10;:14;;;19599:86;;;19643:35;19634:44;19682:3;19634:51;19599:86;19708:1;19695;19699:6;19695:10;:14;;;19691:86;;;19735:35;19726:44;19774:3;19726:51;19691:86;19800:1;19787;19791:6;19787:10;:14;;;19783:86;;;19827:35;19818:44;19866:3;19818:51;19783:86;19892:1;19879;19883:6;19879:10;:14;;;19875:86;;;19919:35;19910:44;19958:3;19910:51;19875:86;19983:1;19971;19975:5;19971:9;:13;;;19967:85;;;20010:35;20001:44;20049:3;20001:51;19967:85;20074:1;20062;20066:5;20062:9;:13;;;20058:85;;;20101:35;20092:44;20140:3;20092:51;20058:85;20165:1;20153;20157:5;20153:9;:13;;;20149:85;;;20192:35;20183:44;20231:3;20183:51;20149:85;20256:1;20244;20248:5;20244:9;:13;;;20240:85;;;20283:35;20274:44;20322:3;20274:51;20240:85;20346:1;20335;20339:4;20335:8;:12;;;20331:84;;;20373:35;20364:44;20412:3;20364:51;20331:84;20436:1;20425;20429:4;20425:8;:12;;;20421:84;;;20463:35;20454:44;20502:3;20454:51;20421:84;20526:1;20515;20519:4;20515:8;:12;;;20511:84;;;20553:35;20544:44;20592:3;20544:51;20511:84;20616:1;20605;20609:4;20605:8;:12;;;20601:84;;;20643:35;20634:44;20682:3;20634:51;20601:84;20705:1;20695;20699:3;20695:7;:11;;;20691:83;;;20732:35;20723:44;20771:3;20723:51;20691:83;20794:1;20784;20788:3;20784:7;:11;;;20780:83;;;20821:35;20812:44;20860:3;20812:51;20780:83;20883:1;20873;20877:3;20873:7;:11;;;20869:83;;;20910:35;20901:44;20949:3;20901:51;20869:83;20972:1;20962;20966:3;20962:7;:11;;;20958:83;;;20999:35;20990:44;21038:3;20990:51;20958:83;21074:7;;;;21079:2;21074:7;21068:2;:14;21059:24;;21048:35;-1:-1:-1;;;;;21098:29:89;;;21089:39;;;;;16718:1107:82;16820:23;550:2;16917:6;:30;;;;16909:39;;;;;;16959:90;17052:37;:35;:37::i;:::-;-1:-1:-1;;;;;17166:14:82;;17099:64;17166:14;;;;;;;;;;16959:130;;-1:-1:-1;17223:28:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17190:61;;17267:9;17262:533;17286:6;17282:10;;:1;:10;17262:533;;;17313:42;17358:12;17371:1;17358:15;;;;;;;;17313:60;;17387:27;17417:6;17424:1;17417:9;;;;;;;;;;;;;;;;;;;17565:23;;;;;17546:42;;17619:21;;;;;17602:14;;;:38;;;;17672:22;-1:-1:-1;;;17672:22:82;;;17654:15;;;:40;-1:-1:-1;;;17725:21:82;;;;;;;17708:38;;:14;;;:38;17760:17;;:24;;;;-1:-1:-1;17565:23:82;17294:3;17262:533;;;-1:-1:-1;17812:6:82;16718:1107;-1:-1:-1;;;;;16718:1107:82:o;15883:829::-;15977:13;;15960:14;15977:13;16023:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16023:21:82;;16000:44;;16059:9;16054:257;16074:6;16070:1;:10;16054:257;;;16101:27;16131:6;16138:1;16131:9;;;;;;;;;;;;;;16101:39;;16221:79;16250:5;:16;;;16268:5;:14;;;16284:5;:15;;;16221:28;:79::i;:::-;16212:3;16216:1;16212:6;;;;;;;;;;;;;;;;;:88;-1:-1:-1;16082:3:82;;16054:257;;;-1:-1:-1;16365:1:82;16376:330;16387:6;16383:1;:10;16376:330;;;16421:1;16436:243;16447:1;16443;:5;:28;;;;;16465:3;16469:1;16465:6;;;;;;;;;;;;;;16452:3;16460:1;16456;:5;16452:10;;;;;;;;;;;;;;:19;16443:28;16436:243;;;16551:3;16555:1;16551:6;;;;;;;;;;;;;;16559:3;16567:1;16563;:5;16559:10;;;;;;;;;;;;;;16528:3;16536:1;16532;:5;16528:10;;;;;;;;;;;;;16540:3;16544:1;16540:6;;;;;;;;;;;;;16527:43;;;;;;;;;;16618:6;16625:1;16618:9;;;;;;;;;;;;;;16629:6;16640:1;16636;:5;16629:13;;;;;;;;;;;;;;16589:6;16600:1;16596;:5;16589:13;;;;;;;;;;;;;16604:6;16611:1;16604:9;;;;;;;;;;;;;;;;;16588:55;;;;;-1:-1:-1;;16661:3:82;16436:243;;;-1:-1:-1;16692:3:82;;16376:330;;12651:2038;12765:27;;:34;12757:42;;12749:51;;;;;;12882:1;12847:14;:32;;;:36;12839:45;;;;;;12931:35;12969:14;:27;;;12997:5;12969:34;;;;;;;;;;;;;;12931:72;;13064:24;13034:54;;;;;;;;:13;:26;;;:54;;;;;;;;;;:132;;;;-1:-1:-1;13134:32:82;13104:13;:26;;;:62;;;;;;;;;;13034:132;13013:163;;;;;;13215:32;;;:37;;-1:-1:-1;;13215:37:82;;;-1:-1:-1;;;13493:338:82;13513:27;;:34;13509:38;;13493:338;;;13568:23;13594:14;:27;;;13622:1;13594:30;;;;;;;;;;;;;;13568:56;;13658:13;13642:1;:13;;;:29;:75;;;;-1:-1:-1;13693:24:82;13675:1;:14;;;:42;;;;;;;;;;13642:75;13638:183;;;13753:1;:13;;;13737:29;;13805:1;13784:22;;13638:183;-1:-1:-1;13549:3:82;;13493:338;;;;13854:18;13845:5;:27;13841:236;;;-1:-1:-1;;14022:24:82;13993:26;;;;;:53;14060:7;;13841:236;14290:33;14326:14;:27;;;14354:18;14326:47;;;;;;;;;;;;;;;;;;14486:25;;;;;;14525:23;;;;;14383:175;;;;14595:24;14568;;;;:51;14658:24;14629:26;;:53;;;;-1:-1:-1;;;12651:2038:82;;;:::o;11554:862::-;11701:16;;11697:20;;;;:68;;-1:-1:-1;11721:16:82;;5408:6:58;-1:-1:-1;11721:44:82;11697:68;11689:77;;;;;;11830:5;:14;;;11826:1;:18;:56;;;;-1:-1:-1;11848:14:82;;;;11866:16;-1:-1:-1;11848:34:82;11826:56;11818:65;;;;;;11944:5;:15;;;11940:1;:19;:77;;;;-1:-1:-1;11963:15:82;;;;4906:1:58;-1:-1:-1;11963:54:82;11940:77;11932:86;;;;;;12089:14;;;;-1:-1:-1;;;;;;12070:33:82;;;;:70;;-1:-1:-1;12107:14:82;;;;-1:-1:-1;;;;;;12107:33:82;12070:70;12062:79;;;;;;12224:16;;12191:50;;12282:14;;;;12338:15;;;;12394:14;;;;;12364:45;;-1:-1:-1;;;;;12364:45:82;-1:-1:-1;;;12364:45:82;-1:-1:-1;;12307:47:82;;;;-1:-1:-1;;;12307:47:82;-1:-1:-1;;12251:46:82;;;;;;-1:-1:-1;;12191:50:82;;;;-1:-1:-1;;12191:50:82;;;;;;;12251:46;;;;;;;;12307:47;;;;;12364:45;;;;;;;;;;11554:862::o;10626:882::-;10858:4;10876:7;10897;10929:22;10954:25;:5;:23;:25::i;:::-;10929:50;-1:-1:-1;11051:19:82;;;:54;;;11091:14;11074;:31;11051:54;11047:116;;;11138:14;11121:31;;11047:116;11182:7;:29;;;;11210:1;11193:5;:14;;;:18;11182:29;11172:39;-1:-1:-1;11230:47:82;;;;11222:56;;;;;;-1:-1:-1;;11406:16:82;;11450:7;;11391:2;11362:31;;;;11427:3;11398:32;;;;11361:70;;;;;-1:-1:-1;11486:14:82;-1:-1:-1;10626:882:82:o;5950:263:60:-;6017:77;6110:12;6125:41;6141:24;6125:15;:41::i;25850:1161:77:-;26154:100;26257:29;:27;:29::i;:::-;26296:35;26334:17;;;;;;;;;;;:27;;;;;;;;:43;;;;;;;;;26478:25;;;26513:15;;;:26;;;26569:24;;-1:-1:-1;;;;;26569:24:77;;;26549:17;;;:44;;;;-1:-1:-1;;;26627:28:77;;;;;26603:21;;;:52;26690:29;-1:-1:-1;;;26690:29:77;;;;26665:22;;;:54;-1:-1:-1;;;26749:24:77;;;;26729:17;;;:44;-1:-1:-1;;;26810:31:77;;;;;;26783:24;;;:58;26154:132;;-1:-1:-1;26334:43:77;26852:153;;;;26910:28;;;;-1:-1:-1;;;;;26910:28:77;26886:21;;;:52;26852:153;;;26993:1;26969:21;;;:25;25850:1161;;;;;;;;:::o;2655:782:75:-;2814:6;2845:11;2840:1;:16;;:59;;;;;2875:9;:24;;;2860:11;:39;;2840:59;2832:68;;;;;;3039:14;;;;2333:32;2971:1;-1:-1:-1;;2976:15:75;;2971:21;2957:35;;3018:48;3039:24;;;3018:48;3650:3:58;3018:75:75;2940:14;3135:85;3187:32;3204:14;3187:16;:32::i;:::-;3135:47;:6;3523:9:58;3135:10:75;:47::i;:85::-;3103:117;;3371:1;3358:10;:14;3350:23;;;;;;3420:10;2655:782;-1:-1:-1;;;;;;2655:782:75:o;15185:1026:77:-;15393:6;15401:4;15482:22;15507:63;15538:15;15555:14;15507:30;:63::i;:::-;15482:88;;3650:3:58;15584:15:77;:42;15580:65;;;15636:1;15639:5;15628:17;;;;;;;15580:65;15656:17;;15796:66;15826:35;:10;15841:19;15826:14;:35::i;:::-;15796:10;;:29;:66::i;:::-;15760:102;;15878:19;15899:12;15915:26;15930:10;15915:14;:26::i;:::-;15877:64;;;;15960:7;15955:31;;15977:1;15980:5;15969:17;;;;;;;;;;;15955:31;16094:64;16114:43;:12;16146:10;16114:31;:43::i;:::-;16094:15;;:19;:64::i;:::-;16081:77;16199:4;;-1:-1:-1;15185:1026:77;-1:-1:-1;;;;;;;;;;;15185:1026:77:o;20852:1240::-;20918:6;20926:4;3650:3:58;21007:10:77;:38;21003:61;;;-1:-1:-1;21055:1:77;;-1:-1:-1;21055:1:77;21047:17;;21003:61;21159:13;21175:71;21205:40;3650:3:58;21234:10:77;21205:28;:40::i;:::-;21175:10;;:29;:71::i;:::-;21159:87;;21530:21;21554:29;21576:6;21554:21;:29::i;:::-;21530:53;;21678:1;21660:14;:19;;;21656:42;;21689:1;21692:5;21681:17;;;;;;;;21656:42;21708:13;21736:317;21773:266;21812:157;21855:32;21872:14;21855:16;:32::i;:::-;4455:21:58;21812:17:77;:157::i;:::-;-1:-1:-1;;;21773:17:77;:266::i;:::-;21736:19;:317::i;:::-;21708:345;;;-1:-1:-1;22080:4:77;;-1:-1:-1;;;;20852:1240:77;;;;:::o;4272:191:75:-;4402:14;;;3754:22:58;1655:24:75;4402:27;;;;4380:52;;:76;;4272:191::o;1267:154:92:-;1390:5;;;1385:16;;;;1323:8;1406:6;;;1385:28;1377:37;;;;;4546:200:75;4702:14;;;1730:32;4702:35;4681:58;;;4546:200::o;1240:160:89:-;1291:6;-1:-1:-1;;1314:1:89;:24;;:51;;;;;1347:18;1342:1;:23;;1314:51;1305:61;;;;;14285:175;14331:6;14358:1;14354;:5;;;14345:15;;;;;;14451:3;14400:9;14407:1;14400:5;:9::i;:::-;14391:19;;14413:34;14391:56;:63;;14367:88;;14285:175;;;:::o;2302:114::-;2352:6;2380:1;2375;:6;;;;2366:16;;;;;;-1:-1:-1;2403:7:89;;2408:2;2403:7;;2302:114::o;814:554:83:-;947:7;5408:6:58;974:38:83;;;966:47;;;;;;1043:16;1031:28;;;1023:37;;;;;;4906:1:58;1078:48:83;;;1070:57;;;;;;-1:-1:-1;1183:42:83;1223:2;1183:42;;;;1250:39;1288:1;1250:39;;;;1182:108;1321:25;;;1182:165;814:554;;;;;:::o;972:752:86:-;1051:7;1096:1;1078:5;:15;;;:19;:77;;;;-1:-1:-1;1101:15:86;;;;4906:1:58;-1:-1:-1;1101:54:86;1078:77;1070:86;;;;;;1275:15;;;;4847:1:58;-1:-1:-1;1271:81:86;;-1:-1:-1;1338:14:86;;;;1331:21;;1271:81;1363:20;1386:45;1429:1;1411:5;:15;;;:19;1386:24;:45::i;:::-;1662:14;;;;1363:68;;-1:-1:-1;1662:55:86;;2617:9:58;;1662:32:86;;1363:68;1662:18;:32::i;2520:163:92:-;2569:6;-1:-1:-1;;;;;2596:1:92;:30;;2587:40;;;;;;-1:-1:-1;2674:1:92;2520:163::o;3770:191:89:-;3827:6;3857:13;;;;:9;;;;:13;-1:-1:-1;;;;;;3885:19:89;;;;;:42;;-1:-1:-1;;;;;;3908:19:89;;;3876:52;;;;;13338:769;13387:6;13414:1;13410;:5;;;13401:15;;;;;;13423:10;13443:13;;;;-1:-1:-1;;;13466:25:89;;13462:56;;13502:2;13506:9;;;;13495;13462:56;13533:11;13527:2;:17;13523:48;;13555:2;13559:9;;;;13548;13523:48;13586:7;13580:2;:13;13576:44;;13604:2;13608:9;;;;13597;13576:44;13635:5;13629:2;:11;13625:40;;13651:1;13654:8;;;;13644;13625:40;13680:4;13674:2;:10;13670:39;;13695:1;13698:8;;;;13688;13670:39;13724:3;13718:2;:9;13714:38;;13738:1;13741:8;;;;13731;13714:38;13767:3;13761:2;:9;13757:23;;13779:1;13772:8;;;;13757:23;-1:-1:-1;;13835:8:89;;13847:2;13835:14;13868:11;;;;13892:3;:9;;;13868:34;-1:-1:-1;;;13908:166:89;13952:1;13946:3;:7;13908:166;;;13974:8;;;14008:3;14002:9;;;14051:16;;;14041:26;;;;;14026:3;:7;14019:14;;13963:1;13955:9;13908:166;;;-1:-1:-1;14095:6:89;;13338:769;-1:-1:-1;;;;;13338:769:89:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:175:164:-;84:20;;-1:-1:-1;;;;;133:31:164;;123:42;;113:2;;179:1;176;169:12;194:400;;;327:3;320:4;312:6;308:17;304:27;294:2;;350:6;342;335:22;294:2;-1:-1:-1;378:20:164;;421:18;410:30;;407:2;;;460:8;450;443:26;407:2;504:4;496:6;492:17;480:29;;567:3;560:4;552;544:6;540:17;532:6;528:30;524:41;521:50;518:2;;;584:1;581;574:12;599:1524;;727:3;720:4;712:6;708:17;704:27;694:2;;749:5;742;735:20;694:2;789:6;776:20;815:4;838:18;875:2;871;868:10;865:2;;;881:9;865:2;912:36;944:2;939;935;931:11;927:20;912:36;:::i;:::-;982:15;;;1013:12;;;;1045:15;;;1079:4;1114:11;;;1102:24;;1098:33;;1095:42;-1:-1:-1;1092:2:164;;;1154:5;1147;1140:20;1092:2;1180:5;1194:900;1208:2;1205:1;1202:9;1194:900;;;1275:2;1269:3;1264;1260:13;1256:22;1253:2;;;1295:5;1288;1281:20;1253:2;1326;1361;1355:9;1407:2;1399:6;1395:15;1464:6;1452:10;1449:22;1444:2;1432:10;1429:18;1426:46;1423:2;;;1475:9;1423:2;1499:22;;1549:17;;1534:33;;1617:12;;;1604:26;1587:15;;;1580:51;1681:12;;;1668:26;1651:15;;;1644:51;;;;1718:2;1770:12;;;1757:26;1740:15;;;1733:51;1807:3;1860:12;;;1847:26;1830:15;;;1823:51;1897:3;;1937:50;1974:12;;;1937:50;:::i;:::-;1920:15;;;1913:75;;;;2001:19;;2040:12;;;;2072;;;;1226:1;1219:9;1194:900;;;-1:-1:-1;2112:5:164;;684:1439;-1:-1:-1;;;;;;;;;684:1439:164:o;2128:195::-;2209:13;;-1:-1:-1;;;;;;2251:47:164;;2241:58;;2231:2;;2313:1;2310;2303:12;2328:161;2414:20;;2463:1;2453:12;;2443:2;;2479:1;2476;2469:12;2494:140;2574:13;;2596:32;2574:13;2596:32;:::i;2639:162::-;2718:13;;2771:4;2760:16;;2750:27;;2740:2;;2791:1;2788;2781:12;2806:1701;;;;;;3036:3;3024:9;3015:7;3011:23;3007:33;3004:2;;;3058:6;3050;3043:22;3004:2;3086:31;3107:9;3086:31;:::i;:::-;3076:41;;3167:2;3156:9;3152:18;3139:32;3180;3206:5;3180:32;:::i;:::-;3231:5;-1:-1:-1;3287:2:164;3272:18;;3259:32;3310:18;3340:14;;;3337:2;;;3372:6;3364;3357:22;3337:2;3400:22;;;;3456:3;3438:16;;;3434:26;3431:2;;;3478:6;3470;3463:22;3431:2;3516;3510:9;3558:3;3550:6;3546:16;3612:6;3600:10;3597:22;3592:2;3580:10;3577:18;3574:46;3571:2;;;3623:9;3571:2;3650;3643:22;3690:16;;3718;;;3715:2;;;3752:6;3744;3737:22;3715:2;3785:77;3854:7;3843:8;3839:2;3835:17;3785:77;:::i;:::-;3777:6;3770:93;;3909:2;3905;3901:11;3888:25;3938:2;3928:8;3925:16;3922:2;;;3959:6;3951;3944:22;3922:2;4001:77;4070:7;4059:8;4055:2;4051:17;4001:77;:::i;:::-;3996:2;3984:15;;3977:102;-1:-1:-1;4133:2:164;4125:11;;;4112:25;4095:15;;;4088:50;4192:2;4184:11;;;4171:25;4154:15;;;4147:50;3988:6;-1:-1:-1;4260:18:164;;;4247:32;;4291:16;;;4288:2;;;4325:6;4317;4310:22;4288:2;;4369:78;4439:7;4428:8;4417:9;4413:24;4369:78;:::i;:::-;2994:1513;;;;-1:-1:-1;2994:1513:164;;-1:-1:-1;4466:8:164;;4343:104;2994:1513;-1:-1:-1;;;2994:1513:164:o;4512:816::-;;;;;;4708:3;4696:9;4687:7;4683:23;4679:33;4676:2;;;4730:6;4722;4715:22;4676:2;4758:31;4779:9;4758:31;:::i;:::-;4748:41;;4839:2;4828:9;4824:18;4811:32;4852;4878:5;4852:32;:::i;:::-;4903:5;-1:-1:-1;4960:2:164;4945:18;;4932:32;4973:34;4932:32;4973:34;:::i;:::-;5026:7;-1:-1:-1;5084:2:164;5069:18;;5056:32;5111:18;5100:30;;5097:2;;;5148:6;5140;5133:22;5097:2;5192:76;5260:7;5251:6;5240:9;5236:22;5192:76;:::i;5333:193::-;;5455:2;5443:9;5434:7;5430:23;5426:32;5423:2;;;5476:6;5468;5461:22;5423:2;-1:-1:-1;5504:16:164;;5413:113;-1:-1:-1;5413:113:164:o;5531:952::-;;5687:3;5675:9;5666:7;5662:23;5658:33;5655:2;;;5709:6;5701;5694:22;5655:2;5747;5741:9;5789:3;5781:6;5777:16;5859:6;5847:10;5844:22;5823:18;5811:10;5808:34;5805:62;5802:2;;;5870:9;5802:2;5897;5890:22;5934:16;;5959:32;5934:16;5959:32;:::i;:::-;6000:21;;6066:2;6051:18;;6045:25;-1:-1:-1;;;;;;6101:27:164;;6089:40;;6079:2;;6148:6;6140;6133:22;6079:2;6185;6173:15;;6166:32;6231:49;6276:2;6261:18;;6231:49;:::i;:::-;6226:2;6218:6;6214:15;6207:74;6314:50;6360:2;6349:9;6345:18;6314:50;:::i;:::-;6309:2;6301:6;6297:15;6290:75;6399:52;6446:3;6435:9;6431:19;6399:52;:::i;:::-;6393:3;6381:16;;6374:78;6385:6;5645:838;-1:-1:-1;;;5645:838:164:o;6687:967::-;;6799:5;6793:12;6826:6;6821:3;6814:19;6852:4;6881:2;6876:3;6872:12;6865:19;;6918:2;6911:5;6907:14;6939:3;6951:678;6965:6;6962:1;6959:13;6951:678;;;7024:13;;7062:9;;7050:22;;7112:11;;;7106:18;7092:12;;;7085:40;7148:4;7192:11;;;7186:18;7172:12;;;7165:40;7228:4;7272:11;;;7266:18;7252:12;;;7245:40;7308:4;7352:11;;;7346:18;7332:12;;;7325:40;7388:4;7431:11;;;7425:18;;7483:1;7466:19;;7456:2;;7489:9;7456:2;7520:12;;7513:34;7576:4;7567:14;;;;7604:15;;;;6987:1;6980:9;6951:678;;;-1:-1:-1;7645:3:164;;6769:885;-1:-1:-1;;;;;6769:885:164:o;7659:700::-;-1:-1:-1;;;;;7926:32:164;;;;7908:51;;7999:13;;8014:12;7995:32;7990:2;7975:18;;;7968:60;;;;8074:15;;8068:22;-1:-1:-1;;;;;;8064:42:164;8059:2;8044:18;;;8037:70;;;;8153:15;;8147:22;8101:3;8143:33;8138:2;8123:18;;;8116:61;;;;8224:15;;8218:22;8242:6;8214:35;8208:3;8193:19;;;8186:64;;;;8297:16;8291:23;-1:-1:-1;;;;;;8287:65:164;7946:3;8266:19;;8259:94;7895:3;7880:19;;7862:497::o;8364:175::-;8508:25;;;8496:2;8481:18;;8463:76::o;8544:264::-;8718:25;;;8786:14;8779:22;8774:2;8759:18;;8752:50;8706:2;8691:18;;8673:135::o;8813:244::-;8983:25;;;9039:2;9024:18;;9017:34;8971:2;8956:18;;8938:119::o;9062:346::-;9264:2;9246:21;;;9303:2;9283:18;;;9276:30;-1:-1:-1;;;9337:2:164;9322:18;;9315:52;9399:2;9384:18;;9236:172::o;9413:350::-;9615:2;9597:21;;;9654:2;9634:18;;;9627:30;9693:28;9688:2;9673:18;;9666:56;9754:2;9739:18;;9587:176::o;9768:338::-;9970:2;9952:21;;;10009:2;9989:18;;;9982:30;-1:-1:-1;;;10043:2:164;10028:18;;10021:44;10097:2;10082:18;;9942:164::o;10111:345::-;10313:2;10295:21;;;10352:2;10332:18;;;10325:30;-1:-1:-1;;;10386:2:164;10371:18;;10364:51;10447:2;10432:18;;10285:171::o;10461:337::-;10663:2;10645:21;;;10702:2;10682:18;;;10675:30;-1:-1:-1;;;10736:2:164;10721:18;;10714:43;10789:2;10774:18;;10635:163::o;10803:343::-;11005:2;10987:21;;;11044:2;11024:18;;;11017:30;-1:-1:-1;;;11078:2:164;11063:18;;11056:49;11137:2;11122:18;;10977:169::o;11151:347::-;11353:2;11335:21;;;11392:2;11372:18;;;11365:30;11431:25;11426:2;11411:18;;11404:53;11489:2;11474:18;;11325:173::o;11503:339::-;11705:2;11687:21;;;11744:2;11724:18;;;11717:30;-1:-1:-1;;;11778:2:164;11763:18;;11756:45;11833:2;11818:18;;11677:165::o;11847:340::-;12049:2;12031:21;;;12088:2;12068:18;;;12061:30;-1:-1:-1;;;12122:2:164;12107:18;;12100:46;12178:2;12163:18;;12021:166::o;12192:346::-;12394:2;12376:21;;;12433:2;12413:18;;;12406:30;-1:-1:-1;;;12467:2:164;12452:18;;12445:52;12529:2;12514:18;;12366:172::o;12543:338::-;12745:2;12727:21;;;12784:2;12764:18;;;12757:30;-1:-1:-1;;;12818:2:164;12803:18;;12796:44;12872:2;12857:18;;12717:164::o;12886:342::-;13088:2;13070:21;;;13127:2;13107:18;;;13100:30;-1:-1:-1;;;13161:2:164;13146:18;;13139:48;13219:2;13204:18;;13060:168::o;13233:347::-;13435:2;13417:21;;;13474:2;13454:18;;;13447:30;13513:25;13508:2;13493:18;;13486:53;13571:2;13556:18;;13407:173::o;13585:346::-;13787:2;13769:21;;;13826:2;13806:18;;;13799:30;-1:-1:-1;;;13860:2:164;13845:18;;13838:52;13922:2;13907:18;;13759:172::o;13936:346::-;14138:2;14120:21;;;14177:2;14157:18;;;14150:30;-1:-1:-1;;;14211:2:164;14196:18;;14189:52;14273:2;14258:18;;14110:172::o;14287:331::-;14489:2;14471:21;;;14528:1;14508:18;;;14501:29;-1:-1:-1;;;14561:2:164;14546:18;;14539:38;14609:2;14594:18;;14461:157::o;14623:348::-;14825:2;14807:21;;;14864:2;14844:18;;;14837:30;14903:26;14898:2;14883:18;;14876:54;14962:2;14947:18;;14797:174::o;14976:342::-;15178:2;15160:21;;;15217:2;15197:18;;;15190:30;-1:-1:-1;;;15251:2:164;15236:18;;15229:48;15309:2;15294:18;;15150:168::o;15323:343::-;15525:2;15507:21;;;15564:2;15544:18;;;15537:30;-1:-1:-1;;;15598:2:164;15583:18;;15576:49;15657:2;15642:18;;15497:169::o;15671:841::-;;15900:2;15889:9;15882:21;15938:6;15932:13;15981:4;15976:2;15965:9;15961:18;15954:32;16009:84;16088:3;16077:9;16073:19;16059:12;16009:84;:::i;:::-;15995:98;;16142:4;16134:6;16130:17;16124:24;16216:2;16212:7;16200:9;16192:6;16188:22;16184:36;16179:2;16168:9;16164:18;16157:64;16244:73;16310:6;16294:14;16244:73;:::i;:::-;16373:2;16361:15;;16355:22;16348:4;16333:20;;16326:52;16433:2;16421:15;;;16415:22;16409:3;16394:19;;16387:51;-1:-1:-1;;;16492:4:164;16477:20;16470:36;16230:87;15872:640::o;16517:332::-;16743:12;16731:25;;;;16713:44;;16788:2;16773:18;;16766:34;;;;16831:2;16816:18;;16809:34;16701:2;16686:18;;16668:181::o;16854:242::-;16924:2;16918:9;16954:17;;;17001:18;16986:34;;17022:22;;;16983:62;16980:2;;;17048:9;16980:2;17075;17068:22;16898:198;;-1:-1:-1;16898:198:164:o;17101:119::-;17188:6;17181:5;17177:18;17170:5;17167:29;17157:2;;17210:1;17207;17200:12;17157:2;17147:73;:::o;17225:125::-;17312:12;17305:5;17301:24;17294:5;17291:35;17281:2;;17340:1;17337;17330:12", "language": "Solidity", "natspec": {"methods": {"executeTradesArrayBatch(address,uint16,PortfolioState,bytes32[])": {"notice": "Executes trades for a bitmapped portfolio, cannot be called directly", "params": {"account": "account to put fCash assets in", "currencyId": "currency id to trade", "portfolioState": "used to update the positions in the portfolio", "trades": "tightly packed array of trades, schema is defined in global/Types.sol"}, "returns": {"_0": "resulting portfolio state", "_1": "netCash generated by trading"}}, "executeTradesBitmapBatch(address,uint16,uint40,bytes32[])": {"notice": "Executes trades for a bitmapped portfolio, cannot be called directly", "params": {"account": "account to put fCash assets in", "bitmapCurrencyId": "currency id of the bitmap", "nextSettleTime": "used to calculate the relative positions in the bitmap", "trades": "tightly packed array of trades, schema is defined in global/Types.sol"}, "returns": {"_0": "netCash generated by trading", "_1": "didIncurDebt if the bitmap had an fCash position go negative"}}}, "kind": "dev", "version": 1}, "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3643F39B EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0xB58F83ED EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH2 0x60 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C84 JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73 SWAP3 SWAP2 SWAP1 PUSH2 0x4E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B88 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73 SWAP3 SWAP2 SWAP1 PUSH2 0x520E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB8 DUP8 PUSH2 0x2A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xC2 PUSH2 0x48A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC PUSH2 0x48E8 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 PUSH2 0x102 DUP14 DUP8 DUP8 DUP14 DUP14 DUP8 DUP2 DUP2 LT PUSH2 0xF1 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x2D3 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP7 PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP DUP3 SWAP4 POP POP POP POP PUSH2 0x134 DUP14 DUP14 PUSH2 0xFFFF AND DUP4 DUP15 PUSH5 0xFFFFFFFFFF AND DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE DUP4 DUP1 PUSH2 0x149 JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD SLT JUMPDEST DUP4 MLOAD PUSH1 0x60 DUP6 ADD MLOAD SWAP2 SWAP6 POP PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xD5 JUMP JUMPDEST POP PUSH1 0x60 ADD MLOAD SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x189 PUSH2 0x491E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x195 DUP8 PUSH2 0x2A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F PUSH2 0x48A0 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x48E8 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x1C6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1DE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1EE JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x205 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x203 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x515C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x250 DUP14 DUP8 DUP8 DUP14 DUP14 DUP9 DUP2 DUP2 LT PUSH2 0x23F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP9 PUSH1 0xA0 ADD MLOAD PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD DUP2 SWAP1 MSTORE SWAP1 DUP7 MSTORE SWAP1 SWAP2 POP PUSH2 0x273 SWAP1 DUP13 SWAP1 PUSH2 0xFFFF DUP16 AND SWAP1 DUP5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x57C JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x284 SWAP2 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1B0 JUMP JUMPDEST POP PUSH1 0x60 ADD MLOAD SWAP7 SWAP10 SWAP7 SWAP9 POP SWAP6 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x4946 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP4 PUSH2 0xFFFF AND PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CA DUP4 DUP3 PUSH2 0x6CD JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0xF8 DUP7 SWAP1 SHR PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2E8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x316 JUMPI PUSH2 0x30A DUP10 DUP10 DUP8 DUP10 PUSH2 0x710 JUMP JUMPDEST SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x324 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x336 JUMPI PUSH2 0x30A DUP10 DUP10 DUP8 DUP10 PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x344 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x35B JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x359 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x3CF JUMPI PUSH2 0x36D DUP9 DUP9 DUP4 DUP9 DUP11 PUSH2 0xB73 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP7 PUSH1 0x20 ADD MLOAD SWAP4 POP DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC53D733B6FDFAC3F892B49BF468CD1CAE7773AB553E440DC689ED6B09BB646B1 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x5099 JUMP JUMPDEST POP SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x400 DUP8 DUP8 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40C PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP DUP1 PUSH2 0x443 DUP9 DUP11 PUSH2 0xCC0 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45B DUP6 DUP4 PUSH2 0xDCB JUMP JUMPDEST ISZERO PUSH2 0x4EA JUMPI DUP3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x477 SWAP1 DUP10 SWAP1 PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH2 0x560 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x498 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO JUMPDEST PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0xF DUP4 SWAP1 SIGNEXTEND AND OR DUP5 SSTORE DUP1 PUSH2 0x4D2 JUMPI PUSH2 0x4CF DUP7 DUP5 PUSH1 0x0 PUSH2 0xDFB JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH2 0x4DD DUP13 DUP13 DUP9 PUSH2 0xE49 JUMP JUMPDEST SWAP6 POP PUSH2 0x557 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP7 ISZERO PUSH2 0x54E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP8 SLT DUP1 ISZERO SWAP1 PUSH2 0x50F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP8 SGT ISZERO JUMPDEST PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0xF DUP10 SWAP1 SIGNEXTEND AND OR DUP4 SSTORE PUSH2 0x541 DUP6 DUP4 PUSH1 0x1 PUSH2 0xDFB JUMP JUMPDEST SWAP5 POP PUSH2 0x54E DUP12 DUP12 DUP8 PUSH2 0xE49 JUMP JUMPDEST DUP7 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 MLOAD PUSH2 0x58B SWAP1 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEA3 JUMP JUMPDEST ISZERO PUSH2 0x595 JUMPI PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 PUSH2 0x5B2 DUP7 PUSH1 0x20 ADD MLOAD DUP7 DUP7 DUP7 DUP7 PUSH2 0xEA3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5C0 JUMPI POP PUSH2 0x67A JUMP JUMPDEST POP JUMPDEST PUSH2 0x5CB DUP3 PUSH2 0xFB4 JUMP JUMPDEST ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x5FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB DUP2 SGT ISZERO JUMPDEST PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD MLOAD DUP6 PUSH1 0x40 ADD MLOAD EQ ISZERO PUSH2 0x62A JUMPI PUSH2 0x624 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x640 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD DUP1 MLOAD PUSH1 0x1 ADD SWAP1 MSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x4972 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x697 DUP6 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF AND PUSH1 0xA EXP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0x4946 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E4 DUP5 PUSH2 0xFFFF AND PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH4 0xFFFFFFFF PUSH1 0xD8 DUP6 SWAP1 SHR AND PUSH1 0x80 DUP6 SWAP1 SHR PUSH1 0xA SIGNEXTEND DUP7 DUP3 GT PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x5017 JUMP JUMPDEST PUSH2 0x755 DUP9 PUSH1 0x20 ADD MLOAD DUP4 DUP10 PUSH2 0x1163 JUMP JUMPDEST ISZERO PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4ED5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x785 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x1208 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x793 DUP4 PUSH2 0x122E JUMP JUMPDEST SWAP5 POP POP SWAP4 POP POP POP PUSH2 0x7BA DUP2 PUSH1 0x2 PUSH1 0xFF AND PUSH1 0x5 DUP2 LT PUSH2 0x7AD JUMPI INVALID JUMPDEST DUP5 SWAP2 PUSH2 0xE10 SWAP2 BYTE MUL PUSH2 0x1297 JUMP JUMPDEST DUP11 GT PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x50C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED DUP5 DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP9 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT DUP1 ISZERO PUSH2 0x7FF JUMPI POP PUSH1 0x0 DUP6 SLT JUMPDEST ISZERO PUSH2 0x815 JUMPI DUP1 DUP6 SLT ISZERO PUSH2 0x810 JUMPI DUP1 SWAP5 POP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH1 0x0 DUP2 SGT DUP1 ISZERO PUSH2 0x825 JUMPI POP PUSH1 0x0 DUP6 SGT JUMPDEST ISZERO PUSH2 0x83A JUMPI DUP1 DUP6 SGT ISZERO PUSH2 0x810 JUMPI DUP1 SWAP5 POP PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4F0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86B DUP14 DUP9 DUP15 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT DUP9 AND PUSH2 0x1336 JUMP JUMPDEST SWAP1 POP PUSH2 0x883 DUP6 DUP15 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP10 DUP8 DUP11 DUP7 PUSH2 0x13BD JUMP JUMPDEST DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH5 0xFFFFFFFFFF AND DUP15 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND PUSH32 0xE85DD6C9C85C29A2F4D4CB74E31514BFC478C8C5A50DA255EA565123D8793352 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x8CF SWAP3 SWAP2 SWAP1 PUSH2 0x4E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP7 PUSH2 0x8E1 DUP3 PUSH2 0x1442 JUMP JUMPDEST DUP8 SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x58 DUP5 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP1 DUP3 AND EQ ISZERO PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x51B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB DUP6 AND PUSH1 0x0 PUSH2 0x944 DUP4 PUSH2 0x1450 JUMP JUMPDEST SWAP1 POP PUSH2 0x94F DUP2 PUSH2 0x14F1 JUMP JUMPDEST ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37B5FC21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x6F6BF842 SWAP1 PUSH2 0x98D SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x4D03 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9EC DUP4 DUP11 DUP5 DUP5 PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH3 0x76A700 PUSH2 0x9FD DUP11 PUSH2 0x1678 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 PUSH2 0xA0E DUP12 DUP4 DUP13 DUP8 PUSH2 0x1699 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA3D PUSH2 0x499C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA35 JUMPI SWAP1 POP POP SWAP1 POP DUP12 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA68 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA86 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xA9F DUP3 PUSH2 0x1442 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAAC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0xFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xACE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xAE9 DUP7 DUP6 DUP4 PUSH2 0x16F9 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF7 SWAP1 POP DUP4 DUP7 PUSH2 0x177A JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC76E4E38CCD25A7B0A39CDAA81A20EFA0C2127E74C448B7B05AEF1C427D5732B DUP8 PUSH2 0xB3F DUP7 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4D SWAP3 SWAP2 SWAP1 PUSH2 0x4E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 PUSH2 0xB5F DUP6 PUSH2 0x1442 JUMP JUMPDEST SWAP1 SWAP14 SWAP1 SWAP13 POP SWAP1 SWAP11 POP SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF PUSH1 0xF0 DUP5 SWAP1 SHR AND PUSH2 0xB8B DUP9 DUP9 DUP4 DUP6 DUP10 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0x98 DUP6 SWAP1 SHR AND SWAP2 POP PUSH1 0x1 DUP7 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xBA9 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBB8 DUP3 PUSH2 0x1442 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xBE1 DUP9 DUP4 PUSH2 0xBD7 DUP9 DUP12 PUSH1 0x20 ADD MLOAD PUSH2 0x18F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP11 SWAP3 SWAP2 SWAP1 DUP6 PUSH2 0x1956 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4FB7 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0x78 DUP6 SWAP1 SHR AND DUP1 ISZERO PUSH2 0xC72 JUMPI PUSH1 0x1 DUP8 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xC1F JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xC4E JUMPI DUP1 DUP9 PUSH1 0xA0 ADD MLOAD GT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x512C JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST DUP1 DUP9 PUSH1 0xA0 ADD MLOAD LT ISZERO PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x512C JUMP JUMPDEST POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC89 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 SWAP3 MSTORE KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0xC PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xCCE DUP6 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP5 MOD ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xDC4 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xCFC JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xDC4 JUMP JUMPDEST PUSH3 0x15180 DUP2 DUP6 SUB DIV PUSH1 0x5A DUP2 GT PUSH2 0xD19 JUMPI SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0xDC4 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 GT PUSH2 0xD58 JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x7E900 DUP5 MOD DIV DUP3 ADD PUSH1 0x59 NOT ADD SWAP1 POP PUSH1 0x6 DUP2 DIV PUSH1 0x5A ADD PUSH1 0x6 DUP3 DUP2 PUSH2 0xD48 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 EQ SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x870 DUP2 GT PUSH2 0xD88 JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x278D00 DUP5 MOD DIV DUP3 ADD PUSH2 0x167 NOT ADD SWAP1 POP PUSH1 0x1E DUP2 DIV PUSH1 0x87 ADD PUSH1 0x1E DUP3 DUP2 PUSH2 0xD48 JUMPI INVALID JUMPDEST PUSH2 0x1DE2 DUP2 GT PUSH2 0xDB8 JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x76A700 DUP5 MOD DIV DUP3 ADD PUSH2 0x86F NOT ADD SWAP1 POP PUSH1 0x5A DUP2 DIV PUSH1 0xC3 ADD PUSH1 0x5A DUP3 DUP2 PUSH2 0xD48 JUMPI INVALID JUMPDEST PUSH2 0x100 PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI POP PUSH2 0x100 DUP3 GT ISZERO JUMPDEST PUSH2 0xDE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 NOT ADD SHL PUSH1 0x1 PUSH1 0xFF SHL SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xE10 JUMPI POP PUSH2 0x100 DUP4 GT ISZERO JUMPDEST PUSH2 0xE19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xE32 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT DUP4 ADD SHR DUP4 OR PUSH2 0xE42 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT DUP4 ADD SHR NOT DUP4 AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x14 PUSH2 0xE54 DUP3 PUSH2 0x19F3 JUMP JUMPDEST GT ISZERO PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4FEE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 DUP3 MSTORE SWAP4 SWAP1 SWAP5 MSTORE POP SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEBE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP5 DUP2 PUSH1 0x40 ADD MLOAD EQ ISZERO DUP1 PUSH2 0xEDC JUMPI POP DUP1 MLOAD DUP8 EQ ISZERO JUMPDEST DUP1 PUSH2 0xEEB JUMPI POP DUP6 DUP2 PUSH1 0x20 ADD MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xEF6 JUMPI POP PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF08 JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF23 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0xF41 SWAP1 DUP7 PUSH2 0x560 JUMP JUMPDEST SWAP1 POP PUSH2 0xF4C DUP7 PUSH2 0xFB4 JUMP JUMPDEST ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0xF7E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB DUP2 SGT ISZERO JUMPDEST PUSH2 0xF87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH2 0x557 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xEA7 JUMP JUMPDEST POP PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x576 JUMPI POP POP PUSH1 0x8 LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 EQ PUSH2 0xFE1 JUMPI DUP3 MLOAD PUSH1 0x2 MUL PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1039 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1026 PUSH2 0x499C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x101E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x107B JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1054 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1068 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x103F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1094 DUP7 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10B9 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH5 0x2540BE400 PUSH2 0x113B JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1EE10833 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x4CEB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x113B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1151 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4F34 JUMP JUMPDEST PUSH1 0x7 DUP5 GT ISZERO PUSH2 0x11A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x5041 JUMP JUMPDEST PUSH3 0x76A700 DUP4 MOD ISZERO PUSH2 0x11B8 JUMPI POP PUSH1 0x0 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 DUP4 PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP6 DUP2 GT PUSH2 0x11FC JUMPI PUSH2 0x11E2 PUSH2 0x11DB DUP3 PUSH2 0x1B07 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1297 JUMP JUMPDEST DUP6 EQ ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x11C8 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1213 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x123F PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x40 SWAP1 SWAP5 KECCAK256 SLOAD PUSH2 0xFFFF DUP2 AND SWAP6 PUSH4 0xFFFFFFFF PUSH3 0x10000 DUP4 DIV DUP2 AND SWAP7 POP PUSH1 0x1 PUSH1 0x30 SHL DUP4 DIV AND SWAP5 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x50 SHL DUP4 DIV AND SWAP4 POP PUSH1 0x1 PUSH1 0x58 SHL SWAP1 SWAP2 DIV PUSH1 0xD8 SHL SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12FC PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 SWAP3 MSTORE KECCAK256 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1344 DUP8 DUP8 DUP8 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP4 SWAP1 BYTE PUSH3 0xF4240 MUL PUSH1 0x0 DUP6 SGT ISZERO PUSH2 0x136A JUMPI PUSH2 0x1363 DUP3 DUP3 PUSH2 0x1297 JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x137C JUMPI PUSH2 0x1363 DUP3 DUP3 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x1396 DUP4 PUSH2 0x1391 DUP11 DUP11 PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP PUSH2 0x13B0 PUSH2 0x13A5 DUP8 DUP4 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MLOAD SWAP1 PUSH2 0x1D38 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D4 DUP8 DUP8 DUP8 DUP8 PUSH2 0x13CF DUP9 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x13E7 JUMPI POP PUSH1 0x0 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x13FE JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x13FE JUMPI POP PUSH1 0x0 DUP2 SGT ISZERO JUMPDEST PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP9 DUP9 PUSH2 0x1D77 JUMP JUMPDEST POP POP POP SWAP1 POP PUSH2 0x142B DUP4 DUP3 PUSH2 0x560 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1438 DUP9 DUP9 DUP4 PUSH2 0x1E20 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x576 PUSH1 0x0 NOT DUP4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x1458 PUSH2 0x49DC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1462 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE SWAP1 SLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH6 0x10000000000 DUP2 DIV PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x30 SHL DUP6 DIV PUSH1 0xFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x38 SHL DUP5 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP4 DIV PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x80 DUP5 ADD MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH2 0x14FD DUP4 PUSH2 0x1E9E JUMP JUMPDEST ISZERO PUSH2 0x151E JUMPI PUSH2 0x150B DUP2 PUSH2 0x19D7 JUMP JUMPDEST DUP4 MLOAD PUSH5 0xFFFFFFFFFF AND LT SWAP2 POP PUSH2 0x2CE SWAP1 POP JUMP JUMPDEST DUP3 MLOAD PUSH5 0xFFFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x153D JUMPI POP DUP3 MLOAD PUSH5 0xFFFFFFFFFF AND DUP2 LT ISZERO JUMPDEST SWAP2 POP POP PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0x1554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x156C DUP10 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x1D77 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP5 SLT PUSH2 0x1594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x50FC JUMP JUMPDEST DUP7 PUSH2 0x15AD JUMPI PUSH2 0x15A2 DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 SWAP4 POP PUSH2 0x15E2 JUMP JUMPDEST PUSH2 0x15B6 DUP5 PUSH2 0x1442 JUMP JUMPDEST DUP8 SGT ISZERO PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x517E JUMP JUMPDEST PUSH2 0x15DF DUP5 DUP9 PUSH2 0x560 JUMP JUMPDEST SWAP4 POP JUMPDEST DUP4 ISZERO DUP1 ISZERO PUSH2 0x15EE JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x160B JUMPI DUP8 MLOAD PUSH2 0x160B SWAP1 DUP8 SWAP1 PUSH2 0xFFFF AND PUSH1 0x0 PUSH1 0x1 PUSH1 0xFE SHL PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x1621 DUP10 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP7 DUP7 DUP7 DUP7 PUSH2 0x20AB JUMP JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5441E4A5FAC93A951D782E6F1CDB82E95C8FC58561A013953D17E395C5E69B4B DUP10 PUSH1 0x40 MLOAD PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x4E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP5 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76A700 DUP3 LT ISZERO PUSH2 0x168A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x76A700 DUP3 JUMPDEST MOD SWAP1 SWAP2 SUB SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A7 DUP7 DUP7 DUP7 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16CB PUSH2 0x16C1 PUSH2 0x16BA DUP10 PUSH2 0x21D2 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x1391 DUP9 DUP9 PUSH2 0x18F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16E8 DUP7 DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x21E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2212 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1701 PUSH2 0x49DC JUMP JUMPDEST PUSH2 0x170A DUP4 PUSH2 0x14F1 JUMP JUMPDEST ISZERO PUSH2 0x1727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4F8A JUMP JUMPDEST PUSH2 0x1730 DUP4 PUSH2 0x1E9E JUMP JUMPDEST ISZERO PUSH2 0x1745 JUMPI PUSH2 0x1740 DUP5 DUP5 DUP5 PUSH2 0x222B JUMP JUMPDEST PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1757 DUP6 DUP6 PUSH1 0x40 ADD MLOAD DUP6 MLOAD PUSH2 0x22EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1763 DUP2 DUP5 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x1770 DUP5 DUP7 DUP4 PUSH1 0x0 PUSH2 0x23DD JUMP JUMPDEST POP JUMPDEST POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1784 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 MLOAD DUP2 SLOAD SWAP4 DUP11 ADD MLOAD DUP4 DUP12 ADD MLOAD PUSH1 0x60 DUP13 ADD MLOAD PUSH1 0x80 DUP14 ADD MLOAD PUSH1 0x70 SHR PUSH1 0x1 PUSH1 0x48 SHL MUL PUSH27 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 NOT PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x38 SHL MUL PUSH9 0xFFFF00000000000000 NOT PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH7 0xFF000000000000 NOT PUSH1 0xF8 SWAP7 SWAP1 SWAP7 SHR PUSH6 0x10000000000 MUL PUSH6 0xFF0000000000 NOT PUSH5 0xFFFFFFFFFF SWAP1 SWAP9 AND PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP12 AND SWAP11 SWAP1 SWAP11 OR SWAP7 SWAP1 SWAP7 AND SWAP9 SWAP1 SWAP9 OR SWAP4 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR AND SWAP5 SWAP1 SWAP5 OR AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x6BD4B121BCA854A191536A2CA891155C42EE2FB23F307FB34E8BC65CFCB5412E SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x1893 JUMPI POP DUP5 PUSH1 0x20 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0x18AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x5071 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CC PUSH2 0x18BD DUP6 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x18C6 DUP5 PUSH2 0x1678 JUMP JUMPDEST SWAP1 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F1 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP3 DUP5 DUP7 PUSH2 0x18E6 DUP12 PUSH2 0x24BF JUMP JUMPDEST DUP11 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1950 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1966 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FD JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x1976 DUP9 PUSH2 0x2600 JUMP JUMPDEST SWAP1 POP PUSH2 0x199A DUP2 DUP10 PUSH1 0x40 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH1 0xE0 ADD MLOAD PUSH2 0x2604 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x19AA SWAP1 PUSH2 0xFFFF AND DUP4 PUSH2 0x2718 JUMP JUMPDEST POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0xB JUMPDEST PUSH1 0x0 PUSH3 0xF4240 DUP3 PUSH1 0x12 DUP2 GT ISZERO PUSH2 0x19D0 JUMPI INVALID JUMPDEST ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 DUP3 LT ISZERO PUSH2 0x19E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15180 DUP3 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SHR PUSH32 0x5555555555555555555555555555555555555555555555555555555555555555 SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x2 DUP2 SWAP1 SHR PUSH32 0x3333333333333333333333333333333333333333333333333333333333333333 SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x4 DUP2 SWAP1 SHR PUSH32 0x707070707070707070707070707070707070707070707070707070707070707 SWAP2 SWAP1 SWAP2 AND ADD PUSH1 0x8 DUP2 SWAP1 SHR PUSH31 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x10 DUP2 SWAP1 SHR ADD PUSH1 0x20 DUP2 SWAP1 SHR ADD PUSH1 0x40 DUP2 SWAP1 SHR ADD PUSH1 0x80 DUP2 SWAP1 SHR PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1AD0 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0x9 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x1B1C JUMPI POP PUSH3 0x76A700 PUSH2 0x2CE JUMP JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x1B2F JUMPI POP PUSH3 0xED4E00 PUSH2 0x2CE JUMP JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0x1B43 JUMPI POP PUSH4 0x1DA9C00 PUSH2 0x2CE JUMP JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0x1B57 JUMPI POP PUSH4 0x3B53800 PUSH2 0x2CE JUMP JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0x1B6B JUMPI POP PUSH4 0x9450C00 PUSH2 0x2CE JUMP JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0x1B7F JUMPI POP PUSH4 0x128A1800 PUSH2 0x2CE JUMP JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0x1B93 JUMPI POP PUSH4 0x25143000 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4F63 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0x3 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0x2 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1BD9 DUP7 PUSH1 0x20 ADD MLOAD DUP7 DUP7 PUSH2 0x27AC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1BE8 DUP8 PUSH2 0x24BF JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x1C0B JUMPI DUP7 MLOAD PUSH2 0x1C01 SWAP1 PUSH2 0xFFFF AND DUP8 DUP4 DUP9 PUSH2 0x286D JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C16 DUP7 PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C26 PUSH2 0x11DB DUP7 PUSH2 0x1B07 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C3E DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP4 DUP7 DUP12 PUSH2 0x286D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 EQ ISZERO PUSH2 0x1C63 JUMPI DUP10 SWAP2 POP PUSH2 0x1C5C DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0x290C JUMP JUMPDEST SWAP1 POP PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0x1C79 PUSH2 0x1C72 PUSH1 0x1 DUP11 SUB PUSH2 0x1B07 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1297 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8F DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP4 DUP9 DUP14 PUSH2 0x286D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1C9F DUP3 DUP6 DUP4 DUP7 DUP16 PUSH2 0x299D JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP POP PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1CD1 PUSH2 0x1CCC PUSH4 0x1DA9C00 PUSH2 0x1CC6 DUP8 DUP8 PUSH2 0x29FB JUMP JUMPDEST SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH2 0x2ABB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CE5 DUP3 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x2AD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CF2 DUP3 PUSH2 0x2B2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D06 DUP3 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x2B81 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D11 DUP2 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE42 PUSH2 0x1D32 DUP5 PUSH4 0x3B9ACA00 PUSH2 0x1E43 JUMP JUMPDEST DUP4 PUSH2 0x2BC0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D6F DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1D69 DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x1D63 PUSH5 0x2540BE400 DUP9 PUSH2 0x1E43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 PUSH2 0x2BC0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D87 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND SWAP7 POP PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP5 POP SWAP1 SWAP2 POP DUP4 ISZERO PUSH2 0x1DF0 JUMPI DUP1 SLOAD PUSH2 0x1DE9 SWAP1 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x2BFE JUMP JUMPDEST SWAP3 POP PUSH2 0x1E05 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND SWAP3 POP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xA SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1E2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3E DUP4 DUP4 DUP4 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x20AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 DUP2 MUL PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x1E73 JUMPI DUP2 ISZERO DUP1 PUSH2 0x1E65 JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0x1E62 JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x1E6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x576 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x1E88 JUMPI POP DUP2 DUP4 DUP3 DUP2 PUSH2 0x1E85 JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0x1 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x1EBD JUMPI POP PUSH2 0x3FFF DUP4 GT ISZERO JUMPDEST PUSH2 0x1EC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1EDA JUMPI POP DUP3 DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT DUP3 AND ISZERO PUSH2 0x205F JUMPI PUSH1 0xF0 DUP3 SWAP1 SHR PUSH2 0x3FFF AND DUP7 DUP2 EQ DUP1 ISZERO PUSH2 0x1F13 JUMPI POP DUP6 JUMPDEST ISZERO PUSH2 0x1F4B JUMPI POP PUSH1 0x80 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP7 AND PUSH1 0x10 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND SWAP1 MSTORE POP PUSH2 0x20A5 SWAP1 POP JUMP JUMPDEST DUP7 DUP2 EQ DUP1 ISZERO PUSH2 0x1F58 JUMPI POP DUP6 ISZERO JUMPDEST ISZERO PUSH2 0x1FAD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP6 AND NOT SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH1 0x3 PUSH1 0xFE SHL DUP4 AND PUSH2 0x1F8B JUMPI PUSH1 0x10 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND SWAP1 SHL SWAP3 POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT SWAP2 DUP3 AND PUSH1 0x10 SWAP1 SWAP2 MUL SHR SWAP2 SWAP1 SWAP2 OR AND PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x20A5 JUMP JUMPDEST DUP7 DUP2 GT DUP1 ISZERO PUSH2 0x1FB9 JUMPI POP DUP6 JUMPDEST ISZERO PUSH2 0x2013 JUMPI PUSH1 0x80 DUP9 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP11 SWAP1 SHL DUP9 OR DUP2 AND PUSH1 0x10 DUP7 MUL SHR SWAP7 SWAP1 SWAP7 OR SWAP6 SWAP2 SHL AND ISZERO PUSH2 0x1FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT SWAP2 DUP3 AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x10 MUL SHR SWAP2 SWAP1 SWAP2 OR AND PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x20A5 JUMP JUMPDEST DUP7 DUP2 GT DUP1 ISZERO PUSH2 0x2020 JUMPI POP DUP6 ISZERO JUMPDEST ISZERO PUSH2 0x202E JUMPI POP POP POP POP PUSH2 0x20A5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP3 AND PUSH1 0x10 DUP3 DUP2 MUL SWAP2 SWAP1 SWAP2 SHR SWAP4 SWAP1 SWAP4 OR SWAP3 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 PUSH1 0x1 ADD PUSH2 0x1EEE JUMP JUMPDEST DUP5 PUSH2 0x206C JUMPI POP POP POP PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x9 DUP2 LT PUSH2 0x2079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP8 SWAP1 SHL DUP6 OR AND PUSH1 0x10 SWAP1 SWAP2 MUL SHR SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x80 DUP7 ADD MSTORE POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B5 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB NOT DUP7 SLT DUP1 ISZERO SWAP1 PUSH2 0x20F8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB DUP7 SGT ISZERO JUMPDEST PUSH2 0x2101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 SLT ISZERO DUP1 ISZERO PUSH2 0x2119 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP6 SGT ISZERO JUMPDEST PUSH2 0x2122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ISZERO PUSH2 0x212D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH7 0xFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SLOAD PUSH7 0xFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT PUSH1 0xA SWAP8 SWAP1 SWAP8 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB AND PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB PUSH4 0xFFFFFFFF SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0x50 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0x50 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP9 AND PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP7 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP4 OR SWAP4 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH3 0x7A120 PUSH1 0x30 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D6F DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1D69 PUSH5 0x2540BE400 PUSH2 0x1D69 DUP8 DUP10 PUSH1 0x20 ADD MLOAD PUSH2 0x1E43 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE42 PUSH2 0x2221 DUP5 DUP5 PUSH2 0x1E43 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x2BC0 JUMP JUMPDEST PUSH2 0x2234 DUP3 PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x223D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2260 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x227D JUMPI POP PUSH2 0x22E4 JUMP JUMPDEST DUP1 MLOAD DUP4 EQ PUSH2 0x228A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 EQ PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22BD DUP8 DUP6 DUP5 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD PUSH5 0xFFFFFFFFFF AND DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x3F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x22E1 JUMPI PUSH1 0x20 DUP7 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xF8 SHL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 MSTORE JUMPDEST POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2249 JUMP JUMPDEST PUSH2 0x22F4 PUSH2 0x491E JUMP JUMPDEST PUSH2 0x22FC PUSH2 0x491E JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH2 0x230B JUMPI SWAP1 POP PUSH2 0xE42 JUMP JUMPDEST PUSH2 0x2315 DUP6 DUP6 PUSH2 0x2C0C JUMP JUMPDEST DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2371 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x235E PUSH2 0x499C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2356 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x20 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2399 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x23B6 JUMPI POP PUSH2 0x23D5 JUMP JUMPDEST PUSH2 0x23D3 DUP5 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x57C JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2382 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x23EC DUP7 DUP9 PUSH2 0x2C35 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP2 AND DUP13 MSTORE SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x2409 DUP9 PUSH2 0x14F1 JUMP JUMPDEST ISZERO PUSH2 0x2413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 AND PUSH1 0x40 DUP10 ADD MSTORE DUP5 PUSH2 0x2432 JUMPI PUSH1 0x7 PUSH1 0xFF DUP4 AND GT ISZERO PUSH2 0x2432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ISZERO PUSH2 0x2455 JUMPI PUSH1 0x20 DUP9 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xF8 SHL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 MSTORE PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD DUP1 MLOAD PUSH1 0x7F PUSH1 0xF9 SHL AND SWAP1 MSTORE JUMPDEST PUSH2 0x2471 DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 ISZERO PUSH2 0x24B4 JUMPI PUSH1 0xF0 DUP5 SWAP1 SHR DUP2 DUP2 EQ PUSH2 0x24A6 JUMPI PUSH2 0x24A6 DUP11 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL PUSH2 0x1EAB JUMP JUMPDEST PUSH1 0x10 SWAP5 SWAP1 SWAP5 SHL SWAP4 SWAP1 POP PUSH2 0x2483 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH2 0x12C PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76A700 PUSH2 0x24E2 DUP6 PUSH2 0x1678 JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x24F4 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2EEF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP8 PUSH1 0x40 ADD MLOAD SGT PUSH2 0x2516 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2527 DUP11 DUP11 DUP10 DUP10 PUSH2 0x2F26 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH2 0x2541 DUP13 PUSH1 0x40 ADD MLOAD DUP6 DUP8 DUP7 DUP15 PUSH2 0x2FC6 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP1 PUSH2 0x255C JUMPI PUSH1 0x0 DUP1 SWAP7 POP SWAP7 POP POP POP POP POP POP PUSH2 0x177 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x256E DUP14 DUP6 DUP15 DUP15 PUSH2 0x3072 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH1 0x0 EQ ISZERO PUSH2 0x2590 JUMPI PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP POP POP POP POP POP POP POP PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MLOAD PUSH2 0x259F SWAP1 DUP14 PUSH2 0x3162 JUMP JUMPDEST PUSH1 0x40 DUP16 ADD DUP2 SWAP1 MSTORE PUSH2 0x25BC SWAP1 PUSH2 0x25B4 DUP9 DUP6 PUSH2 0x560 JUMP JUMPDEST DUP10 DUP9 DUP16 PUSH2 0x317E JUMP JUMPDEST PUSH1 0xA0 DUP16 ADD DUP2 SWAP1 MSTORE PUSH2 0x25DA JUMPI PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP POP POP POP POP POP POP POP PUSH2 0x177 JUMP JUMPDEST PUSH2 0x25EB DUP15 DUP15 PUSH1 0x40 ADD MLOAD DUP6 DUP6 DUP6 PUSH2 0x323B JUMP JUMPDEST SWAP9 POP SWAP9 POP POP POP POP POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 SLT ISZERO DUP1 ISZERO PUSH2 0x261C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP6 SGT ISZERO JUMPDEST PUSH2 0x2625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SLT ISZERO DUP1 ISZERO PUSH2 0x263D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP5 SGT ISZERO JUMPDEST PUSH2 0x2646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x265A JUMPI POP PUSH4 0xFFFFFFFF DUP4 GT ISZERO JUMPDEST PUSH2 0x2663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x2677 JUMPI POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO JUMPDEST PUSH2 0x2680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x2691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP6 DUP7 AND OR PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0x50 SHL NOT AND PUSH1 0x1 PUSH1 0x50 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2733 PUSH1 0x0 DUP5 PUSH2 0x1D77 JUMP JUMPDEST POP POP POP SWAP1 POP PUSH2 0x274B DUP3 DUP3 PUSH2 0x560 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x275E PUSH1 0x0 DUP5 DUP4 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x20AB JUMP JUMPDEST DUP3 PUSH2 0xFFFF AND PUSH32 0x85170C297762884F47EC6098B74925C795E6D33686B11019B400E33A9B23B5E9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2792 SWAP2 SWAP1 PUSH2 0x4E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0xF PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 GT PUSH2 0x27CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4F34 JUMP JUMPDEST PUSH1 0x7 DUP6 GT ISZERO PUSH2 0x27F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x5041 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FB DUP5 PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP7 DUP2 GT PUSH2 0x284C JUMPI PUSH1 0x0 PUSH2 0x2815 PUSH2 0x16BA DUP4 PUSH2 0x1B07 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 EQ ISZERO PUSH2 0x282D JUMPI POP SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x2865 SWAP1 POP JUMP JUMPDEST DUP7 DUP2 GT ISZERO PUSH2 0x2843 JUMPI POP SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x2865 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2800 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x51E1 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2878 PUSH2 0x3290 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x76A700 PUSH2 0x2889 DUP6 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 ADD DUP1 DUP4 MSTORE SWAP4 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV AND DUP2 PUSH2 0x28F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222 SWAP1 PUSH2 0x4EA5 JUMP JUMPDEST PUSH2 0x28FD DUP2 DUP5 DUP5 DUP13 DUP13 PUSH2 0x329D JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2926 JUMPI POP PUSH1 0x0 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD30A666 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x4CEB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP7 LT PUSH2 0x29AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP3 LT PUSH2 0x29B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 LT PUSH2 0x29DD JUMPI PUSH2 0x29D6 DUP5 PUSH2 0x18C6 DUP9 DUP9 SUB PUSH2 0x1CC6 DUP4 DUP9 SUB DUP12 DUP9 SUB PUSH2 0x29FB JUMP JUMPDEST SWAP1 POP PUSH2 0x557 JUMP JUMPDEST PUSH2 0x29D6 PUSH2 0x29F4 DUP8 DUP8 SUB PUSH2 0x1CC6 DUP7 DUP9 SUB DUP11 DUP8 SUB PUSH2 0x29FB JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A0A JUMPI POP PUSH1 0x0 PUSH2 0x576 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2A17 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52D0 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2AAA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2AB3 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0x7FFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF SIGNEXTEND PUSH1 0x0 EQ ISZERO PUSH2 0x2AEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0x40 DUP6 PUSH1 0xF SIGNEXTEND SWAP1 SHL DUP2 PUSH2 0x2B01 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x2B23 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO JUMPDEST PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x46 SHL DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x2B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2B5E JUMPI POP PUSH1 0x0 PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x576 PUSH1 0x80 DUP4 PUSH1 0xF SIGNEXTEND PUSH17 0x171547652B82FE1777D0FFDA0D23A7D12 MUL SWAP1 SAR PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND MUL PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x2B23 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x40 SAR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT EQ DUP1 ISZERO PUSH2 0x2BD6 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL DUP4 EQ JUMPDEST ISZERO PUSH2 0x2BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2BE9 JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0x6 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0xFF SWAP1 SWAP2 AND SHL SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2C1A DUP5 DUP5 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 MLOAD GT PUSH2 0x2C2C JUMPI SWAP1 POP PUSH2 0x576 JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0x3F00 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 JUMPDEST DUP10 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x2CC6 JUMPI PUSH1 0x0 DUP11 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C5B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2C71 JUMPI INVALID JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C81 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2C8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C9E JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2CAE JUMPI POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x2CBD JUMPI PUSH2 0x2CBD DUP12 DUP4 PUSH2 0x40B9 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2C3F JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP10 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x2D69 JUMPI PUSH1 0x0 DUP11 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CE6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2CFD JUMPI INVALID JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D0D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2D21 JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 SSTORE PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D33 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2D4C JUMPI PUSH1 0x80 DUP2 ADD MLOAD DUP1 PUSH2 0x2D49 DUP4 DUP3 PUSH2 0x4209 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x2D58 DUP2 DUP7 DUP7 DUP7 PUSH2 0x432E JUMP JUMPDEST SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2CCA JUMP JUMPDEST POP PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x0 PUSH2 0x2D79 PUSH2 0x4391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP JUMPDEST DUP13 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x2E43 JUMPI PUSH1 0x0 DUP14 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DB4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2DD1 JUMPI POP PUSH2 0x2E3B JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2DE3 JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2E01 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2DFE JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x2E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E16 DUP2 DUP10 DUP10 DUP10 PUSH2 0x432E JUMP JUMPDEST SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP PUSH2 0x2E33 DUP2 DUP5 DUP8 PUSH1 0x10 DUP2 LT PUSH2 0x2E2D JUMPI INVALID JUMPDEST ADD PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SWAP5 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2D95 JUMP JUMPDEST POP PUSH1 0x10 DUP4 GT ISZERO DUP1 ISZERO PUSH2 0x2E5A JUMPI POP PUSH5 0xFFFFFFFFFF DUP5 GT ISZERO JUMPDEST PUSH2 0x2E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFF7FFF7FFF7FFF7FFF7FFF7FFF7FFF7FFF0000000000000000000000000000 DUP4 AND DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT DUP3 AND ISZERO PUSH2 0x2EE6 JUMPI PUSH1 0x1 PUSH1 0xFE SHL DUP3 DUP2 AND EQ ISZERO PUSH2 0x2ED0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP3 AND DUP2 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 PUSH1 0x10 ADD JUMPDEST PUSH1 0x10 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND SWAP1 SHL SWAP2 POP PUSH2 0x2E9C JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2EFC DUP8 DUP8 DUP8 DUP7 DUP6 PUSH2 0x439E JUMP JUMPDEST PUSH2 0x2F15 DUP8 PUSH1 0xE0 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP6 DUP9 PUSH2 0x329D JUMP JUMPDEST PUSH1 0xC0 SWAP1 SWAP8 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2F36 DUP8 DUP7 DUP9 PUSH2 0x4458 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F55 DUP10 PUSH1 0x60 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0x21E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP9 PUSH1 0x40 ADD MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x2F68 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F97 DUP12 PUSH1 0x40 ADD MLOAD DUP13 PUSH1 0xA0 ADD MLOAD DUP6 DUP8 DUP14 PUSH2 0x44CA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP1 PUSH2 0x2FB5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0x8F0 JUMP JUMPDEST POP SWAP2 SWAP10 SWAP1 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x2FD4 DUP9 DUP6 PUSH2 0x3162 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FEC PUSH2 0x2FE5 DUP11 DUP11 PUSH2 0x560 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP PUSH4 0x39387000 DUP2 SGT ISZERO PUSH2 0x3008 JUMPI PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0x177 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3014 DUP4 PUSH2 0x455A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x302D JUMPI PUSH1 0x0 DUP1 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x177 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3043 DUP10 PUSH2 0x303D DUP6 DUP14 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 PUSH2 0x560 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 SLT ISZERO PUSH2 0x3062 JUMPI PUSH1 0x0 DUP1 SWAP7 POP SWAP7 POP POP POP POP POP POP PUSH2 0x177 JUMP JUMPDEST SWAP6 POP PUSH1 0x1 SWAP5 POP PUSH2 0x177 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x3089 PUSH2 0x3084 DUP8 DUP10 PUSH2 0x1D1F JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x309F PUSH2 0x3099 DUP11 PUSH2 0x45FC JUMP JUMPDEST DUP8 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 SGT ISZERO PUSH2 0x30F7 JUMPI PUSH1 0x0 PUSH2 0x30B6 DUP10 DUP4 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 SLT ISZERO PUSH2 0x30D7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x30EF PUSH2 0x30E8 PUSH4 0x3B9ACA00 DUP5 PUSH2 0x4611 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x2212 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3119 JUMP JUMPDEST PUSH2 0x3116 PUSH2 0x3084 DUP3 PUSH2 0x1D69 PUSH2 0x310F PUSH4 0x3B9ACA00 DUP4 PUSH2 0x4611 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x3133 PUSH1 0x64 PUSH2 0x1D69 PUSH2 0x312C DUP14 PUSH2 0x4627 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP PUSH2 0x313F DUP4 DUP4 PUSH2 0x4611 JUMP JUMPDEST PUSH2 0x3150 PUSH2 0x3084 DUP4 PUSH2 0x303D DUP8 DUP8 PUSH2 0x4611 JUMP JUMPDEST SWAP1 SWAP12 SWAP1 SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x316E DUP4 DUP4 PUSH2 0x4611 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3191 DUP9 DUP9 DUP9 DUP9 PUSH1 0x0 PUSH2 0x2FC6 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x31A5 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x557 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B0 DUP4 PUSH2 0x4634 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31C4 DUP3 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x2AD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31D1 DUP3 PUSH2 0x4660 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31ED PUSH2 0x31E8 DUP4 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x2B81 JUMP JUMPDEST PUSH2 0x469A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x320D DUP10 PUSH2 0x1CC6 DUP5 PUSH4 0x1DA9C00 PUSH2 0x29FB JUMP JUMPDEST SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x322B JUMPI PUSH1 0x0 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x557 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x3249 DUP8 DUP7 PUSH2 0x1D38 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x325B SWAP1 DUP3 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x0 PUSH2 0x3272 DUP9 DUP7 PUSH2 0x1D38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3280 DUP10 DUP10 PUSH2 0x1D38 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP1 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0xA PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x32AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0x32BA JUMPI POP DUP4 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C6 DUP4 DUP9 PUSH2 0x18F9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x32D9 JUMPI DUP6 SWAP2 POP POP PUSH2 0x557 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32ED DUP6 PUSH2 0x1CC6 DUP5 PUSH4 0x3B9ACA00 PUSH2 0x29FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32FF PUSH4 0x3B9ACA00 DUP4 PUSH2 0x18F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3322 PUSH4 0x3B9ACA00 PUSH2 0x1CC6 PUSH2 0x3318 DUP12 DUP7 PUSH2 0x29FB JUMP JUMPDEST PUSH2 0x18C6 DUP14 DUP9 PUSH2 0x29FB JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x46 SHL DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x3345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x3362 JUMPI POP PUSH1 0x0 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7F SHL PUSH1 0x0 PUSH1 0x1 PUSH1 0x3F SHL DUP5 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3390 JUMPI PUSH17 0x16A09E667F3BCC908B2FB1366EA957D3E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x4000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x33BD JUMPI PUSH17 0x1306FE0A31B7152DE8D5A46305C85EDEC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x2000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x33EA JUMPI PUSH17 0x1172B83C7D517ADCDF7C8C50EB14A791F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x1000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3417 JUMPI PUSH17 0x10B5586CF9890F6298B92B71842A98363 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x800000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3444 JUMPI PUSH17 0x1059B0D31585743AE7C548EB68CA417FD MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x400000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3471 JUMPI PUSH17 0x102C9A3E778060EE6F7CACA4F7A29BDE8 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x200000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x349E JUMPI PUSH17 0x10163DA9FB33356D84A66AE336DCDFA3F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x38 SHL AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x34C7 JUMPI PUSH17 0x100B1AFA5ABCBED6129AB13EC11DC9543 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x80000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x34F3 JUMPI PUSH17 0x10058C86DA1C09EA1FF19D294CF2F679B MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x40000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x351F JUMPI PUSH17 0x1002C605E2E8CEC506D21BFC89A23A00F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x20000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x354B JUMPI PUSH17 0x100162F3904051FA128BCA9C55C31E5DF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x10000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3577 JUMPI PUSH17 0x1000B175EFFDC76BA38E31671CA939725 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x8000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x35A3 JUMPI PUSH17 0x100058BA01FB9F96D6CACD4B180917C3D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x4000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x35CF JUMPI PUSH17 0x10002C5CC37DA9491D0985C348C68E7B3 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x2000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x35FB JUMPI PUSH17 0x1000162E525EE054754457D5995292026 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x30 SHL AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3624 JUMPI PUSH17 0x10000B17255775C040618BF4A4ADE83FC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x800000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x364F JUMPI PUSH17 0x1000058B91B5BC9AE2EED81E9B7D4CFAB MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x400000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x367A JUMPI PUSH17 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x200000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x36A5 JUMPI PUSH17 0x10000162E43F4F831060E02D839A9D16D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x100000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x36D0 JUMPI PUSH17 0x100000B1721BCFC99D9F890EA06911763 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x80000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x36FB JUMPI PUSH17 0x10000058B90CF1E6D97F9CA14DBCC1628 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x40000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3726 JUMPI PUSH17 0x1000002C5C863B73F016468F6BAC5CA2B MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x20000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3751 JUMPI PUSH17 0x100000162E430E5A18F6119E3C02282A5 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x10000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x377C JUMPI PUSH17 0x1000000B1721835514B86E6D96EFD1BFE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x8000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x37A6 JUMPI PUSH17 0x100000058B90C0B48C6BE5DF846C5B2EF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x4000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x37D0 JUMPI PUSH17 0x10000002C5C8601CC6B9E94213C72737A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x2000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x37FA JUMPI PUSH17 0x1000000162E42FFF037DF38AA2B219F06 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x1000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3824 JUMPI PUSH17 0x10000000B17217FBA9C739AA5819F44F9 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x800000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x384E JUMPI PUSH17 0x1000000058B90BFCDEE5ACD3C1CEDC823 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x400000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3878 JUMPI PUSH17 0x100000002C5C85FE31F35A6A30DA1BE50 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x200000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x38A2 JUMPI PUSH17 0x10000000162E42FF0999CE3541B9FFFCF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x100000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x38CC JUMPI PUSH17 0x100000000B17217F80F4EF5AADDA45554 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x80000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x38F5 JUMPI PUSH17 0x10000000058B90BFBF8479BD5A81B51AD MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x40000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x391E JUMPI PUSH17 0x1000000002C5C85FDF84BD62AE30A74CC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x20000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3947 JUMPI PUSH17 0x100000000162E42FEFB2FED257559BDAA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x10000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3970 JUMPI PUSH17 0x1000000000B17217F7D5A7716BBA4A9AE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x8000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3999 JUMPI PUSH17 0x100000000058B90BFBE9DDBAC5E109CCE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x4000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x39C2 JUMPI PUSH17 0x10000000002C5C85FDF4B15DE6F17EB0D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x2000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x39EB JUMPI PUSH17 0x1000000000162E42FEFA494F1478FDE05 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x1000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3A14 JUMPI PUSH17 0x10000000000B17217F7D20CF927C8E94C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x800000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3A3C JUMPI PUSH17 0x1000000000058B90BFBE8F71CB4E4B33D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x400000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3A64 JUMPI PUSH17 0x100000000002C5C85FDF477B662B26945 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x200000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3A8C JUMPI PUSH17 0x10000000000162E42FEFA3AE53369388C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x100000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3AB4 JUMPI PUSH17 0x100000000000B17217F7D1D351A389D40 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x80000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3ADC JUMPI PUSH17 0x10000000000058B90BFBE8E8B2D3D4EDE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x40000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3B04 JUMPI PUSH17 0x1000000000002C5C85FDF4741BEA6E77E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x20000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3B2C JUMPI PUSH17 0x100000000000162E42FEFA39FE95583C2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x10000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3B54 JUMPI PUSH17 0x1000000000000B17217F7D1CFB72B45E1 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x8000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3B7B JUMPI PUSH17 0x100000000000058B90BFBE8E7CC35C3F0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x4000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3BA2 JUMPI PUSH17 0x10000000000002C5C85FDF473E242EA38 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x2000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3BC9 JUMPI PUSH17 0x1000000000000162E42FEFA39F02B772C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x1000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3BF0 JUMPI PUSH17 0x10000000000000B17217F7D1CF7D83C1A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x800 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3C17 JUMPI PUSH17 0x1000000000000058B90BFBE8E7BDCBE2E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x400 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3C3E JUMPI PUSH17 0x100000000000002C5C85FDF473DEA871F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x200 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3C65 JUMPI PUSH17 0x10000000000000162E42FEFA39EF44D91 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x100 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3C8C JUMPI PUSH17 0x100000000000000B17217F7D1CF79E949 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x80 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3CB2 JUMPI PUSH17 0x10000000000000058B90BFBE8E7BCE544 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3CD8 JUMPI PUSH17 0x1000000000000002C5C85FDF473DE6ECA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3CFE JUMPI PUSH17 0x100000000000000162E42FEFA39EF366F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x10 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3D24 JUMPI PUSH17 0x1000000000000000B17217F7D1CF79AFA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x8 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3D4A JUMPI PUSH17 0x100000000000000058B90BFBE8E7BCD6D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x4 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3D70 JUMPI PUSH17 0x10000000000000002C5C85FDF473DE6B2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3D96 JUMPI PUSH17 0x1000000000000000162E42FEFA39EF358 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3DBC JUMPI PUSH17 0x10000000000000000B17217F7D1CF79AB MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0xF DUP4 DUP2 SIGNEXTEND PUSH1 0x40 SAR PUSH1 0x3F SUB SWAP1 SIGNEXTEND SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x10 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x3DF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DFB PUSH2 0x4391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH1 0xFF DUP6 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3E30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3E6A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3E57 PUSH2 0x499C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E4F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x3EF6 JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x10 DUP2 LT PUSH2 0x3E89 JUMPI INVALID JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3E9A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP4 SLOAD PUSH2 0xFFFF DUP2 AND DUP3 MSTORE PUSH5 0xFFFFFFFFFF PUSH3 0x10000 DUP3 DIV AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x38 SHL DUP4 DIV AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV PUSH1 0xA SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 ADD PUSH2 0x3E70 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3F1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F45 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3FA2 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3F61 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x3F82 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x46B6 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3F8E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x3F4B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x20A5 JUMPI DUP1 JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x3FE8 JUMPI POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3FC7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x3FDE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x40B0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3FF9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x4010 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x1 DUP5 SUB DUP2 MLOAD DUP2 LT PUSH2 0x4027 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x403A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4057 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x406E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x1 DUP5 SUB DUP2 MLOAD DUP2 LT PUSH2 0x4085 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4098 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x0 NOT ADD PUSH2 0x3FB0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x3FA6 JUMP JUMPDEST DUP2 MLOAD MLOAD DUP2 LT PUSH2 0x40C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD GT PUSH2 0x40D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x40EA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4101 JUMPI INVALID JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4111 JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x412F JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x412C JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x4138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP4 ADD DUP1 MLOAD PUSH1 0x0 NOT ADD SWAP1 MSTORE PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP6 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x41AB JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4165 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP3 DUP2 PUSH1 0x80 ADD MLOAD GT DUP1 ISZERO PUSH2 0x4192 JUMPI POP PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x418F JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x41A2 JUMPI DUP1 PUSH1 0x80 ADD MLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x4149 JUMP JUMPDEST POP DUP2 DUP5 EQ ISZERO PUSH2 0x41C4 JUMPI POP POP PUSH1 0x2 PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MSTORE PUSH2 0x4205 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x41D6 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 DUP6 DUP2 ADD DUP1 MLOAD SWAP2 DUP4 ADD DUP1 MLOAD SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x1 PUSH1 0xA0 SWAP2 DUP3 ADD MSTORE PUSH1 0x2 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x421C JUMPI POP DUP2 MLOAD PUSH2 0x3FFF LT ISZERO JUMPDEST PUSH2 0x4225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x4242 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD PUSH5 0xFFFFFFFFFF LT ISZERO JUMPDEST PUSH2 0x424B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x4264 JUMPI POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x8 LT ISZERO JUMPDEST PUSH2 0x426D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB NOT SGT DUP1 ISZERO SWAP1 PUSH2 0x4294 JUMPI POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x57 SHL SUB SLT ISZERO JUMPDEST PUSH2 0x429D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 SWAP1 SWAP6 ADD MLOAD PUSH1 0xA SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH19 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000 NOT PUSH1 0xFF SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0x38 SHL MUL PUSH8 0xFF00000000000000 NOT PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND PUSH3 0x10000 MUL PUSH7 0xFFFFFFFFFF0000 NOT PUSH2 0xFFFF SWAP1 SWAP7 AND PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP5 SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x433D DUP9 PUSH2 0x4711 JUMP JUMPDEST SWAP1 POP DUP5 ISZERO DUP1 PUSH2 0x434B JUMPI POP DUP1 DUP6 GT JUMPDEST ISZERO PUSH2 0x4354 JUMPI DUP1 SWAP5 POP JUMPDEST DUP7 DUP1 PUSH2 0x4364 JUMPI POP PUSH1 0x0 DUP9 PUSH1 0x60 ADD MLOAD SLT JUMPDEST SWAP7 POP PUSH2 0xFFFF DUP7 AND ISZERO PUSH2 0x4375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP5 MLOAD SWAP4 SWAP6 PUSH1 0x10 SWAP4 SWAP1 SWAP4 SHR PUSH1 0xF0 SWAP5 SWAP1 SWAP5 SHL SWAP4 SWAP1 SWAP4 OR SWAP4 POP SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x576 PUSH1 0xD PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A8 PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 DUP11 MSTORE SWAP1 DUP10 ADD DUP8 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP3 AND SWAP4 DUP12 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x50 SHL DUP2 DIV SWAP1 SWAP3 AND PUSH1 0x60 DUP11 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV DUP2 AND PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL DUP4 DIV DUP2 AND PUSH1 0xC0 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND PUSH1 0xE0 DUP10 ADD MSTORE SWAP1 SWAP2 POP DUP1 DUP5 ISZERO PUSH2 0x4447 JUMPI PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP10 ADD MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x446F JUMPI POP DUP4 PUSH1 0x20 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0x4478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 PUSH1 0x8 PUSH1 0x0 NOT DUP7 ADD MUL ADD SWAP1 PUSH1 0xFF SWAP1 DUP3 SHR AND PUSH4 0x3B9ACA00 MUL PUSH1 0x0 PUSH2 0x44B1 PUSH2 0x44A3 DUP7 PUSH2 0x4778 JUMP JUMPDEST PUSH2 0x1D69 DUP5 PUSH4 0x1DA9C00 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x44C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x44D9 DUP8 DUP6 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 SLT ISZERO PUSH2 0x44F4 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x177 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x450B PUSH2 0x4504 DUP12 DUP11 PUSH2 0x560 JUMP JUMPDEST DUP12 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x4519 DUP4 PUSH2 0x455A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x4533 JUMPI PUSH1 0x0 DUP1 SWAP7 POP SWAP7 POP POP POP POP POP POP PUSH2 0x177 JUMP JUMPDEST PUSH2 0x4547 PUSH2 0x4540 DUP4 DUP12 PUSH2 0x1D1F JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x4611 JUMP JUMPDEST SWAP13 PUSH1 0x1 SWAP13 POP SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x3B9ACA00 DUP4 EQ ISZERO PUSH2 0x4574 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x45F7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458E PUSH2 0x4587 PUSH4 0x3B9ACA00 DUP7 PUSH2 0x4611 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x459B DUP3 PUSH2 0x4634 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF SIGNEXTEND SGT PUSH2 0x45B6 JUMPI PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP POP POP PUSH2 0x45F7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45EA PUSH2 0x45E5 PUSH2 0x45D9 PUSH2 0x45CA DUP6 PUSH2 0x4660 JUMP JUMPDEST PUSH9 0x14B927F32BFFB83338 PUSH2 0x4792 JUMP JUMPDEST PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x2B81 JUMP JUMPDEST PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP5 POP PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH3 0x186A0 PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND MUL SWAP1 JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 SGT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 ADD MLOAD PUSH1 0x18 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0x7FFFFFFFFFFFFFFF NOT DUP3 SLT ISZERO DUP1 ISZERO PUSH2 0x4657 JUMPI POP PUSH8 0x7FFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SGT PUSH2 0x4671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 PUSH2 0x467C DUP4 PUSH2 0x47C5 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF MUL SWAP1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x46AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SIGNEXTEND PUSH1 0x40 SAR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FFF DUP5 GT ISZERO PUSH2 0x46C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH5 0xFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x46D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP3 GT ISZERO PUSH2 0x46E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH8 0xFFFF000000000000 PUSH1 0x30 DUP5 SWAP1 SHL AND PUSH6 0xFFFFFFFFFF00 PUSH1 0x8 DUP5 SWAP1 SHL AND OR PUSH1 0xFF DUP3 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 ADD MLOAD GT DUP1 ISZERO PUSH2 0x472B JUMPI POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x8 LT ISZERO JUMPDEST PUSH2 0x4734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 LT PUSH2 0x474B JUMPI POP PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x475D PUSH1 0x1 DUP5 PUSH1 0x40 ADD MLOAD SUB PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x2CA SWAP1 PUSH3 0x76A700 SWAP1 PUSH2 0x18C6 SWAP1 DUP5 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x478E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP3 DUP2 SIGNEXTEND SWAP1 DUP5 SWAP1 SIGNEXTEND SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x2B23 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SGT PUSH2 0x47D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 SWAP1 SIGNEXTEND PUSH1 0x1 PUSH1 0x40 SHL DUP2 SLT PUSH2 0x47F0 JUMPI PUSH1 0x40 SWAP2 DUP3 ADD SWAP2 SAR JUMPDEST PUSH5 0x100000000 DUP2 SLT PUSH2 0x4804 JUMPI PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 SAR JUMPDEST PUSH3 0x10000 DUP2 SLT PUSH2 0x4816 JUMPI PUSH1 0x10 SWAP2 DUP3 ADD SWAP2 SAR JUMPDEST PUSH2 0x100 DUP2 SLT PUSH2 0x4827 JUMPI PUSH1 0x8 SWAP2 DUP3 ADD SWAP2 SAR JUMPDEST PUSH1 0x10 DUP2 SLT PUSH2 0x4837 JUMPI PUSH1 0x4 SWAP2 DUP3 ADD SWAP2 SAR JUMPDEST PUSH1 0x4 DUP2 SLT PUSH2 0x4847 JUMPI PUSH1 0x2 SWAP2 DUP3 ADD SWAP2 SAR JUMPDEST PUSH1 0x2 DUP2 SLT PUSH2 0x4856 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST PUSH1 0x3F NOT DUP3 ADD PUSH1 0x40 SHL PUSH1 0xF DUP6 SWAP1 SIGNEXTEND PUSH1 0x7F DUP5 SWAP1 SUB SHL PUSH1 0x1 PUSH1 0x3F SHL JUMPDEST PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x4895 JUMPI SWAP1 DUP1 MUL PUSH1 0xFF DUP2 SWAP1 SHR DUP3 DUP2 MUL SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x7F ADD SHR SWAP1 PUSH1 0x1 SAR PUSH2 0x486F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0x4965 PUSH2 0x4972 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x49D7 JUMPI INVALID JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4A32 JUMPI DUP1 DUP2 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A49 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4A73 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x4A8A JUMPI INVALID JUMPDEST PUSH2 0x4A97 DUP3 DUP4 DUP6 MUL ADD PUSH2 0x5285 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP1 DUP7 DUP5 ADD PUSH1 0xC0 DUP1 DUP8 MUL DUP10 ADD DUP7 ADD DUP11 LT ISZERO PUSH2 0x4AB5 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x4B36 JUMPI DUP2 DUP4 DUP13 SUB SLT ISZERO PUSH2 0x4ACD JUMPI DUP9 DUP10 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 ADD DUP2 DUP2 LT DUP10 DUP3 GT OR ISZERO PUSH2 0x4AE2 JUMPI INVALID JUMPDEST DUP3 MSTORE DUP5 CALLDATALOAD DUP2 MSTORE DUP9 DUP6 ADD CALLDATALOAD DUP10 DUP3 ADD MSTORE DUP5 DUP3 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP6 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 SWAP1 PUSH2 0x4B1D DUP3 DUP7 ADD PUSH2 0x4B5D JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE SWAP4 DUP7 ADD SWAP4 SWAP2 DUP2 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4AB7 JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2CE DUP2 PUSH2 0x52A9 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4B9F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4BA8 DUP7 PUSH2 0x4A0A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4BB8 DUP2 PUSH2 0x52A9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4BD4 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP1 DUP8 ADD SWAP1 PUSH1 0x80 DUP3 DUP11 SUB SLT ISZERO PUSH2 0x4BE7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0x4BFC JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x4C0D JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x4C19 DUP12 DUP3 DUP7 ADD PUSH2 0x4A63 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x4C2D JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x4C39 DUP12 DUP3 DUP7 ADD PUSH2 0x4A63 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE SWAP5 POP SWAP1 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x4C66 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x4C73 DUP9 DUP3 DUP10 ADD PUSH2 0x4A21 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4C9B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4CA4 DUP7 PUSH2 0x4A0A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4CB4 DUP2 PUSH2 0x52A9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x4CC4 DUP2 PUSH2 0x52BC JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CDF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4C73 DUP9 DUP3 DUP10 ADD PUSH2 0x4A21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4CFC JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D14 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4D31 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x4D3F DUP2 PUSH2 0x52BC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x4D5B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4D6C PUSH1 0x40 DUP5 ADD PUSH2 0x4B77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x4D7D PUSH1 0x60 DUP5 ADD PUSH2 0x4B6C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x4D8E PUSH1 0x80 DUP5 ADD PUSH2 0x4B45 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E07 JUMPI DUP2 MLOAD DUP1 MLOAD DUP9 MSTORE DUP4 DUP2 ADD MLOAD DUP5 DUP10 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT PUSH2 0x4DF2 JUMPI INVALID JUMPDEST DUP9 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4DAD JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE DUP1 MLOAD PUSH5 0xFFFFFFFFFF AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD MLOAD PUSH1 0xFF AND PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB NOT AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D081B9BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F6E206964696F73796E637261746963206D61747572697479000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x10D1CE881B9BC81B585C9AD95D1CC81B1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x4163636F756E74206D75737420736574746C65 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616465206661696C65642C206C6971756964697479000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x4F766572206D617820617373657473 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x496E76616C6964206D61747572697479 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x10D1CE881B585C9AD95D081A5B99195E08189BDD5B99 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081B585C9AD95D PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x496E76616C69642074726164652074797065 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420626C6F636B2074696D65000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E76616C696420736574746C652062616C616E6365 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x5472616465206661696C65642C20736C697070616765 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x111A5CD8589B1959 PUSH1 0xC2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E7420746F20736574746C650000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x21B0B73737BA1039B2BA3A36329039B2B633 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x10D1CE881B9BC81B585C9AD95D08199BDD5B99 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE DUP4 MLOAD PUSH1 0x80 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x522A PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x4D9A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x3F NOT DUP5 DUP4 SUB ADD PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x5247 DUP3 DUP3 PUSH2 0x4D9A JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE POP POP POP PUSH1 0x20 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x52A1 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x52B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x52B9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xE9 0xEA 0xCB 0xCC 0x1E KECCAK256 0xBB 0xCE ADD 0xEA PUSH10 0xFE1BD556EE0D3E3B3F25 0x2D DUP7 PUSH10 0x82DACC698CAF756D6473 PUSH16 0x6C634300070600330000000000000000 ", "sha1": "a31055cb4bbecb6b629ff7f3de7625ee8b9f1158", "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.7.0;\npragma abicoder v2;\n\nimport \"../FreeCollateralExternal.sol\";\nimport \"../SettleAssetsExternal.sol\";\nimport \"../../internal/markets/Market.sol\";\nimport \"../../internal/markets/CashGroup.sol\";\nimport \"../../internal/markets/AssetRate.sol\";\nimport \"../../internal/balances/BalanceHandler.sol\";\nimport \"../../internal/portfolio/PortfolioHandler.sol\";\nimport \"../../internal/portfolio/TransferAssets.sol\";\nimport \"../../math/SafeInt256.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\nlibrary TradingAction {\n    using PortfolioHandler for PortfolioState;\n    using AccountContextHandler for AccountContext;\n    using Market for MarketParameters;\n    using CashGroup for CashGroupParameters;\n    using AssetRate for AssetRateParameters;\n    using SafeInt256 for int256;\n    using SafeMath for uint256;\n\n    event LendBorrowTrade(\n        address indexed account,\n        uint16 indexed currencyId,\n        uint40 maturity,\n        int256 netAssetCash,\n        int256 netfCash\n    );\n\n    event AddRemoveLiquidity(\n        address indexed account,\n        uint16 indexed currencyId,\n        uint40 maturity,\n        int256 netAssetCash,\n        int256 netfCash,\n        int256 netLiquidityTokens\n    );\n\n    event SettledCashDebt(\n        address indexed settledAccount,\n        uint16 indexed currencyId,\n        address indexed settler,\n        int256 amountToSettleAsset,\n        int256 fCashAmount\n    );\n\n    event nTokenResidualPurchase(\n        uint16 indexed currencyId,\n        uint40 indexed maturity,\n        address indexed purchaser,\n        int256 fCashAmountToPurchase,\n        int256 netAssetCashNToken\n    );\n\n    /// @dev Used internally to manage stack issues\n    struct TradeContext {\n        int256 cash;\n        int256 fCashAmount;\n        int256 fee;\n        int256 netCash;\n        int256 totalFee;\n        uint256 blockTime;\n    }\n\n    /// @notice Executes trades for a bitmapped portfolio, cannot be called directly\n    /// @param account account to put fCash assets in\n    /// @param bitmapCurrencyId currency id of the bitmap\n    /// @param nextSettleTime used to calculate the relative positions in the bitmap\n    /// @param trades tightly packed array of trades, schema is defined in global/Types.sol\n    /// @return netCash generated by trading\n    /// @return didIncurDebt if the bitmap had an fCash position go negative\n    function executeTradesBitmapBatch(\n        address account,\n        uint16 bitmapCurrencyId,\n        uint40 nextSettleTime,\n        bytes32[] calldata trades\n    ) external returns (int256, bool) {\n        CashGroupParameters memory cashGroup = CashGroup.buildCashGroupStateful(bitmapCurrencyId);\n        MarketParameters memory market;\n        bool didIncurDebt;\n        TradeContext memory c;\n        c.blockTime = block.timestamp;\n\n        for (uint256 i = 0; i < trades.length; i++) {\n            uint256 maturity;\n            (maturity, c.cash, c.fCashAmount) = _executeTrade(\n                account,\n                cashGroup,\n                market,\n                trades[i],\n                c.blockTime\n            );\n\n            c.fCashAmount = BitmapAssetsHandler.addifCashAsset(\n                account,\n                bitmapCurrencyId,\n                maturity,\n                nextSettleTime,\n                c.fCashAmount\n            );\n\n            didIncurDebt = didIncurDebt || (c.fCashAmount < 0);\n            c.netCash = c.netCash.add(c.cash);\n        }\n\n        return (c.netCash, didIncurDebt);\n    }\n\n    /// @notice Executes trades for a bitmapped portfolio, cannot be called directly\n    /// @param account account to put fCash assets in\n    /// @param currencyId currency id to trade\n    /// @param portfolioState used to update the positions in the portfolio\n    /// @param trades tightly packed array of trades, schema is defined in global/Types.sol\n    /// @return resulting portfolio state\n    /// @return netCash generated by trading\n    function executeTradesArrayBatch(\n        address account,\n        uint16 currencyId,\n        PortfolioState memory portfolioState,\n        bytes32[] calldata trades\n    ) external returns (PortfolioState memory, int256) {\n        CashGroupParameters memory cashGroup = CashGroup.buildCashGroupStateful(currencyId);\n        MarketParameters memory market;\n        TradeContext memory c;\n        c.blockTime = block.timestamp;\n\n        for (uint256 i = 0; i < trades.length; i++) {\n            TradeActionType tradeType = TradeActionType(uint256(uint8(bytes1(trades[i]))));\n\n            if (\n                tradeType == TradeActionType.AddLiquidity ||\n                tradeType == TradeActionType.RemoveLiquidity\n            ) {\n                revert(\"Disabled\");\n                /**\n                 * Manual adding and removing of liquidity is currently disabled.\n                 *\n                 *  // Liquidity tokens can only be added by array portfolio\n                 *  c.cash = _executeLiquidityTrade(\n                 *      account,\n                 *      cashGroup,\n                 *      market,\n                 *      tradeType,\n                 *      trades[i],\n                 *      portfolioState,\n                 *      c.netCash\n                 *  );\n                 */\n            } else {\n                uint256 maturity;\n                (maturity, c.cash, c.fCashAmount) = _executeTrade(\n                    account,\n                    cashGroup,\n                    market,\n                    trades[i],\n                    c.blockTime\n                );\n\n                portfolioState.addAsset(\n                    currencyId,\n                    maturity,\n                    Constants.FCASH_ASSET_TYPE,\n                    c.fCashAmount\n                );\n            }\n\n            c.netCash = c.netCash.add(c.cash);\n        }\n\n        return (portfolioState, c.netCash);\n    }\n\n    /// @notice Executes a non-liquidity token trade\n    /// @param account the initiator of the trade\n    /// @param cashGroup parameters for the trade\n    /// @param market market memory location to use\n    /// @param trade bytes32 encoding of the particular trade\n    /// @param blockTime the current block time\n    /// @return maturity of the asset that was traded\n    /// @return cashAmount - a positive or negative cash amount accrued to the account\n    /// @return fCashAmount - a positive or negative fCash amount accrued to the account\n    function _executeTrade(\n        address account,\n        CashGroupParameters memory cashGroup,\n        MarketParameters memory market,\n        bytes32 trade,\n        uint256 blockTime\n    )\n        private\n        returns (\n            uint256 maturity,\n            int256 cashAmount,\n            int256 fCashAmount\n        )\n    {\n        TradeActionType tradeType = TradeActionType(uint256(uint8(bytes1(trade))));\n        if (tradeType == TradeActionType.PurchaseNTokenResidual) {\n            (maturity, cashAmount, fCashAmount) = _purchaseNTokenResidual(\n                account,\n                cashGroup,\n                blockTime,\n                trade\n            );\n        } else if (tradeType == TradeActionType.SettleCashDebt) {\n            (maturity, cashAmount, fCashAmount) = _settleCashDebt(account, cashGroup, blockTime, trade);\n        } else if (tradeType == TradeActionType.Lend || tradeType == TradeActionType.Borrow) {\n            (cashAmount, fCashAmount) = _executeLendBorrowTrade(\n                cashGroup,\n                market,\n                tradeType,\n                blockTime,\n                trade\n            );\n\n            // This is a little ugly but required to deal with stack issues. We know the market is loaded\n            // with the proper maturity inside _executeLendBorrowTrade\n            maturity = market.maturity;\n            emit LendBorrowTrade(\n                account,\n                uint16(cashGroup.currencyId),\n                uint40(maturity),\n                cashAmount,\n                fCashAmount\n            );\n        } else {\n            revert(\"Invalid trade type\");\n        }\n    }\n\n    /// @notice Executes a liquidity token trade, no fees incurred and only array portfolios may hold\n    /// liquidity tokens.\n    /// @param account the initiator of the trade\n    /// @param cashGroup parameters for the trade\n    /// @param market market memory location to use\n    /// @param tradeType whether this is add or remove liquidity\n    /// @param trade bytes32 encoding of the particular trade\n    /// @param portfolioState the current account's portfolio state\n    /// @param netCash the current net cash accrued in this batch of trades, can be\n    //  used for adding liquidity\n    /// @return cashAmount: a positive or negative cash amount accrued to the account\n    function _executeLiquidityTrade(\n        address account,\n        CashGroupParameters memory cashGroup,\n        MarketParameters memory market,\n        TradeActionType tradeType,\n        bytes32 trade,\n        PortfolioState memory portfolioState,\n        int256 netCash\n    ) private returns (int256) {\n        uint256 marketIndex = uint8(bytes1(trade << 8));\n        // NOTE: this loads the market in memory\n        cashGroup.loadMarket(market, marketIndex, true, block.timestamp);\n\n        int256 cashAmount;\n        int256 fCashAmount;\n        int256 tokens;\n        if (tradeType == TradeActionType.AddLiquidity) {\n            cashAmount = int256((uint256(trade) >> 152) & type(uint88).max);\n            // Setting cash amount to zero will deposit all net cash accumulated in this trade into\n            // liquidity. This feature allows accounts to borrow in one maturity to provide liquidity\n            // in another in a single transaction without dust. It also allows liquidity providers to\n            // sell off the net cash residuals and use the cash amount in the new market without dust\n            if (cashAmount == 0) cashAmount = netCash;\n\n            // Add liquidity will check cash amount is positive\n            (tokens, fCashAmount) = market.addLiquidity(cashAmount);\n            cashAmount = cashAmount.neg(); // Report a negative cash amount in the event\n        } else {\n            tokens = int256((uint256(trade) >> 152) & type(uint88).max);\n            (cashAmount, fCashAmount) = market.removeLiquidity(tokens);\n            tokens = tokens.neg(); // Report a negative amount tokens in the event\n        }\n\n        {\n            uint256 minImpliedRate = uint32(uint256(trade) >> 120);\n            uint256 maxImpliedRate = uint32(uint256(trade) >> 88);\n            // If minImpliedRate is not set then it will be zero\n            require(market.lastImpliedRate >= minImpliedRate, \"Trade failed, slippage\");\n            if (maxImpliedRate != 0)\n                require(market.lastImpliedRate <= maxImpliedRate, \"Trade failed, slippage\");\n        }\n\n        // Add the assets in this order so they are sorted\n        portfolioState.addAsset(\n            cashGroup.currencyId,\n            market.maturity,\n            Constants.FCASH_ASSET_TYPE,\n            fCashAmount\n        );\n        // Adds the liquidity token asset\n        portfolioState.addAsset(\n            cashGroup.currencyId,\n            market.maturity,\n            marketIndex + 1,\n            tokens\n        );\n\n        emit AddRemoveLiquidity(\n            account,\n            cashGroup.currencyId,\n            // This will not overflow for a long time\n            uint40(market.maturity),\n            cashAmount,\n            fCashAmount,\n            tokens\n        );\n\n        return cashAmount;\n    }\n\n    /// @notice Executes a lend or borrow trade\n    /// @param cashGroup parameters for the trade\n    /// @param market market memory location to use\n    /// @param tradeType whether this is add or remove liquidity\n    /// @param blockTime the current block time\n    /// @param trade bytes32 encoding of the particular trade\n    /// @return cashAmount - a positive or negative cash amount accrued to the account\n    /// @return fCashAmount -  a positive or negative fCash amount accrued to the account\n    function _executeLendBorrowTrade(\n        CashGroupParameters memory cashGroup,\n        MarketParameters memory market,\n        TradeActionType tradeType,\n        uint256 blockTime,\n        bytes32 trade\n    )\n        private\n        returns (\n            int256 cashAmount,\n            int256 fCashAmount\n        )\n    {\n        uint256 marketIndex = uint256(uint8(bytes1(trade << 8)));\n        // NOTE: this updates the market in memory\n        cashGroup.loadMarket(market, marketIndex, false, blockTime);\n\n        fCashAmount = int256(uint88(bytes11(trade << 16)));\n        // fCash to account will be negative here\n        if (tradeType == TradeActionType.Borrow) fCashAmount = fCashAmount.neg();\n\n        cashAmount = market.executeTrade(\n            cashGroup,\n            fCashAmount,\n            market.maturity.sub(blockTime),\n            marketIndex\n        );\n        require(cashAmount != 0, \"Trade failed, liquidity\");\n\n        uint256 rateLimit = uint256(uint32(bytes4(trade << 104)));\n        if (rateLimit != 0) {\n            if (tradeType == TradeActionType.Borrow) {\n                // Do not allow borrows over the rate limit\n                require(market.lastImpliedRate <= rateLimit, \"Trade failed, slippage\");\n            } else {\n                // Do not allow lends under the rate limit\n                require(market.lastImpliedRate >= rateLimit, \"Trade failed, slippage\");\n            }\n        }\n    }\n\n    /// @notice If an account has a negative cash balance we allow anyone to lend to to that account at a penalty\n    /// rate to the 3 month market.\n    /// @param account the account initiating the trade, used to check that self settlement is not possible\n    /// @param cashGroup parameters for the trade\n    /// @param blockTime the current block time\n    /// @param trade bytes32 encoding of the particular trade\n    /// @return maturity: the date of the three month maturity where fCash will be exchanged\n    /// @return cashAmount: a negative cash amount that the account must pay to the settled account\n    /// @return fCashAmount: a positive fCash amount that the account will receive\n    function _settleCashDebt(\n        address account,\n        CashGroupParameters memory cashGroup,\n        uint256 blockTime,\n        bytes32 trade\n    )\n        internal\n        returns (\n            uint256,\n            int256,\n            int256\n        )\n    {\n        address counterparty = address(uint256(trade) >> 88);\n        // Allowing an account to settle itself would result in strange outcomes\n        require(account != counterparty, \"Cannot settle self\");\n        int256 amountToSettleAsset = int256(uint88(uint256(trade)));\n\n        AccountContext memory counterpartyContext =\n            AccountContextHandler.getAccountContext(counterparty);\n\n        if (counterpartyContext.mustSettleAssets()) {\n            counterpartyContext = SettleAssetsExternal.settleAccount(counterparty, counterpartyContext);\n        }\n\n        // This will check if the amountToSettleAsset is valid and revert if it is not. Amount to settle is a positive\n        // number denominated in asset terms. If amountToSettleAsset is set equal to zero on the input, will return the\n        // max amount to settle. This will update the balance storage on the counterparty.\n        amountToSettleAsset = BalanceHandler.setBalanceStorageForSettleCashDebt(\n            counterparty,\n            cashGroup,\n            amountToSettleAsset,\n            counterpartyContext\n        );\n\n        // Settled account must borrow from the 3 month market at a penalty rate. This will fail if the market\n        // is not initialized.\n        uint256 threeMonthMaturity = DateTime.getReferenceTime(blockTime) + Constants.QUARTER;\n        int256 fCashAmount =\n            _getfCashSettleAmount(cashGroup, threeMonthMaturity, blockTime, amountToSettleAsset);\n        // Defensive check to ensure that we can't inadvertently cause the settler to lose fCash.\n        require(fCashAmount >= 0);\n\n        // It's possible that this action will put an account into negative free collateral. In this case they\n        // will immediately become eligible for liquidation and the account settling the debt can also liquidate\n        // them in the same transaction. Do not run a free collateral check here to allow this to happen.\n        {\n            PortfolioAsset[] memory assets = new PortfolioAsset[](1);\n            assets[0].currencyId = cashGroup.currencyId;\n            assets[0].maturity = threeMonthMaturity;\n            assets[0].notional = fCashAmount.neg(); // This is the debt the settled account will incur\n            assets[0].assetType = Constants.FCASH_ASSET_TYPE;\n            // Can transfer assets, we have settled above\n            counterpartyContext = TransferAssets.placeAssetsInAccount(\n                counterparty,\n                counterpartyContext,\n                assets\n            );\n        }\n        counterpartyContext.setAccountContext(counterparty);\n\n        emit SettledCashDebt(\n            counterparty,\n            uint16(cashGroup.currencyId),\n            account,\n            amountToSettleAsset,\n            fCashAmount.neg()\n        );\n\n        return (threeMonthMaturity, amountToSettleAsset.neg(), fCashAmount);\n    }\n\n    /// @dev Helper method to calculate the fCashAmount from the penalty settlement rate\n    function _getfCashSettleAmount(\n        CashGroupParameters memory cashGroup,\n        uint256 threeMonthMaturity,\n        uint256 blockTime,\n        int256 amountToSettleAsset\n    ) private view returns (int256) {\n        uint256 oracleRate = cashGroup.calculateOracleRate(threeMonthMaturity, blockTime);\n\n        int256 exchangeRate =\n            Market.getExchangeRateFromImpliedRate(\n                oracleRate.add(cashGroup.getSettlementPenalty()),\n                threeMonthMaturity.sub(blockTime)\n            );\n\n        // Amount to settle is positive, this returns the fCashAmount that the settler will\n        // receive as a positive number\n        return\n            cashGroup.assetRate\n                .convertToUnderlying(amountToSettleAsset)\n                // Exchange rate converts from cash to fCash when multiplying\n                .mulInRatePrecision(exchangeRate);\n    }\n\n    /// @notice Allows an account to purchase ntoken residuals\n    /// @param purchaser account that is purchasing the residuals\n    /// @param cashGroup parameters for the trade\n    /// @param blockTime the current block time\n    /// @param trade bytes32 encoding of the particular trade\n    /// @return maturity: the date of the idiosyncratic maturity where fCash will be exchanged\n    /// @return cashAmount: a positive or negative cash amount that the account will receive or pay\n    /// @return fCashAmount: a positive or negative fCash amount that the account will receive\n    function _purchaseNTokenResidual(\n        address purchaser,\n        CashGroupParameters memory cashGroup,\n        uint256 blockTime,\n        bytes32 trade\n    )\n        internal\n        returns (\n            uint256,\n            int256,\n            int256\n        )\n    {\n        uint256 maturity = uint256(uint32(uint256(trade) >> 216));\n        int256 fCashAmountToPurchase = int88(uint88(uint256(trade) >> 128));\n        require(maturity > blockTime, \"Invalid maturity\");\n        // Require that the residual to purchase does not fall on an existing maturity (i.e.\n        // it is an idiosyncratic maturity)\n        require(\n            !DateTime.isValidMarketMaturity(cashGroup.maxMarketIndex, maturity, blockTime),\n            \"Non idiosyncratic maturity\"\n        );\n\n        address nTokenAddress = nTokenHandler.nTokenAddress(cashGroup.currencyId);\n        // prettier-ignore\n        (\n            /* currencyId */,\n            /* incentiveRate */,\n            uint256 lastInitializedTime,\n            /* assetArrayLength */,\n            bytes5 parameters\n        ) = nTokenHandler.getNTokenContext(nTokenAddress);\n\n        // Restrict purchasing until some amount of time after the last initialized time to ensure that arbitrage\n        // opportunities are not available (by generating residuals and then immediately purchasing them at a discount)\n        // This is always relative to the last initialized time which is set at utc0 when initialized, not the\n        // reference time. Therefore we will always restrict residual purchase relative to initialization, not reference.\n        // This is safer, prevents an attack if someone forces residuals and then somehow prevents market initialization\n        // until the residual time buffer passes.\n        require(\n            blockTime >\n                lastInitializedTime.add(\n                    uint256(uint8(parameters[Constants.RESIDUAL_PURCHASE_TIME_BUFFER])) * 1 hours\n                ),\n            \"Insufficient block time\"\n        );\n\n        int256 notional =\n            BitmapAssetsHandler.getifCashNotional(nTokenAddress, cashGroup.currencyId, maturity);\n        // Check if amounts are valid and set them to the max available if necessary\n        if (notional < 0 && fCashAmountToPurchase < 0) {\n            // Does not allow purchasing more negative notional than available\n            if (fCashAmountToPurchase < notional) fCashAmountToPurchase = notional;\n        } else if (notional > 0 && fCashAmountToPurchase > 0) {\n            // Does not allow purchasing more positive notional than available\n            if (fCashAmountToPurchase > notional) fCashAmountToPurchase = notional;\n        } else {\n            // Does not allow moving notional in the opposite direction\n            revert(\"Invalid amount\");\n        }\n\n        // If fCashAmount > 0 then this will return netAssetCash > 0, if fCashAmount < 0 this will return\n        // netAssetCash < 0. fCashAmount will go to the purchaser and netAssetCash will go to the nToken.\n        int256 netAssetCashNToken =\n            _getResidualPriceAssetCash(\n                cashGroup,\n                maturity,\n                blockTime,\n                fCashAmountToPurchase,\n                parameters\n            );\n\n        _updateNTokenPortfolio(\n            nTokenAddress,\n            cashGroup.currencyId,\n            maturity,\n            lastInitializedTime,\n            fCashAmountToPurchase,\n            netAssetCashNToken\n        );\n\n        emit nTokenResidualPurchase(\n            uint16(cashGroup.currencyId),\n            uint40(maturity),\n            purchaser,\n            fCashAmountToPurchase,\n            netAssetCashNToken\n        );\n\n        return (maturity, netAssetCashNToken.neg(), fCashAmountToPurchase);\n    }\n\n    /// @notice Returns the amount of asset cash required to purchase the nToken residual\n    function _getResidualPriceAssetCash(\n        CashGroupParameters memory cashGroup,\n        uint256 maturity,\n        uint256 blockTime,\n        int256 fCashAmount,\n        bytes6 parameters\n    ) internal view returns (int256) {\n        uint256 oracleRate = cashGroup.calculateOracleRate(maturity, blockTime);\n        // Residual purchase incentive is specified in ten basis point increments\n        uint256 purchaseIncentive =\n            uint256(uint8(parameters[Constants.RESIDUAL_PURCHASE_INCENTIVE])) *\n                Constants.TEN_BASIS_POINTS;\n\n        if (fCashAmount > 0) {\n            // When fCash is positive then we add the purchase incentive, the purchaser\n            // can pay less cash for the fCash relative to the oracle rate\n            oracleRate = oracleRate.add(purchaseIncentive);\n        } else if (oracleRate > purchaseIncentive) {\n            // When fCash is negative, we reduce the interest rate that the purchaser will\n            // borrow at, we do this check to ensure that we floor the oracle rate at zero.\n            oracleRate = oracleRate.sub(purchaseIncentive);\n        } else {\n            // If the oracle rate is less than the purchase incentive floor the interest rate at zero\n            oracleRate = 0;\n        }\n\n        int256 exchangeRate =\n            Market.getExchangeRateFromImpliedRate(oracleRate, maturity.sub(blockTime));\n\n        // Returns the net asset cash from the nToken perspective, which is the same sign as the fCash amount\n        return\n            cashGroup.assetRate.convertFromUnderlying(fCashAmount.divInRatePrecision(exchangeRate));\n    }\n\n    function _updateNTokenPortfolio(\n        address nTokenAddress,\n        uint256 currencyId,\n        uint256 maturity,\n        uint256 lastInitializedTime,\n        int256 fCashAmountToPurchase,\n        int256 netAssetCashNToken\n    ) private {\n        int256 finalNotional = BitmapAssetsHandler.addifCashAsset(\n            nTokenAddress,\n            currencyId,\n            maturity,\n            lastInitializedTime,\n            fCashAmountToPurchase.neg() // the nToken takes on the negative position\n        );\n\n        // Defensive check to ensure that fCash amounts do not flip signs\n        require(\n            (fCashAmountToPurchase > 0 && finalNotional >= 0) ||\n            (fCashAmountToPurchase < 0 && finalNotional <= 0)\n        );\n\n        // prettier-ignore\n        (\n            int256 nTokenCashBalance,\n            /* storedNTokenBalance */,\n            /* lastClaimTime */,\n            /* lastClaimIntegralSupply */\n        ) = BalanceHandler.getBalanceStorage(nTokenAddress, currencyId);\n        nTokenCashBalance = nTokenCashBalance.add(netAssetCashNToken);\n\n        // This will ensure that the cash balance is not negative\n        BalanceHandler.setBalanceStorageForNToken(nTokenAddress, currencyId, nTokenCashBalance);\n    }\n}\n", "sourceMap": "554:25119:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/external/actions/TradingAction.sol", "deployment": {"address": "0x917F709CAb62163Ea9298cDfa3db485a7f0F091a", "chainid": "5", "blockHeight": 6439050}}